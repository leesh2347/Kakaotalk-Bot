const config=require('pok_data');

const FS = FileStream;
Jsoup=org.jsoup.Jsoup;
const kalink=require('kaling_config');
const kaling=kalink.kaling;
const { KakaoLinkClient } = require('kakaolink');
const Kakao =new KakaoLinkClient(kaling.key,kaling.url);
Kakao.login(kaling.email,kaling.password);

const cmds=config.cmds;
const pokArr=config.pokArr;
const ballArr=config.ballArr;
const ballfail=config.ballfail;
const setting=config.setting;
const advfail=config.advfail;
const seasons=config.seasons;
const collectionnames=config.collectionnames;
const collectioncontents=config.collectioncontents;
const meganames=config.meganames;
const megaafternames=config.megaafternames;
const megapicture=config.megapicture;
const specialimgpoks=config.specialimgpoks;
const specialpoksimage=config.specialpoksimage;
const formchangenames=config.formchangenames;
const formchangestatus=config.formchangestatus;
const formchangeimage=config.formchangeimage;
const trainerranpoks=config.trainerranpoks;
var month=0;
const pathRank="sdcard/Devel/Pokemon/Data/ranking.json";  //Îû≠ÌÇπÌååÏùºÍ≤ΩÎ°ú
const pathchampRank="sdcard/Devel/Pokemon/Data/trainer/champlog.json";  //Ï±îÌîºÏñ∏Í∏∞Î°ùÌååÏùºÍ≤ΩÎ°ú
const pathseason="sdcard/Devel/Pokemon/Data/season.json";  //Í≥ÑÏ†àÌååÏùºÍ≤ΩÎ°ú
var typetexts=[" ","[‚ö™ÎÖ∏Îßê]","[üî•Î∂à]","[üåäÎ¨º]","[üåøÌíÄ]","[üïäÎπÑÌñâ]","[ü™®Î∞îÏúÑ]","[‚õ∞ÎïÖ]","[‚úäÍ≤©Ìà¨]","[‚õìÍ∞ïÏ≤†]","[üêûÎ≤åÎ†à]","[‚ùÑÏñºÏùå]","[‚ö°Ï†ÑÍ∏∞]","[üß™ÎèÖ]","[üëΩÏóêÏä§Ìçº]","[‚ò†Í≥†Ïä§Ìä∏]","[üòàÏïÖ]","[üå†ÎìúÎûòÍ≥§]","[üéÄÌéòÏñ¥Î¶¨]"];
var weathertexts=["[ÎßëÏùå]","[üåûÌñáÏÇ¥Ïù¥ Í∞ïÌï®]","[‚òîÎπÑ]","[üå™Î™®ÎûòÎ∞îÎûå]","[‚òÉÔ∏èÏã∏ÎùºÍ∏∞Îàà]"];
var weatherdesc=["","üåûÌñáÏÇ¥Ïù¥ Í∞ïÌï¥Ïöî.","‚òîÎπÑÍ∞Ä ÎÇ¥Î¶¨Í≥† ÏûàÏñ¥Ïöî.","üå™Î™®ÎûòÎ∞îÎûåÏù¥ ÏÑ∏Ï∞®Í≤å Î∂àÍ≥† ÏûàÏñ¥Ïöî.","‚òÉÔ∏èÏã∏ÎùºÍ∏∞ÎààÏù¥ ÎÇ¥Î¶¨Í≥† ÏûàÏñ¥Ïöî."];
var runpoks=["Ï∫êÏù¥Ïãú","ÎùºÏù¥ÏΩî","Ïä§Ïù¥Ïø§","Ïï§ÌÖåÏù¥","Ïó†ÎùºÏù¥Ìä∏","ÌÅ¨Î†àÏÑ∏Î¶¨ÏïÑ","ÌÜ†ÎÑ§Î°úÏä§","Î≥ºÌä∏Î°úÏä§","ÎùºÌã∞ÏïÑÏä§","ÎùºÌã∞Ïò§Ïä§","Î¶¥ÎßÅ","Îç∏Îπå","Í∞ÄÎîî","ÌååÏù¥Ïñ¥","Ïç¨Îçî","ÌîÑÎ¶¨Ï†∏"];
var ispokselect=0;
const more = "‚Äã";
var succrate=0;
var ispokfind=[];
var battlepokinfo=[];
var pokUser={};
var pokInv={};
var pokCol={};
var pokdelay={};
var advOn={};
var parse;
var poklink;
var img;
var isballwaiting=[];
var player1="";
var player2="";
var isbattle=0;
var player1retire=[];
var player2retire=[];
var gatchaplayers={};
var champplayers={};
var battletowerplayers={};
var battletowerlev={};
var player1ball="";
var player2ball="";
var player1maxhp=0;
var player2maxhp=0;
var weather=0; //1 ÏæåÏ≤≠ 2 ÎπÑ 3 Î™®ÎûòÎ∞îÎûå 4 Ïã∏ÎùºÍ∏∞Îàà
var player1pok={};
var player2pok={};
var player1pp=[];
var player2pp=[];
var gymnum=0;
var isplayer1bind=0;
var isnpcbattle=0;
var isplayer2bind=0;
var nextpokchoose=0;
var battleres="";
var trainerInv={};
var trainerpoknum=0;

Number.prototype.comma = function() {
	var coma=this.toString().replace(/(?=(\d{3})+(?!\d))/g, ",");
	if(coma[0]==",") coma=coma.substr(1);
return coma;
}

function read(target, res){
return JSON.parse(FileStream.read("sdcard/Devel/Pokemon/Data/"+target+".json"))[res];
}
function write(target, res){
var result = JSON.stringify(res);
var write = FileStream.write("sdcard/Devel/Pokemon/Data/"+target+".json", result);
return write;
}
function data(target){
return JSON.parse(FileStream.read("sdcard/Devel/Pokemon/Data/"+target+".json"));
}

function user(target, res, to){
var Data = data(target);
Data[res] = to;
var result = JSON.stringify(Data);
var write = FileStream.write("sdcard/Devel/Pokemon/Data/"+target+".json", result);
return write;
}

function pokimglink(pokename,formchange){//Ïπ¥ÎßÅ Ïù¥ÎØ∏ÏßÄ Ï£ºÏÜå. Ïù¥Í±∞Î°ú Î©îÍ∞ÄÏßÑÌôîÎÇò ÌèºÏ≤¥Ïù∏ÏßÄ Ïù¥ÎØ∏ÏßÄ ÎßÅÌÅ¨ Î≥ÄÍ≤Ω
	var imgg="";
	if(megaafternames.includes(pokename))
	{
		imgg=megapicture[megaafternames.indexOf(pokename)];
	}
	else if(specialimgpoks.includes(pokename))
	{
		imgg=specialpoksimage[specialimgpoks.indexOf(pokename)];
	}
	else if(formchange>0&&formchangenames.includes(pokename))
	{
		if(pokename!="ÏïÑÎ•¥ÏÑ∏Ïö∞Ïä§")
			imgg=formchangeimage[pokename][formchange];
		else
			imgg=Jsoup.connect("https://librewiki.net/wiki/"+pokename+"_(Ìè¨ÏºìÎ™¨)").get().select("meta[property=og:image]").attr("content");
	}
	else
		imgg=Jsoup.connect("https://librewiki.net/wiki/"+pokename+"_(Ìè¨ÏºìÎ™¨)").get().select("meta[property=og:image]").attr("content");
	return imgg;
}

function weatherjudge(atk,type){
	var at=atk;
	if(weather==1&&type==2)
		at=at*2;
	if(weather==1&&type==3)
		at=at/2;
	if(weather==2&&type==2)
		at=at/2;
	if(weather==2&&type==3)
		at=at*2;
	return at;
}

function newChampion(username,replier){
	let chamRank=JSON.parse(FileStream.read(pathchampRank));
	if(chamRank==null){
		let cdata={"Champnum":1,"Champlogs":[]};
			FileStream.write(pathchampRank, JSON.stringify(cdata));
			chamRank=JSON.parse(FileStream.read(pathchampRank));
		}
		if(chamRank["Champlogs"].length>1)
		{
			var oldchamp=chamRank["Champlogs"][chamRank["Champlogs"].length-1];
			pokUser[oldchamp]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+oldchamp+'.json'));
			pokInv[oldchamp]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+oldchamp+'_inv.json'));
			pokUser[oldchamp].rank=setting.rank.name[setting.rank.name.length-3];
			
			pokUser[oldchamp]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+oldchamp+'.json'));
			var b=0;
			b=ballArr.indexOf(pokUser[oldchamp].Ball);
			var nowr=0;
			nowr=setting.rank.name.length-3;
			while(pokUser[oldchamp].count.succ<=setting.rank.upif[nowr]){
				nowr--;
			}
			if(b>1){
				while(setting.ballupsucc[b-1]>pokUser[oldchamp].count.total)
				{
					b=b-1;
					pokUser[oldchamp].Ball=ballArr[b];
				}
			}
			pokUser[oldchamp].maxHp=setting.rank.maxHp[nowr];
			pokUser[oldchamp].rest=setting.rank.rest[nowr];
			pokUser[oldchamp].castT=setting.rank.castT[nowr];
			pokUser[oldchamp].success=setting.success+setting.rank.success[nowr];
			pokUser[oldchamp].rank=setting.rank.name[nowr];
			pokUser[oldchamp].Ball=ballArr[b];
			pokUser[oldchamp].successcatch.g5=setting.catchsuccess[0]+(setting.ballcatch[0]*b)+setting.rank.successcatch[nowr];
			pokUser[oldchamp].successcatch.g4=setting.catchsuccess[1]+(setting.ballcatch[1]*b)+setting.rank.successcatch[nowr];
			pokUser[oldchamp].successcatch.g3=setting.catchsuccess[2]+(setting.ballcatch[2]*b)+setting.rank.successcatch[nowr];
			pokUser[oldchamp].successcatch.g2=setting.catchsuccess[3]+(setting.ballcatch[3]*b)+setting.rank.successcatch[nowr];
			pokUser[oldchamp].successcatch.g1=setting.catchsuccess[4]+(setting.ballcatch[4]*b)+setting.rank.successcatch[nowr];
			if(b>0){
				pokUser[oldchamp].stat.g5=setting.p.g5+setting.ballg5[b];
				pokUser[oldchamp].stat.g4=setting.p.g4+setting.ballg4[b];
				pokUser[oldchamp].stat.g3=setting.p.g3+setting.ballg3[b];
			}
			if(pokUser[oldchamp].ribbon==undefined) pokUser[oldchamp].ribbon=setting.ribbon.name[0];
			if(pokUser[oldchamp].balldc==undefined) pokUser[oldchamp].balldc=setting.ribbon.balldc[0];
			if(pokUser[oldchamp].upgradedc==undefined) pokUser[oldchamp].upgradedc=setting.ribbon.upgradedc[0];
			pokUser[oldchamp].successcatch.g5=pokUser[oldchamp].successcatch.g5+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].successcatch.g4=pokUser[oldchamp].successcatch.g4+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].successcatch.g3=pokUser[oldchamp].successcatch.g3+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].successcatch.g2=pokUser[oldchamp].successcatch.g2+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].successcatch.g1=pokUser[oldchamp].successcatch.g1+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].stat.g4=pokUser[oldchamp].stat.g4+setting.ribbon.g4[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			pokUser[oldchamp].stat.g3=pokUser[oldchamp].stat.g3+setting.ribbon.g3[setting.ribbon.name.indexOf(pokUser[oldchamp].ribbon)];
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+oldchamp+'.json', JSON.stringify(pokUser[oldchamp]));
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+oldchamp+'_inv.json', JSON.stringify(pokInv[oldchamp]));
			java.lang.Thread.sleep(2000);
			replier.reply("@"+oldchamp+"\nÏÉàÎ°úÏö¥ Ï±îÌîºÏñ∏Ïùò Îì±Ïû•ÏúºÎ°ú Ï±îÌîºÏñ∏Ïùò ÏûêÎ¶¨ÏóêÏÑú ÎÇ¥Î†§ÏôîÏñ¥Ïöî.");
		}
		pokUser[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'.json'));
		pokInv[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json'));
		pokCol[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json'));
		var temparr=[];
		for(var i=0;i<pokInv[username].deck.length;i++)
		{
			temparr.push(pokInv[username].deck[i]);
		}
		var isfirstchamp=0;
		var curlev=[];
		if(chamRank["Champlogs"].indexOf(username)==(-1))
			isfirstchamp=1;
		chamRank["Champnum"]++;
		chamRank["Champlogs"].push(username);
		FileStream.write(pathchampRank, JSON.stringify(chamRank));
		let chamdata=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/trainer/champion.json"));
		chamdata.champname=username;
		let chamdeck=[];
		for(var i=0;i<temparr.length;i++)
		{
			chamdeck.push(temparr[i]);
		}
		var champdeckprint="";
		for(var i=0;i<chamdeck.length;i++)
		{
			curlev.push(pokInv[username].deck[i].level);
			champdeckprint=champdeckprint+"Lv."+chamdeck[i].level+" "+chamdeck[i].name+"\n";
			chamdeck[i].level=setting.championlev;
			
		}
		chamdata.deck=chamdeck;
		FileStream.write("sdcard/Devel/Pokemon/Data/trainer/champion.json", JSON.stringify(chamdata));
		nowr=setting.rank.name.indexOf(pokUser[username].rank);
		pokUser[username].maxHp=setting.rank.maxHp[setting.rank.name.length-2];
		pokUser[username].rest=setting.rank.rest[setting.rank.name.length-2];
		pokUser[username].castT=setting.rank.castT[setting.rank.name.length-2];
		pokUser[username].success=pokUser[username].success+setting.rank.success[setting.rank.name.length-2]-setting.rank.success[nowr];
		pokUser[username].successcatch.g5=pokUser[username].successcatch.g5+setting.rank.successcatch[setting.rank.name.length-2]-setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g4=pokUser[username].successcatch.g4+setting.rank.successcatch[setting.rank.name.length-2]-setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g3=pokUser[username].successcatch.g3+setting.rank.successcatch[setting.rank.name.length-2]-setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g2=pokUser[username].successcatch.g2+setting.rank.successcatch[setting.rank.name.length-2]-setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g1=pokUser[username].successcatch.g1+setting.rank.successcatch[setting.rank.name.length-2]-setting.rank.successcatch[nowr];
		pokUser[username].rank=setting.rank.name[setting.rank.name.length-2];
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		
		let p1;
		for(var i=0;i<pokInv[username].deck.length;i++)
		{
			p1=pokInv[username].deck[i];
				pokInv[username].deck[i].level=curlev[i];
				if(p1.formchange!=0){
				p1.hp=Math.ceil((read("Ìè¨ÏºìÎ™¨/"+p1.name+"_"+p1.formchange,"hp"))*p1.level/50);
				p1.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name+"_"+p1.formchange,"atk")*p1.level/50);
				p1.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name+"_"+p1.formchange,"def")*p1.level/50);
				p1.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name+"_"+p1.formchange,"spd")*p1.level/50);
				}
				else{
					p1.hp=Math.ceil((read("Ìè¨ÏºìÎ™¨/"+p1.name,"hp"))*p1.level/50);
					p1.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name,"atk")*p1.level/50);
					p1.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name,"def")*p1.level/50);
					p1.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p1.name,"spd")*p1.level/50);
				}
				pokInv[username].deck[i]=p1;

		}
		
		pokInv[username].item.push("Ï†ÑÏÑ§Ïïå");
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		if(champplayers[username]==null||champplayers[username]==undefined)
			champplayers[username]=0;
		champplayers[username]++;
		java.lang.Thread.sleep(2000);
		replier.reply("@"+username+"\n‚≠êÏ∂ïÌïòÌï©ÎãàÎã§!‚≠ê\n"+chamRank["Champlogs"].length+"Î≤àÏß∏ Ï±îÌîºÏñ∏Ïù¥ ÎêòÏóàÏäµÎãàÎã§!\nÏ±îÌîºÏñ∏ Îã¨ÏÑ± Î≥¥ÏÉÅÏúºÎ°ú Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò ÏïåÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.\n\n\nÏ†ÑÎãπÎì±Î°ùÏùÑ Ï∂ïÌïòÌï©ÎãàÎã§!"+"\u200b".repeat(500)+"\n"+champdeckprint);
		if(pokCol[username]["???"].includes(setting.leaguecharacter))
		{
			
		}
		else
		{
			giveleaguecharacter(username);
			replier.reply("@"+username+"\nÏ±îÌîºÏñ∏ Îã¨ÏÑ± Î≥¥ÏÉÅÏúºÎ°ú Î¶¨Í∑∏ Ï∫êÎ¶≠ÌÑ∞Ïù∏ Lv.200 <ü¶ÑÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ü¶Ñ> "+setting.leaguecharacter+"(Ïù¥)Í∞Ä ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.");
			for(var ii of collectionnames){
				if(collectioncontents[collectionnames.indexOf(ii)].includes(setting.leaguecharacter))
				{
					if(pokCol[username][ii].indexOf(setting.leaguecharacter)==(-1))
					{
						pokCol[username][ii].push(setting.leaguecharacter)
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json', JSON.stringify(pokCol[username]));
						break;
					}
				}
			}
			replier.reply("@"+username+"\nÎèÑÍ∞êÏùò ["+ii+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
			updatecollection(replier,username);
		}
}

function giveleaguecharacter(username){
	let pokname=setting.leaguecharacter;
	var skillsarr=read("Ìè¨ÏºìÎ™¨/"+pokname,"skills");
	var caughtpokskills=[];
	var poklev=200;
	if(skillsarr.length<5)
		caughtpokskills=skillsarr;
	else
	{
		while(caughtpokskills.length<4)
		{
			var t=skillsarr[Math.floor(Math.random()*skillsarr.length)];
			t=t.replace("DP","").replace("Pt","");
			if(caughtpokskills.indexOf(t)==(-1))
				caughtpokskills.push(t);
		}
	}
	var caughtpokhp=read("Ìè¨ÏºìÎ™¨/"+pokname,"hp");
	let caughtpok={
		'name':pokname,
		'level':poklev,
		'hp': Math.ceil(caughtpokhp*poklev/50),
		'atk': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"atk")*poklev/50),
		'def': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"def")*poklev/50),
		'spd': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"spd")*poklev/50),
		'skills':caughtpokskills, //ÏúÑ 4Í∞úÎäî json read
		'skillslocked':[],
		'formchange':0,
		'islocked':0
	};
	pokInv[username].box.push(caughtpok);
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
}

function giveribbonreward(username,ribbonname,replier){
	if(ribbonname==setting.ribbon.name[3]){
		pokInv[username].item.push("ÏùºÎ∞òÏïå");
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú Ìè¨ÏºìÎ™¨Ïùò ÏïåÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.\n"+cmds.egg+" Î™ÖÎ†πÏñ¥Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
	}
	else if(ribbonname==setting.ribbon.name[4]){
		pokUser[username].gold=pokUser[username].gold+19999999;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú 2000Îßå ÏõêÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.");
	}
	if(ribbonname==setting.ribbon.name[5]){
		pokInv[username].item.push("Ï†ÑÏÑ§Ïïå");
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò ÏïåÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.\n"+cmds.legendegg+" Î™ÖÎ†πÏñ¥Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
	}
	else if(ribbonname==setting.ribbon.name[6]){
		pokUser[username].gold=pokUser[username].gold+299999999;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú 3Ïñµ ÏõêÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.");
	}
	else if(ribbonname==setting.ribbon.name[7]){
		pokInv[username].item.push("Ï†ÑÏÑ§Ïïå");
		pokInv[username].item.push("Ï†ÑÏÑ§Ïïå");
		pokInv[username].item.push("Ï†ÑÏÑ§Ïïå");
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò Ïïå 3Í∞úÍ∞Ä ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.\n"+cmds.legendegg+" Î™ÖÎ†πÏñ¥Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
	}
	else if(ribbonname==setting.ribbon.name[8]){
		pokUser[username].gold=pokUser[username].gold+999999999;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply("@"+username+"\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú 10Ïñµ ÏõêÏù¥ ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§.");
	}
	else if(ribbonname==setting.ribbon.name[9]){
		giveleaguecharacter(username);
		replier.reply("@"+username+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\nÎ¶¨Î≥∏ Îì±Í∏âÏóÖ Î≥¥ÏÉÅÏúºÎ°ú Lv."+(setting.championlev-10)+" <ü¶ÑÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ü¶Ñ> "+setting.leaguecharacter+"(Î•º) ÌöçÎìùÌñàÏäµÎãàÎã§.");
	}
}

function printskills(skills,locked){
	var res="";
	var power="";
	var accr="";
	
	for(var i=0;i<(skills.length);i++)
	{
		try{
			if(read("Í∏∞Ïà†/"+skills[i],"damage")==9999)
				power="ÏùºÍ≤©ÌïÑÏÇ¥";
			else if(read("Í∏∞Ïà†/"+skills[i],"damage")<3)
				power="ÏûêÏã†Ïù¥ Î∞õÏùÄ Îç∞ÎØ∏ÏßÄX"+read("Í∏∞Ïà†/"+skills[i],"damage")+"Î∞∞";
			else power=read("Í∏∞Ïà†/"+skills[i],"damage");
			if(read("Í∏∞Ïà†/"+skills[i],"accr")==9999)
				accr="Î∞òÎìúÏãú Î™ÖÏ§ë";
			else accr=read("Í∏∞Ïà†/"+skills[i],"accr")+"%";
			res=res+skills[i]+" "+typetexts[read("Í∏∞Ïà†/"+skills[i],"type")]+"\nÏúÑÎ†•:"+power+"  PP:"+read("Í∏∞Ïà†/"+skills[i],"pp")+"  Î™ÖÏ§ëÎ•†:"+accr;
			if(read("Í∏∞Ïà†/"+skills[i],"addi")==1)
				res=res+"\nüí¨ Í≥µÍ≤©Ïãú Î∞òÎèôÏúºÎ°ú 1ÌÑ¥ Ïâº";
			else if(read("Í∏∞Ïà†/"+skills[i],"addi")==3)
				res=res+"\nüí• Í≥µÍ≤©Ïãú 1/4Ïùò Î∞òÎèô Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏùå";
			else if(read("Í∏∞Ïà†/"+skills[i],"addi")==2)
				res=res+"\nüíö Í≥µÍ≤©Ïãú 1/4 Îç∞ÎØ∏ÏßÄÎßåÌÅº Ï≤¥Î†• ÌöåÎ≥µ";
			else if(read("Í∏∞Ïà†/"+skills[i],"addi")==9)
				res=res+"\nüí£ Í≥µÍ≤©Ïãú ÏûêÌè≠ÌïòÏó¨ Î≥∏Ïù∏Ïùò Ï≤¥Î†•Ïù¥ 1Ïù¥ Îê®";
			res=res+"\n\n";
		}catch(e){
			res=res+skills[i]+" (Îç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞ Ïò§Î•ò)\n\n";
		}
	}
	res=res+"\u200b".repeat(500)+"\n";
	for(var i=0;i<(locked.length);i++)
	{
		try{
			if(read("Í∏∞Ïà†/"+locked[i],"damage")==9999)
				power="ÏùºÍ≤©ÌïÑÏÇ¥";
			else if(read("Í∏∞Ïà†/"+locked[i],"damage")<3)
				power="ÏûêÏã†Ïù¥ Î∞õÏùÄ Îç∞ÎØ∏ÏßÄX"+read("Í∏∞Ïà†/"+locked[i],"damage")+"Î∞∞";
			else power=read("Í∏∞Ïà†/"+locked[i],"damage");
			if(read("Í∏∞Ïà†/"+locked[i],"accr")==9999)
				accr="Î∞òÎìúÏãú Î™ÖÏ§ë";
			else accr=read("Í∏∞Ïà†/"+locked[i],"accr")+"%";
			res=res+"üîí"+locked[i]+" "+typetexts[read("Í∏∞Ïà†/"+locked[i],"type")]+"\nÏúÑÎ†•:"+power+"  PP:"+read("Í∏∞Ïà†/"+locked[i],"pp")+"  Î™ÖÏ§ëÎ•†:"+accr;
			if(read("Í∏∞Ïà†/"+locked[i],"addi")==1)
				res=res+"\nüí¨ Í≥µÍ≤©Ïãú Î∞òÎèôÏúºÎ°ú 1ÌÑ¥ Ïâº";
			else if(read("Í∏∞Ïà†/"+locked[i],"addi")==3)
				res=res+"\nüí• Í≥µÍ≤©Ïãú 1/4Ïùò Î∞òÎèô Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏùå";
			else if(read("Í∏∞Ïà†/"+locked[i],"addi")==2)
				res=res+"\nüíö Í≥µÍ≤©Ïãú 1/4 Îç∞ÎØ∏ÏßÄÎßåÌÅº Ï≤¥Î†• ÌöåÎ≥µ";
			else if(read("Í∏∞Ïà†/"+locked[i],"addi")==9)
				res=res+"\nüí£ Í≥µÍ≤©Ïãú ÏûêÌè≠ÌïòÏó¨ Î≥∏Ïù∏Ïùò Ï≤¥Î†•Ïù¥ 1Ïù¥ Îê®";
			res=res+"\n\n";
		}catch(e){
			res=res+"üîí"+locked[i]+" (Îç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞ Ïò§Î•ò)\n\n";
		}
	}
	return res;
}

function printbattlekakaolink(room,replier){
	try{
	var img1=pokimglink(player1pok.name,player1pok.formchange);
	var img2=pokimglink(player2pok.name,player2pok.formchange);
	
	Kakao.sendLink(room, {
			"link_ver":"4.0",
			"template_id":(67300),
			"template_args":{
			//Ïù¥Í≥≥Ïóê ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.
			'player1img':img1,
			'player2img':img2,
			'player1':"Lv."+player1pok.level+" "+player1pok.name,
			'player2':"Lv."+player2pok.level+" "+player2pok.name,
			'player1desc':"["+player1pok.hp+"/"+player1maxhp+"]",
			'player2desc':"["+player2pok.hp+"/"+player2maxhp+"]"
			}
			}, "custom")
	}catch(e){
		replier.reply("Ïπ¥Ïπ¥Ïò§ÎßÅÌÅ¨ Ïò§Î•ò. Î¶¨ÏÖã ÌïúÎ≤à Ìï¥Ï£ºÏÑ∏Ïöî.\n\nLv."+player1pok.level+" "+player1pok.name+"\n["+player1pok.hp+"/"+player1maxhp+"]\n\nLv."+player2pok.level+" "+player2pok.name+"\n["+player2pok.hp+"/"+player2maxhp+"]")
	}
}

function battleturn(room,replier) //Î∞∞ÌãÄ Íµ¨ÌòÑ Ìï®Ïàò
{
			var player1skillarr=player1pok.skills;
			for(var j=0;j<player1pok.skillslocked.length;j++)
				player1skillarr.push(player1pok.skillslocked[j]);
			
			var player2skillarr=player2pok.skills;
			for(var j=0;j<player2pok.skillslocked.length;j++)
				player2skillarr.push(player2pok.skillslocked[j]);
			var player1skill="";
			var player2skill="";
			do{
				player1skill=player1skillarr[Math.floor(Math.random()*player1skillarr.length)];
			}while(player1pp[player1skillarr.indexOf(player1skill)]);
			do{
				player2skill=player2skillarr[Math.floor(Math.random()*player2skillarr.length)];
			}while(player2pp[player2skillarr.indexOf(player2skill)]);
			var player1spd=0;
			var player2spd=0;
			if(player1pok.spd>player2pok.spd)
				player1spd=1;
			else if(player2pok.spd>player1pok.spd)
				player2spd=1;
			else
			{
				if(Math.floor(Math.random()*2)==0) player1spd=1;
				else player2spd=1;
			}
			player1spd=player1spd+Number(read("Í∏∞Ïà†/"+player1skill,"priority"))*2;
			player2spd=player2spd+Number(read("Í∏∞Ïà†/"+player2skill,"priority"))*2;
			if(player1spd>player2spd){
				//ÏÑ†Í≥µ Ìè¨ÏºìÎ™¨ Í≥µÍ≤©
				if(isplayer1bind==1)
				{
					battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú ÏõÄÏßÅÏùº Ïàò ÏóÜÏóàÏñ¥Ïöî!\n";
					isplayer1bind=0;
				}
				else
				{
					battleres=battleres+"["+player1+"] "+player1pok.name+"Ïùò "+player1skill+"!\n";
					player1pp[player1skillarr.indexOf(player1skill)]--;
					try{
					var accr=Number(read("Í∏∞Ïà†/"+player1skill,"accr"));
					if(player1pok.level<player2pok.level)
						accr=Math.ceil(accr*(100-(player2pok.level-player1pok.level)*2)/100);
					if(Number(pokUser[player2].activecollection.includes(9)))
						accr=Math.ceil(accr*(100-pokUser[player2].collectionlev*3)/100);
					if(accr<Number(read("Í∏∞Ïà†/"+player1skill,"accr"))/2)
						accr=Number(read("Í∏∞Ïà†/"+player1skill,"accr"))/2;
					if(Math.floor(Math.random()*100)<accr){
						var atk=Math.ceil(player1pok.atk*read("Í∏∞Ïà†/"+player1skill,"damage")/300*(2000-player2pok.def)/2000);
						if(read("Í∏∞Ïà†/"+player1skill,"addi")==4)
							atk=atk*(player1maxhp-player1pok.hp)/2;
						if(player1pok.formchange==0){
							if(read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1")||read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2"))
							atk=atk*1.5;
						}
						else{
							if(read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type1")||read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type2"))
							atk=atk*1.5;
						}
						
						atk=weatherjudge(atk,read("Í∏∞Ïà†/"+player1skill,"type"));
						var judge;
						if(player2pok.formchange==0){
							judge=typejudge(read("Í∏∞Ïà†/"+player1skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2"));
						}
						else{
							judge=typejudge(read("Í∏∞Ïà†/"+player1skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type1"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type2"));
						}
						atk=atk*judge;
						if(isnpcbattle==0){
						if(pokUser[player1].activecollection.includes(1)||pokUser[player1].activecollection.includes(2))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(3)||pokUser[player1].activecollection.includes(4))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(5))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(6)||pokUser[player1].activecollection.includes(7))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						}
						if(pokUser[player2].activecollection.includes(12)&&judge>1)
							atk=atk*(100-pokUser[player2].collectionlev*5)/100;
						player2pok.hp=Math.ceil(player2pok.hp-atk);
						if(player2pok.hp<0){
							if(Number(pokUser[player2].activecollection.includes(14)))
							{
								if(Math.floor(Math.random()*100)<pokUser[player2].collectionlev*4)
								{
									player2pok.hp=1;
									battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî ÏπòÎ™ÖÏ†ÅÏù∏ Í≥µÍ≤©ÏúºÎ°úÎ∂ÄÌÑ∞ Í∞ÄÍπåÏä§Î°ú Î≤ÑÌÖºÏñ¥Ïöî!\n";
								}
								else
									player2pok.hp=0;
							}
							else
								player2pok.hp=0;
						}
						if(judge>1) battleres=battleres+"["+player1+"] Ìö®Í≥ºÍ∞Ä ÍµâÏû•ÌñàÏñ¥Ïöî!\n";
						else if(judge==0) battleres=battleres+"["+player1+"] ÏÉÅÎåÄÏóêÍ≤ê Ìö®Í≥ºÍ∞Ä ÏóÜÎäî ÎìØÌï¥Ïöî...\n";
						else if(judge<1) battleres=battleres+"["+player1+"] Ìö®Í≥ºÍ∞Ä Î≥ÑÎ°úÏù∏ ÎìØÌï¥Ïöî\n";
						
						if(read("Í∏∞Ïà†/"+player1skill,"addi")==3&&judge!=0)
						{
							player1pok.hp=Math.ceil(player1pok.hp-atk/4);
							if(player1pok.hp<1) player1pok.hp=1;
							battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏóàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==2&&judge!=0)
						{
							player1pok.hp=Math.ceil(player1pok.hp+atk/4);
							if(player1pok.hp>player1maxhp) player1pok.hp=player1maxhp;
							battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©ÏùÑ ÌÜµÌï¥ Ï≤¥Î†•ÏùÑ Ìù°ÏàòÌñàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==1&&player1skill!="ÏÜîÎùºÎπî"&&weather!=1)
						{
							isplayer1bind=1;
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==9)
						{
							player1pok.hp=1;
							
						}
						battleres=battleres+"\n";
						battleres=battleres+"Lv."+player1pok.level+" "+player1pok.name+"   ["+player1pok.hp+"/"+player1maxhp+"]\n";
						battleres=battleres+"Lv."+player2pok.level+" "+player2pok.name+"   ["+player2pok.hp+"/"+player2maxhp+"]\n";
						battleres=battleres+"\n";
					}
					else
						battleres=battleres+"["+player1+"] ÏïÑÏâΩÍ≤å "+player1pok.name+"Ïùò Í∏∞Ïà†ÏùÄ ÎπóÎÇòÍ∞îÏñ¥Ïöî!\n";
					}
					catch(e){
						battleres=battleres+"["+player1+"] Í∏∞Ïà† ÏÇ¨Ïö©Ïóê Ïã§Ìå®ÌñàÏñ¥Ïöî! (Îç∞Ïù¥ÌÑ∞ Ïò§Î•ò)\n";
					}
					if(player2pok.hp<1) return;
					
				}
				//ÎÅù
				
				//ÌõÑÍ≥µ Ìè¨ÏºìÎ™¨ Í≥µÍ≤©
				if(isplayer2bind==1)
				{
					battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú ÏõÄÏßÅÏùº Ïàò ÏóÜÏóàÏñ¥Ïöî!\n";
					isplayer2bind=0;
				}
				else
				{
					battleres=battleres+"["+player2+"] "+player2pok.name+"Ïùò "+player2skill+"!\n";
					player2pp[player2skillarr.indexOf(player2skill)]--;
					try{
					var accr=Number(read("Í∏∞Ïà†/"+player2skill,"accr"));
					if(player2pok.level<player1pok.level)
						accr=Math.ceil(accr*(100-(player1pok.level-player2pok.level)*2)/100);
					if(isnpcbattle==0){
					if(pokUser[player1].activecollection.includes(9))
						accr=Math.ceil(accr*(100-pokUser[player1].collectionlev*3)/100);
					}
					if(accr<Number(read("Í∏∞Ïà†/"+player2skill,"accr"))/2)
						accr=Number(read("Í∏∞Ïà†/"+player2skill,"accr"))/2;
					if(Math.floor(Math.random()*100)<accr){
						var atk=Math.ceil(player2pok.atk*read("Í∏∞Ïà†/"+player2skill,"damage")/300*(2000-player1pok.def)/2000);
						if(read("Í∏∞Ïà†/"+player2skill,"addi")==4)
							atk=atk*(player2maxhp-player2pok.hp)/2;
						if(player2pok.formchange==0){
							if(read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1")||read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2"))
							atk=atk*1.5;
						}
						else{
							if(read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type1")||read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type2"))
							atk=atk*1.5;
						}
						
						atk=weatherjudge(atk,read("Í∏∞Ïà†/"+player2skill,"type"));
						var judge;
						if(player1pok.formchange==0){
							judge=typejudge(read("Í∏∞Ïà†/"+player2skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2"));
						}
						else{
							judge=typejudge(read("Í∏∞Ïà†/"+player2skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type1"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type2"));
						}
						atk=atk*judge;
						if(pokUser[player2].activecollection.includes(1)||pokUser[player2].activecollection.includes(2))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(3)||pokUser[player2].activecollection.includes(4))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(5))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(6)||pokUser[player2].activecollection.includes(7))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(isnpcbattle==0){
						if(pokUser[player1].activecollection.includes(12)&&judge>1)
							atk=atk*(100-pokUser[player1].collectionlev*5)/100;
						}
						player1pok.hp=Math.ceil(player1pok.hp-atk);
						if(player1pok.hp<0){
							if(isnpcbattle==0)
							{
								if(pokUser[player1].activecollection.includes(14)){
								if(Math.floor(Math.random()*100)<pokUser[player1].collectionlev*4)
								{
									player1pok.hp=1;
									battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî ÏπòÎ™ÖÏ†ÅÏù∏ Í≥µÍ≤©ÏúºÎ°úÎ∂ÄÌÑ∞ Í∞ÄÍπåÏä§Î°ú Î≤ÑÌÖºÏñ¥Ïöî!\n";
								}
								else
									player1pok.hp=0;
								}
							}
							else
								player1pok.hp=0;
						}
						if(judge>1) battleres=battleres+"["+player2+"] Ìö®Í≥ºÍ∞Ä ÍµâÏû•ÌñàÏñ¥Ïöî!\n";
						else if(judge==0) battleres=battleres+"["+player2+"] ÏÉÅÎåÄÏóêÍ≤ê Ìö®Í≥ºÍ∞Ä ÏóÜÎäî ÎìØÌï¥Ïöî...\n";
						else if(judge<1) battleres=battleres+"["+player2+"] Ìö®Í≥ºÍ∞Ä Î≥ÑÎ°úÏù∏ ÎìØÌï¥Ïöî\n";
						
						if(read("Í∏∞Ïà†/"+player2skill,"addi")==3&&judge!=0)
						{
							player2pok.hp=Math.ceil(player2pok.hp-atk/4);
							if(player2pok.hp<1) player2pok.hp=1;
							battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏóàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==2&&judge!=0)
						{
							player2pok.hp=Math.ceil(player2pok.hp+atk/4);
							if(player2pok.hp>player2maxhp) player2pok.hp=player2maxhp;
							battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©ÏùÑ ÌÜµÌï¥ Ï≤¥Î†•ÏùÑ Ìù°ÏàòÌñàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==1&&player2skill!="ÏÜîÎùºÎπî"&&weather!=1)
						{
							isplayer2bind=1;
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==9)
						{
							player2pok.hp=1;
							
						}
						battleres=battleres+"\n";
						battleres=battleres+"Lv."+player1pok.level+" "+player1pok.name+"   ["+player1pok.hp+"/"+player1maxhp+"]\n";
						battleres=battleres+"Lv."+player2pok.level+" "+player2pok.name+"   ["+player2pok.hp+"/"+player2maxhp+"]\n";
						battleres=battleres+"\n";
					}
					else
						battleres=battleres+"["+player2+"] ÏïÑÏâΩÍ≤å "+player2pok.name+"Ïùò Í∏∞Ïà†ÏùÄ ÎπóÎÇòÍ∞îÏñ¥Ïöî!\n";
					}
					catch(e){
						battleres=battleres+"["+player2+"] Í∏∞Ïà† ÏÇ¨Ïö©Ïóê Ïã§Ìå®ÌñàÏñ¥Ïöî! (Îç∞Ïù¥ÌÑ∞ Ïò§Î•ò)\n";
					}
				}
				//ÎÅù 
			}
			else{
				//ÏÑ†Í≥µ Ìè¨ÏºìÎ™¨ Í≥µÍ≤©
				if(isplayer2bind==1)
				{
					battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú ÏõÄÏßÅÏùº Ïàò ÏóÜÏóàÏñ¥Ïöî!\n";
					isplayer2bind=0;
				}
				else
				{
					battleres=battleres+"["+player2+"] "+player2pok.name+"Ïùò "+player2skill+"!\n";
					player2pp[player2skillarr.indexOf(player2skill)]--;
					try{
					var accr=Number(read("Í∏∞Ïà†/"+player2skill,"accr"));
					if(player2pok.level<player1pok.level)
						accr=Math.ceil(accr*(100-(player1pok.level-player2pok.level)*2)/100);
					if(isnpcbattle==0){
					if(pokUser[player1].activecollection.includes(9))
						accr=Math.ceil(accr*(100-pokUser[player1].collectionlev*3)/100);
					}
					if(accr<Number(read("Í∏∞Ïà†/"+player2skill,"accr"))/2)
						accr=Number(read("Í∏∞Ïà†/"+player2skill,"accr"))/2;
					if(Math.floor(Math.random()*100)<accr){
						var atk=Math.ceil(player2pok.atk*read("Í∏∞Ïà†/"+player2skill,"damage")/300*(2000-player1pok.def)/2000);
						if(read("Í∏∞Ïà†/"+player2skill,"addi")==4)
							atk=atk*(player2maxhp-player2pok.hp)/2;
						if(player2pok.formchange==0){
							if(read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1")||read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2"))
							atk=atk*1.5;
						}
						else{
							if(read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type1")||read("Í∏∞Ïà†/"+player2skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type2"))
							atk=atk*1.5;
						}
						
						atk=weatherjudge(atk,read("Í∏∞Ïà†/"+player2skill,"type"));
						var judge;
						if(player1pok.formchange==0){
							judge=typejudge(read("Í∏∞Ïà†/"+player2skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2"));
						}
						else{
							judge=typejudge(read("Í∏∞Ïà†/"+player2skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type1"),read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type2"));
						}
						atk=atk*judge;
						if(pokUser[player2].activecollection.includes(1)||pokUser[player2].activecollection.includes(2))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(3)||pokUser[player2].activecollection.includes(4))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(5))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(pokUser[player2].activecollection.includes(6)||pokUser[player2].activecollection.includes(7))
							atk=atk*(pokUser[player2].collectionlev*2+100)/100;
						if(isnpcbattle==0){
						if(pokUser[player1].activecollection.includes(12)&&judge>1)
							atk=atk*(100-pokUser[player1].collectionlev*5)/100;
						}
						player1pok.hp=Math.ceil(player1pok.hp-atk);
						if(player1pok.hp<0){
							if(isnpcbattle==0)
							{
								if(pokUser[player1].activecollection.includes(14)){
								if(Math.floor(Math.random()*100)<pokUser[player1].collectionlev*4)
								{
									player1pok.hp=1;
									battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî ÏπòÎ™ÖÏ†ÅÏù∏ Í≥µÍ≤©ÏúºÎ°úÎ∂ÄÌÑ∞ Í∞ÄÍπåÏä§Î°ú Î≤ÑÌÖºÏñ¥Ïöî!\n";
								}
								else
									player1pok.hp=0;
								}
							}
							else
								player1pok.hp=0;
						}
						if(judge>1) battleres=battleres+"["+player2+"] Ìö®Í≥ºÍ∞Ä ÍµâÏû•ÌñàÏñ¥Ïöî!\n";
						else if(judge==0) battleres=battleres+"["+player2+"] ÏÉÅÎåÄÏóêÍ≤ê Ìö®Í≥ºÍ∞Ä ÏóÜÎäî ÎìØÌï¥Ïöî...\n";
						else if(judge<1) battleres=battleres+"["+player2+"] Ìö®Í≥ºÍ∞Ä Î≥ÑÎ°úÏù∏ ÎìØÌï¥Ïöî\n";
						
						if(read("Í∏∞Ïà†/"+player2skill,"addi")==3&&judge!=0)
						{
							player2pok.hp=Math.ceil(player2pok.hp-atk/4);
							if(player2pok.hp<1) player2pok.hp=1;
							battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏóàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==2&&judge!=0)
						{
							player2pok.hp=Math.ceil(player2pok.hp+atk/4);
							if(player2pok.hp>player2maxhp) player2pok.hp=player2maxhp;
							battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî Í≥µÍ≤©ÏùÑ ÌÜµÌï¥ Ï≤¥Î†•ÏùÑ Ìù°ÏàòÌñàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==1&&player2skill!="ÏÜîÎùºÎπî"&&weather!=1)
						{
							isplayer2bind=1;
							
						}
						else if(read("Í∏∞Ïà†/"+player2skill,"addi")==9)
						{
							player2pok.hp=1;
							
						}
						battleres=battleres+"\n";
						battleres=battleres+"Lv."+player1pok.level+" "+player1pok.name+"   ["+player1pok.hp+"/"+player1maxhp+"]\n";
						battleres=battleres+"Lv."+player2pok.level+" "+player2pok.name+"   ["+player2pok.hp+"/"+player2maxhp+"]\n";
						battleres=battleres+"\n";
					}
					else
						battleres=battleres+"["+player2+"] ÏïÑÏâΩÍ≤å "+player2pok.name+"Ïùò Í∏∞Ïà†ÏùÄ ÎπóÎÇòÍ∞îÏñ¥Ïöî!\n";
					}
					catch(e){
						battleres=battleres+"["+player2+"] Í∏∞Ïà† ÏÇ¨Ïö©Ïóê Ïã§Ìå®ÌñàÏñ¥Ïöî! (Îç∞Ïù¥ÌÑ∞ Ïò§Î•ò)\n";
					}
					if(player1pok.hp<1) return;
				}
				//ÎÅù
				
				//ÌõÑÍ≥µ Ìè¨ÏºìÎ™¨ Í≥µÍ≤©
				if(isplayer1bind==1)
				{
					battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú ÏõÄÏßÅÏùº Ïàò ÏóÜÏóàÏñ¥Ïöî!\n";
					isplayer1bind=0;
				}
				else
				{
					battleres=battleres+"["+player1+"] "+player1pok.name+"Ïùò "+player1skill+"!\n";
					player1pp[player1skillarr.indexOf(player1skill)]--;
					try{
					var accr=Number(read("Í∏∞Ïà†/"+player1skill,"accr"));
					if(player1pok.level<player2pok.level)
						accr=Math.ceil(accr*(100-(player2pok.level-player1pok.level)*2)/100);
					if(Number(pokUser[player2].activecollection.includes(9)))
						accr=Math.ceil(accr*(100-pokUser[player2].collectionlev*3)/100);
					if(accr<Number(read("Í∏∞Ïà†/"+player1skill,"accr"))/2)
						accr=Number(read("Í∏∞Ïà†/"+player1skill,"accr"))/2;
					if(Math.floor(Math.random()*100)<accr){
						var atk=Math.ceil(player1pok.atk*read("Í∏∞Ïà†/"+player1skill,"damage")/300*(2000-player2pok.def)/2000);
						if(read("Í∏∞Ïà†/"+player1skill,"addi")==4)
							atk=atk*(player1maxhp-player1pok.hp)/2;
						if(player1pok.formchange==0){
							if(read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1")||read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2"))
							atk=atk*1.5;
						}
						else{
							if(read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type1")||read("Í∏∞Ïà†/"+player1skill,"type")==read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"type2"))
							atk=atk*1.5;
						}
						
						atk=weatherjudge(atk,read("Í∏∞Ïà†/"+player1skill,"type"));
						var judge;
						if(player2pok.formchange==0){
							judge=typejudge(read("Í∏∞Ïà†/"+player1skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2"));
						}
						else{
							judge=typejudge(read("Í∏∞Ïà†/"+player1skill,"type"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type1"),read("Ìè¨ÏºìÎ™¨/"+player2pok.name+"_"+player2pok.formchange,"type2"));
						}
						atk=atk*judge;
						if(isnpcbattle==0){
						if(pokUser[player1].activecollection.includes(1)||pokUser[player1].activecollection.includes(2))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(3)||pokUser[player1].activecollection.includes(4))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(5))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						if(pokUser[player1].activecollection.includes(6)||pokUser[player1].activecollection.includes(7))
							atk=atk*(pokUser[player1].collectionlev*2+100)/100;
						}
						if(pokUser[player2].activecollection.includes(12)&&judge>1)
							atk=atk*(100-pokUser[player2].collectionlev*5)/100;
						player2pok.hp=player2pok.hp-atk;
						if(player2pok.hp<0){
							if(Number(pokUser[player2].activecollection.includes(14)))
							{
								if(Math.floor(Math.random()*100)<pokUser[player2].collectionlev*4)
								{
									player2pok.hp=1;
									battleres=battleres+"["+player2+"] "+player2pok.name+"Îäî ÏπòÎ™ÖÏ†ÅÏù∏ Í≥µÍ≤©ÏúºÎ°úÎ∂ÄÌÑ∞ Í∞ÄÍπåÏä§Î°ú Î≤ÑÌÖºÏñ¥Ïöî!\n";
								}
								else
									player2pok.hp=0;
							}
							else
								player2pok.hp=0;
						}
						if(judge>1) battleres=battleres+"["+player1+"] Ìö®Í≥ºÍ∞Ä ÍµâÏû•ÌñàÏñ¥Ïöî!";
						else if(judge==0) battleres=battleres+"["+player1+"] ÏÉÅÎåÄÏóêÍ≤ê Ìö®Í≥ºÍ∞Ä ÏóÜÎäî ÎìØÌï¥Ïöî...\n";
						else if(judge<1) battleres=battleres+"["+player1+"] Ìö®Í≥ºÍ∞Ä Î≥ÑÎ°úÏù∏ ÎìØÌï¥Ïöî\n";
						
						if(read("Í∏∞Ïà†/"+player1skill,"addi")==3&&judge!=0)
						{
							player1pok.hp=Math.ceil(player1pok.hp-atk/4);
							if(player1pok.hp<1) player1pok.hp=1;
							battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©Ïùò Î∞òÎèôÏúºÎ°ú Îç∞ÎØ∏ÏßÄÎ•º ÏûÖÏóàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==2&&judge!=0)
						{
							player1pok.hp=Math.ceil(player1pok.hp+atk/4);
							if(player1pok.hp>player1maxhp) player1pok.hp=player1maxhp;
							battleres=battleres+"["+player1+"] "+player1pok.name+"Îäî Í≥µÍ≤©ÏùÑ ÌÜµÌï¥ Ï≤¥Î†•ÏùÑ Ìù°ÏàòÌñàÏñ¥Ïöî!\n";
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==1&&player1skill!="ÏÜîÎùºÎπî"&&weather!=1)
						{
							isplayer1bind=1;
							
						}
						else if(read("Í∏∞Ïà†/"+player1skill,"addi")==9)
						{
							player1pok.hp=1;
							
						}
						battleres=battleres+"\n";
						battleres=battleres+"Lv."+player1pok.level+" "+player1pok.name+"   ["+player1pok.hp+"/"+player1maxhp+"]\n";
						battleres=battleres+"Lv."+player2pok.level+" "+player2pok.name+"   ["+player2pok.hp+"/"+player2maxhp+"]\n";
						battleres=battleres+"\n";
					}
					else
						battleres=battleres+"["+player1+"] ÏïÑÏâΩÍ≤å "+player1pok.name+"Ïùò Í∏∞Ïà†ÏùÄ ÎπóÎÇòÍ∞îÏñ¥Ïöî!\n";
					}
					catch(e){
						battleres=battleres+"["+player1+"] Í∏∞Ïà† ÏÇ¨Ïö©Ïóê Ïã§Ìå®ÌñàÏñ¥Ïöî! (Îç∞Ïù¥ÌÑ∞ Ïò§Î•ò)\n";
					}
				}
				//ÎÅù
			}
		battleres=battleres+"\n\n";
		if(weather!=0){
			battleres=battleres+weatherdesc[weather]+"\n";
			if(weather>2)
			{
				if(weather==3)
				{
					if(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1")!=6&&read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2")!=6&&read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1")!=7&&read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2")!=7)
					{
						player1pok.hp=Math.ceil(player1pok.hp*7/8);
						battleres=battleres+"["+player1+"] Î™®ÎûòÎ∞îÎûåÏù¥ "+player1pok.name+"(Î•º)ÏùÑ ÎçÆÏ≥§Ïñ¥Ïöî!\n";
					}
					if(read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1")!=6&&read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2")!=6&&read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1")!=7&&read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2")!=7)
					{
						player2pok.hp=Math.ceil(player2pok.hp*7/8);
						battleres=battleres+"["+player2+"] Î™®ÎûòÎ∞îÎûåÏù¥ "+player2pok.name+"(Î•º)ÏùÑ ÎçÆÏ≥§Ïñ¥Ïöî!\n";
					}
				}
				if(weather==4)
				{
					if(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type1")!=11&&read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"type2")!=11)
					{
						player1pok.hp=Math.ceil(player1pok.hp*7/8);
						battleres=battleres+"["+player1+"] Ïã∏ÎùºÍ∏∞ÎààÏù¥ "+player1pok.name+"(Î•º)ÏùÑ ÎçÆÏ≥§Ïñ¥Ïöî!\n";
					}
					if(read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type1")!=11&&read("Ìè¨ÏºìÎ™¨/"+player2pok.name,"type2")!=11)
					{
						player2pok.hp=Math.ceil(player2pok.hp*7/8);
						battleres=battleres+"["+player2+"] Ïã∏ÎùºÍ∏∞ÎààÏù¥ "+player2pok.name+"(Î•º)ÏùÑ ÎçÆÏ≥§Ïñ¥Ïöî!\n";
					}
				}
				battleres=battleres+"\n";
				battleres=battleres+"Lv."+player1pok.level+" "+player1pok.name+"   ["+player1pok.hp+"/"+player1maxhp+"]\n";
				battleres=battleres+"Lv."+player2pok.level+" "+player2pok.name+"   ["+player2pok.hp+"/"+player2maxhp+"]\n";
				battleres=battleres+"\n";
			}
		}
}

function updatetitle(replier,sender) //Ïπ≠Ìò∏
{
	var nowr=0;
	nowr=setting.rank.name.indexOf(pokUser[sender].rank);
	if(nowr<setting.rank.name.length-3)
	{
		if(pokUser[sender].count.succ>(setting.rank.upif[nowr+1]))
		{
			pokUser[sender].maxHp=setting.rank.maxHp[nowr+1];
			pokUser[sender].rest=setting.rank.rest[nowr+1];
			pokUser[sender].castT=setting.rank.castT[nowr+1];
			pokUser[sender].success=pokUser[sender].success+setting.rank.success[nowr+1]-setting.rank.success[nowr];
			pokUser[sender].successcatch.g5=pokUser[sender].successcatch.g5+setting.rank.successcatch[nowr+1]-setting.rank.successcatch[nowr];
			pokUser[sender].successcatch.g4=pokUser[sender].successcatch.g4+setting.rank.successcatch[nowr+1]-setting.rank.successcatch[nowr];
			pokUser[sender].successcatch.g3=pokUser[sender].successcatch.g3+setting.rank.successcatch[nowr+1]-setting.rank.successcatch[nowr];
			pokUser[sender].successcatch.g2=pokUser[sender].successcatch.g2+setting.rank.successcatch[nowr+1]-setting.rank.successcatch[nowr];
			pokUser[sender].successcatch.g1=pokUser[sender].successcatch.g1+setting.rank.successcatch[nowr+1]-setting.rank.successcatch[nowr];
			pokUser[sender].rank=setting.rank.name[nowr+1];
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
			java.lang.Thread.sleep(2000);
			replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§! ["+pokUser[sender].rank+"] Îì±Í∏âÏù¥ ÎêòÏóàÏñ¥Ïöî!");
		}
	}
}

function updateribbon(replier,player) //Î¶¨Î≥∏
{
	var nowr=0;
	nowr=setting.ribbon.name.indexOf(pokUser[player].ribbon);
	if(nowr<11)
	{
		if(pokUser[player].battlecount.total>(setting.rank.upif[nowr]))
		{
			pokUser[player].upgradedc=setting.ribbon.upgradedc[nowr+1];
			pokUser[player].balldc=setting.ribbon.balldc[nowr+1];
			pokUser[player].stat.g4=pokUser[player].stat.g4+setting.ribbon.g4[nowr+1]-setting.ribbon.g4[nowr];
			pokUser[player].stat.g3=pokUser[player].stat.g3+setting.ribbon.g3[nowr+1]-setting.ribbon.g3[nowr];
			pokUser[player].successcatch.g4=pokUser[player].successcatch.g4+setting.ribbon.successcatch[nowr+1]-setting.ribbon.successcatch[nowr];
			pokUser[player].successcatch.g3=pokUser[player].successcatch.g3+setting.ribbon.successcatch[nowr+1]-setting.ribbon.successcatch[nowr];
			pokUser[player].successcatch.g2=pokUser[player].successcatch.g2+setting.ribbon.successcatch[nowr+1]-setting.ribbon.successcatch[nowr];
			pokUser[player].successcatch.g1=pokUser[player].successcatch.g1+setting.ribbon.successcatch[nowr+1]-setting.ribbon.successcatch[nowr];
			pokUser[player].ribbon=setting.ribbon.name[nowr+1];
			
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player+'.json', JSON.stringify(pokUser[player]));
			java.lang.Thread.sleep(2000);
			replier.reply("@"+player+"\nÏ∂ïÌïòÌï©ÎãàÎã§! Î¶¨Î≥∏Ïù¥ ["+pokUser[player].ribbon+"] ÏúºÎ°ú ÏóÖÍ∑∏Î†àÏù¥ÎìúÎêòÏóàÏñ¥Ïöî!");
			java.lang.Thread.sleep(1000);
			giveribbonreward(player,pokUser[player].ribbon,replier);
				
		}
		
	}
}

function updatecollection(replier,player) //Ïª¨Î†âÏÖò ÏóÖÎç∞Ïù¥Ìä∏
{
	pokUser[player].activecollection=[];
	pokCol[player]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player+'_collection.json'));
	if(pokCol[player]==null){
        let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player+'_collection.json', JSON.stringify(dogam));
		pokCol[player]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player+'_collection.json'));
    }
	var levsum=0;
	var res="";
	for(var ii of collectionnames){
		if(pokCol[player][ii].length==collectioncontents[collectionnames.indexOf(ii)].length)
			levsum++;
		if(collectionnames.indexOf(ii)<7){ //1~7ÏÑ∏ÎåÄ ÎπÑÏ†ÑÏÑ§
			if(pokCol[player][ii].length>(collectioncontents[collectionnames.indexOf(ii)].length)/2)
			{
				pokUser[player].activecollection.push(collectionnames.indexOf(ii)+1);
				res=res+"["+ii+"] 50%\n"
			}
			if(pokCol[player][ii].length==collectioncontents[collectionnames.indexOf(ii)].length)
			{
				pokUser[player].activecollection.push(collectionnames.indexOf(ii)+8);
				res=res+"["+ii+"] 100%\n"
			}
			
		}
		if(collectionnames.indexOf(ii)==7){ //Ï†ÑÏÑ§
		
			if(pokCol[player][ii].length>(collectioncontents[collectionnames.indexOf(ii)].length)/2)
			{
				pokUser[player].activecollection.push(15);
				res=res+"[Ï†ÑÏÑ§/ÌôòÏÉÅ] 50%\n"
			}
			if(pokCol[player][ii].length==collectioncontents[collectionnames.indexOf(ii)].length)
			{
				pokUser[player].activecollection.push(16);
				res=res+"[Ï†ÑÏÑ§/ÌôòÏÉÅ] 100%\n"
			}
		}
		if(collectionnames.indexOf(ii)==8){ //Ïö∏Ìä∏Îùº
			if(pokCol[player][ii].length>(collectioncontents[collectionnames.indexOf(ii)].length)/2)
			{
				pokUser[player].activecollection.push(17);
				res=res+"[Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏] 50%\n"
			}
			if(pokCol[player][ii].length==collectioncontents[collectionnames.indexOf(ii)].length)
			{
				pokUser[player].activecollection.push(18);
				res=res+"[Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏] 100%\n"
			}
		}
		if(collectionnames.indexOf(ii)==9){ //ÌûàÎì†
			if(pokCol[player][ii].length>(collectioncontents[collectionnames.indexOf(ii)].length)/2)
			{
				pokUser[player].activecollection.push(19);
				res=res+"[???] 50%\n"
			}
			if(pokCol[player][ii].length==collectioncontents[collectionnames.indexOf(ii)].length)
			{
				pokUser[player].activecollection.push(20);
				res=res+"[???] 100%\n"
			}
		}
				
	}
	pokUser[player].collectionlev=levsum+1;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player+'.json', JSON.stringify(pokUser[player]));
	if(pokUser[player].activecollection.length>0){
		for(var i=0;i<pokUser[player].activecollection.length;i++)
		java.lang.Thread.sleep(1000);
		replier.reply("@"+player+"\nÌòÑÏû¨ Ï†ÅÏö©Îêú Ïª¨Î†âÏÖò Ìö®Í≥º\n\n"+res);
	}
}

function typejudge(skilltype,typea,typeb){
//Î∞∞ÌãÄ ÏÉÅÏÑ± ÌåêÏ†ï
var typeres=1;
if(skilltype==1)
{
if(typea==15||typeb==15)
typeres=0;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==6||typeb==6)
typeres=typeres/2;
}
else if(skilltype==2)
{
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==3||typeb==3)
typeres=typeres/2;
if(typea==6||typeb==6)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres*2;
if(typea==9||typeb==9)
typeres=typeres*2;
if(typea==10||typeb==10)
typeres=typeres*2;
if(typea==11||typeb==11)
typeres=typeres*2;
}
else if(skilltype==3)
{
if(typea==3||typeb==3)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres/2;
if(typea==2||typeb==2)
typeres=typeres*2;
if(typea==6||typeb==6)
typeres=typeres*2;
if(typea==7||typeb==7)
typeres=typeres*2;
}
else if(skilltype==4)
{
if(typea==4||typeb==4)
typeres=typeres/2;
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==5||typeb==5)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==10||typeb==10)
typeres=typeres/2;
if(typea==13||typeb==13)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres/2;
if(typea==3||typeb==3)
typeres=typeres*2;
if(typea==6||typeb==6)
typeres=typeres*2;
if(typea==7||typeb==7)
typeres=typeres*2;
}
else if(skilltype==5)
{
if(typea==6||typeb==6)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==12||typeb==12)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres*2;
if(typea==8||typeb==8)
typeres=typeres*2;
if(typea==10||typeb==10)
typeres=typeres*2;
}
else if(skilltype==6)
{
if(typea==7||typeb==7)
typeres=typeres/2;
if(typea==8||typeb==8)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==2||typeb==2)
typeres=typeres*2;
if(typea==5||typeb==5)
typeres=typeres*2;
if(typea==10||typeb==10)
typeres=typeres*2;
if(typea==11||typeb==11)
typeres=typeres*2;
}
else if(skilltype==7)
{
if(typea==5||typeb==5)
typeres=0;
if(typea==4||typeb==4)
typeres=typeres/2;
if(typea==10||typeb==10)
typeres=typeres/2;
if(typea==2||typeb==2)
typeres=typeres*2;
if(typea==6||typeb==6)
typeres=typeres*2;
if(typea==9||typeb==9)
typeres=typeres*2;
if(typea==12||typeb==12)
typeres=typeres*2;
if(typea==13||typeb==13)
typeres=typeres*2;
}
else if(skilltype==8)
{
if(typea==15||typeb==15)
typeres=0;
if(typea==5||typeb==5)
typeres=typeres/2;
if(typea==18||typeb==18)
typeres=typeres/2;
if(typea==14||typeb==14)
typeres=typeres/2;
if(typea==10||typeb==10)
typeres=typeres/2;
if(typea==13||typeb==13)
typeres=typeres/2;
if(typea==1||typeb==1)
typeres=typeres*2;
if(typea==6||typeb==6)
typeres=typeres*2;
if(typea==9||typeb==9)
typeres=typeres*2;
if(typea==11||typeb==11)
typeres=typeres*2;
if(typea==16||typeb==16)
typeres=typeres*2;
}
else if(skilltype==9)
{
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==3||typeb==3)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==12||typeb==12)
typeres=typeres/2;
if(typea==6||typeb==6)
typeres=typeres*2;
if(typea==11||typeb==11)
typeres=typeres*2;
if(typea==18||typeb==18)
typeres=typeres*2;
}
else if(skilltype==10)
{
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==8||typeb==8)
typeres=typeres/2;
if(typea==18||typeb==18)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==5||typeb==5)
typeres=typeres/2;
if(typea==13||typeb==13)
typeres=typeres/2;
if(typea==15||typeb==15)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres*2;
if(typea==14||typeb==14)
typeres=typeres*2;
if(typea==16||typeb==16)
typeres=typeres*2;
}
else if(skilltype==11)
{
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==3||typeb==3)
typeres=typeres/2;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==11||typeb==11)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres*2;
if(typea==5||typeb==5)
typeres=typeres*2;
if(typea==7||typeb==7)
typeres=typeres*2;
if(typea==17||typeb==17)
typeres=typeres*2;
}
else if(skilltype==12)
{
if(typea==7||typeb==7)
typeres=0;
if(typea==4||typeb==4)
typeres=typeres/2;
if(typea==12||typeb==12)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres/2;
if(typea==3||typeb==3)
typeres=typeres*2;
if(typea==5||typeb==5)
typeres=typeres*2;
}
else if(skilltype==13)
{
if(typea==9||typeb==9)
typeres=0;
if(typea==13||typeb==13)
typeres=typeres/2;
if(typea==7||typeb==7)
typeres=typeres/2;
if(typea==6||typeb==6)
typeres=typeres/2;
if(typea==15||typeb==15)
typeres=typeres/2;
if(typea==4||typeb==4)
typeres=typeres*2;
if(typea==18||typeb==18)
typeres=typeres*2;
}
else if(skilltype==14)
{
if(typea==16||typeb==16)
typeres=0;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==14||typeb==14)
typeres=typeres/2;
if(typea==8||typeb==8)
typeres=typeres*2;
if(typea==13||typeb==13)
typeres=typeres*2;
}
else if(skilltype==15)
{
if(typea==1||typeb==1)
typeres=0;
if(typea==16||typeb==16)
typeres=typeres/2;
if(typea==14||typeb==14)
typeres=typeres*2;
if(typea==15||typeb==15)
typeres=typeres*2;
}
else if(skilltype==16)
{
if(typea==8||typeb==8)
typeres=typeres/2;
if(typea==16||typeb==16)
typeres=typeres/2;
if(typea==18||typeb==18)
typeres=typeres/2;
if(typea==14||typeb==14)
typeres=typeres*2;
if(typea==15||typeb==15)
typeres=typeres*2;
}
else if(skilltype==17)
{
if(typea==18||typeb==18)
typeres=0;
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres*2;
}
else if(skilltype==18)
{
if(typea==9||typeb==9)
typeres=typeres/2;
if(typea==13||typeb==13)
typeres=typeres/2;
if(typea==2||typeb==2)
typeres=typeres/2;
if(typea==17||typeb==17)
typeres=typeres*2;
if(typea==16||typeb==16)
typeres=typeres*2;
if(typea==8||typeb==8)
typeres=typeres*2;
}
return typeres;
}

function getprob(sender,replier){ //Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†
	var ran=(Math.floor(Math.random()*1000)+1)/10;
	ran=100-ran;
	var i=0;
	i=setting.p.i;
	ran=ran-i;
	if(ran<0) return 1;
	i=setting.p.g;
	ran=ran-i;
	if(ran<0) return 2;
	ran=ran-1;
	if(ran<0) return 99;
	i=pokUser[sender].stat.g5;
	if(Number(pokUser[sender].activecollection.includes(20)))
		i=i+pokUser[sender].collectionlev;
	ran=ran-i;
	if(ran<0) return 3;
	i=pokUser[sender].stat.g4+setting.eventp.g4;
	if(i<0) i=0;
	ran=ran-i;
	if(ran<0) return 4;
	i=pokUser[sender].stat.g3+setting.eventp.g3;
	if(i<0) i=0;
	ran=ran-i;
	if(ran<0) return 5;
	i=setting.p.g2;
	ran=ran-i;
	if(ran<0) return 6;
	i=Math.ceil((100-pokUser[sender].stat.g4-setting.eventp.g4-pokUser[sender].stat.g3-setting.eventp.g3-setting.p.g2)/2);
	ran=ran-i;
	if(ran<0) return 7;
	else return 6;
	//i:1 g:2 g5:3 g4:4 g3:5 g2:6 g1:7
	//7: Í≥ÑÏ†àÌè¨ÏºìÎ™¨
	//99: ÌûàÎì†Ìè¨ÏºìÎ™¨
}

//Ìè¨ÌöçÎ•† Ìï®Ïàò
function catchjudge(group,sender,replier){
	var ran=Math.floor(Math.random()*100)+1;
	var iscatch=0;
	if(group==99)
		iscatch=20;
	else if(group==5)
		iscatch=pokUser[sender].successcatch.g5;
	else if(group==4)
		iscatch=pokUser[sender].successcatch.g4;
	else if(group==3)
		iscatch=pokUser[sender].successcatch.g3;
	else if(group==2)
		iscatch=pokUser[sender].successcatch.g2;
	else
		iscatch=pokUser[sender].successcatch.g1;
	iscatch=Number(iscatch);
	if(group==4) iscatch=iscatch+setting.eventp.g4catch;
	else if(group==3) iscatch=iscatch+setting.eventp.g3catch;
	else iscatch=iscatch+setting.eventp.allcatch;
	if(Number(pokUser[sender].activecollection.includes(17)))
		iscatch=Number(iscatch+pokUser[sender].collectionlev);
	if(iscatch<0) iscatch=1;
	if(iscatch<ran) 
		return false;
	else
		return true;
}

function pokjoin(sender, replier){
    pokUser[sender]=JSON.parse(FileStream.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
    if(pokUser[sender]==null){
        if(sender.includes('/')){
            replier.reply('@'+sender+' \n‚Ä¢ ÎãâÎÑ§ÏûÑÏóê Ïä¨ÎûòÏãú"/" Í∞Ä Îì§Ïñ¥Í∞ÄÎ©¥ Í∞ÄÏûÖÌï† Ïàò ÏóÜÏñ¥Ïöî.');
            return;
        }
        if(sender.length<1){
            replier.reply('@'+sender+' \n‚Ä¢ ÎãâÎÑ§ÏûÑÏù¥ Í≥µÎ∞±Ïù¥Î©¥ Í∞ÄÏûÖÌï† Ïàò ÏóÜÏñ¥Ïöî.');
            return;
        }
        let data={
            'name':sender,
            'hp':setting.rank.maxHp[0], 'maxHp':setting.rank.maxHp[0],
            'stat':{
                'g5':setting.p.g5,'g4':setting.p.g4, 'g3':setting.p.g3, 'g2':setting.p.g2, 'g1':setting.p.g1  //Í∑∏Î£πÎ≥Ñ Ï∂úÌòÑÎ•†
            },
            'rank':setting.rank.name[0],  //Ïπ≠Ìò∏
			'ribbon':setting.ribbon.name[0], //Î¶¨Î≥∏
			'balldc':setting.ribbon.balldc[0], //Î≥ºÍ∞í Ìï†Ïù∏
			'upgradedc':setting.ribbon.upgradedc[0], //Í∞ïÌôîÍ∞í Ìï†Ïù∏
            'gold':1000,  //Ï¥àÍ∏∞Î≥¥Ïú†ÏûêÍ∏à
            'Ball':ballArr[0],  //Î≥ºÏù¥Î¶Ñ
            'balls':50, //Ï¥àÍ∏∞Î≥ºÍ∞ØÏàò
            'count':{
                'total':0,  //Ìè¨ÏºìÎ™¨ Ï°∞Ïö∞ÌöüÏàò
                'succ':0,  //Ìè¨Ìöç ÏÑ±Í≥µÌöüÏàò
                'fail':0  //Ìè¨Ìöç Ïã§Ìå®ÌöüÏàò
            },
			'battlecount':{
                'total':0,  //Î∞∞ÌãÄÌöüÏàò
                'win':0,  //Î∞∞ÌãÄ ÏäπÎ¶¨ÌöüÏàò
                'lose':0  //Î∞∞ÌãÄ Ìå®Î∞∞ÌöüÏàò
            },
			'badge':0,
			'activecollection':[],
			'collectionlev':0,
            'success':setting.success,  //ÌÉêÎ∞©ÏÑ±Í≥µÎ•†
			'successcatch':{
				'g5':setting.catchsuccess[0], 'g4':setting.catchsuccess[1], 'g3':setting.catchsuccess[2], 'g2':setting.catchsuccess[3], 'g1':setting.catchsuccess[4]
			},  //Ìè¨ÌöçÏÑ±Í≥µÎ•†
            'rest':Number(setting.rank.rest[0]),  //Ï≤¥Î†•+1Îãπ Ìú¥ÏãùÏãúÍ∞Ñ
            'castT':0,  //Ï∫êÏä§ÌåÖÏãúÍ∞Ñ
            'restOn':{'on':0, 'time':0}  //Ìú¥ÏãùÍ∞ùÏ≤¥
        };
        let inv={'deck':[],'box':[],'item':['Ï†ÑÏÑ§Ïïå','Ï†ÑÏÑ§Ïïå','Ï†ÑÏÑ§Ïïå']};
		let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
        FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(data));
        FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(inv));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(dogam));
        replier.reply('@'+sender+'\nÌè¨ÏºìÎ™¨Ïùò ÏÑ∏Í≥ÑÏóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§!\n@ÏïºÏÉù Î™ÖÎ†πÏñ¥Î•º ÏûÖÎ†•ÌïòÎ©¥ ÌÉêÌóòÏùÑ ÏãúÏûëÌïòÍ≤å Îê©ÎãàÎã§.\n\n‚ÄªÏã†Í∑ú Í∞ÄÏûÖ ÏßÄÏõê Î≥¥ÏÉÅÏúºÎ°ú Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò Ïïå 3Í∞úÍ∞Ä ÏßÄÍ∏âÎêòÏóàÏäµÎãàÎã§. '+cmds.legendegg+"Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÏºú Î≥¥ÏÑ∏Ïöî.");
    } else replier.reply('@'+sender+' \nÏù¥ÎØ∏ Í∞ÄÏûÖÌïú ÏÉÅÌÉúÏóêÏöî.');
}

function pokleave(sender,replier){
    pokUser[sender]=JSON.parse(FileStream.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
    if(pokUser[sender]!=null){
		pokUser[sender]==null;
		pokInv[sender]==null;
		pokCol[sender]==null;
		let pokRank=JSON.parse(FileStream.read(pathRank));
        if(pokRank.some(e=>e.name==sender)){
            pokRank.splice(pokRank.findIndex(e=>e.name==sender),1);
            FileStream.write(pathRank, JSON.stringify(pokRank));
        }
        FileStream.remove("sdcard/Devel/Pokemon/Data/player_"+sender+'.json');
        FileStream.remove("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json');
		FileStream.remove("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json');
        replier.reply('@'+sender+'\nÌÉàÌá¥Í∞Ä ÏôÑÎ£åÎêòÏóàÏñ¥Ïöî. Î∞îÏù¥Î∞îÏù¥.');
    } else replier.reply('@'+sender+' \nÍ∞ÄÏûÖÌïú ÏÉÅÌÉúÍ∞Ä ÏïÑÎãàÏóêÏöî.');
}

function response(room, msg, sender, isGroupChat, replier, ImageDB){
if(room!="Î£®Ïãú Ìè¨ÏºìÎ™¨Î∞©"&&room!="ÎÇöÏãúÌÑ∞") return;
if(msg==cmds.join) //Í∞ÄÏûÖ
	pokjoin(sender,replier);
if(msg==cmds.leave) //ÌÉàÌá¥
	pokleave(sender,replier);
if(cmds.play.includes(msg)){
	/* ÎîîÎ∞îÏù¥Ïä§ Ïò®ÎèÑ Ï≤¥ÌÅ¨ */
    if(Device.getBatteryTemperature()>=450){
        replier.reply('@'+sender+' \nÎ¥áÏù¥ Í≥ºÏó¥ÎêòÏóàÏñ¥Ïöî!\nÏ°∞Í∏àÎßå Ïâ¨ÏóàÎã§Í∞Ä Îã§Ïãú Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
    /* Ïì∞Î†àÎìúÍ∞êÏßÄ */
    if(Api.getActiveThreadsCount()>=7){
        replier.reply('@'+sender+' \nÏÇ¨Ïö©Ïûê Ìè≠Ï£ºÏ§ëÏù¥ÏòàÏöî.\nÏû†ÏãúÌõÑÏóê Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]==2||advOn[sender]==3){
        replier.reply('@'+sender+'\nÏù¥ÎØ∏ ÌÉêÌóò ÎòêÎäî Î∞∞ÌãÄ Ï§ëÏù¥ÏóêÏöî.');
        return;
    }
	if(advOn[sender]==1){
        replier.reply('@'+sender+'\nÌÉêÌóòÏ§ëÏù¥ÏóêÏöî. Í∏∞Îã§Î¶¨ÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
    if(pokUser[sender].hp<=0){
        replier.reply('@'+sender+' \nÏ≤¥Î†•Ïù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n"'+cmds.rest+'" Î™ÖÎ†πÏñ¥Î•º ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].balls<=0){
        replier.reply('@'+sender+' \nÎ≥ºÏù¥ ÏóÜÎäî ÏÉÅÌÉúÏóêÏÑ† ÌÉêÌóòÌï† Ïàò ÏóÜÏñ¥Ïöî.\n"'+cmds.ball+'" ÏùÑ ÌÜµÌï¥ Î≥ºÏùÑ Íµ¨Îß§Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
	if(pokCol[sender]==null){
        let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(dogam));
		pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
    }
	pokdelay[sender]=Math.ceil((Math.random()*(setting.castT.max*1000-setting.castT.min*1000)+setting.castT.min*1000)*(100-Number(pokUser[sender].castT))/100);
	advOn[sender]=1;
	replier.reply("@"+sender+"\nÌÉêÌóòÏùÑ ÏãúÏûëÌï©ÎãàÎã§!\nÌÉêÌóòÏùÄ Ìè¨ÏºìÎ™¨ÏùÑ Î∞úÍ≤¨ÌïòÎ©¥ Ï¢ÖÎ£åÎêòÎ©∞,\nÏã§Ìå® ÎòêÎäî Ìè¨ÏºìÎ™¨ ÎØ∏Î∞úÍ≤¨ ÏãúÎßàÎã§ ÏûêÎèôÏúºÎ°ú Ïû¨ÏãúÎèÑÎê©ÎãàÎã§.");

	java.lang.Thread.sleep(pokdelay[sender]);
	
	if(advOn[sender]==0) return;
	
	var r=0;
	r=Math.floor(Math.random()*100)+1;
	if(r>pokUser[sender].success) //ÌÉêÌóòÏã§Ìå®
	{
		do{
			replier.reply("@"+sender+"\n"+advfail[Math.floor(Math.random()*advfail.length)]);
			--pokUser[sender].hp;
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
			pokdelay[sender]=Math.ceil((Math.random()*(setting.castT.max*1000-setting.castT.min*1000)+setting.castT.min*1000)*(100-Number(pokUser[sender].castT))/100);
			java.lang.Thread.sleep(pokdelay[sender]);
	
			if(advOn[sender]==0) return;
			r=Math.floor(Math.random()*100)+1;
		}while(r>pokUser[sender].success);
	}
	var prob=0;
	prob=getprob(sender,replier);
	if(prob<3){
	do{
		if(r>pokUser[sender].success) //ÌÉêÌóòÏã§Ìå®
		{
			replier.reply("@"+sender+"\n"+advfail[Math.floor(Math.random()*advfail.length)]);
		}
		else
		{
		if(prob==1) //ÎèàÎ∞úÍ≤¨
		{
			
			var money=(Math.floor(Math.random()*100)+1)*500;//100~10000
			money=money*(ballArr.indexOf(pokUser[sender].Ball)+1)*100; //Î≥º Í∞ïÌôîÎãπ ÎèàÎ∞úÍ≤¨ Í∏àÏï° Ï¶ùÍ∞Ä
			if(Number(pokUser[sender].activecollection.includes(19)))
				money=money*(pokUser[sender].collectionlev*10+100)/100;
			if(Number(pokUser[sender].activecollection.includes(16)))
				money=money*(pokUser[player].collectionlev+1);
			money=money*setting.eventp.goldX;
			pokUser[sender].gold=pokUser[sender].gold+money;
			replier.reply("@"+sender+"\n"+pokArr.gold[Math.floor(Math.random()*pokArr.gold.length)]+"Î•º(ÏùÑ) Î∞úÍ≤¨ÌñàÏñ¥Ïöî!\nÏÉÅÏ†êÏóê ÌåîÏïÑ "+money.comma()+"ÏõêÏùÑ ÌöçÎìùÌñàÏñ¥Ïöî.");
		}
		else if(prob==2)
		{
			var ran=Math.floor(Math.random()*100)+1;
			if(ran<85)
			{
				var balln=Math.floor(Math.random()*10)+1;
				pokUser[sender].balls=Number(pokUser[sender].balls)+Number(balln);
				if(pokUser[sender].balls>setting.maxball)
					pokUser[sender].balls=setting.maxball;
				replier.reply("@"+sender+"\nÎ∞îÎã•Ïóê Îñ®Ïñ¥ÏßÑ Î≥ºÏùÑ Î∞úÍ≤¨ÌñàÏñ¥Ïöî!\nÎ≥º "+balln+"Í∞ú ÌöçÎìù.");
			}
			else
			{
				if(ran<95&&ran>84)
				{
					pokInv[sender].item.push("ÏùºÎ∞òÏïå");
					replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\nÌè¨ÏºìÎ™¨Ïùò ÏïåÏùÑ Î∞úÍ≤¨ÌñàÏäµÎãàÎã§.\n'"+cmds.egg+"' Î™ÖÎ†πÏñ¥Î•º ÌÜµÌï¥ ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
				}
				else if(ran==99)
				{
					pokInv[sender].item.push("Ï†ÑÏÑ§Ïïå");
					replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n<‚≠êÏ†ÑÏÑ§‚≠ê> Ìè¨ÏºìÎ™¨Ïùò ÏïåÏùÑ Î∞úÍ≤¨ÌñàÏäµÎãàÎã§.\n'"+cmds.legendegg+"' Î™ÖÎ†πÏñ¥Î•º ÌÜµÌï¥ ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
				}
				else if(ran==98)
				{
					var money=setting.luckygold*10;
					if(Number(pokUser[sender].activecollection.includes(19)))
						money=money*(pokUser[sender].collectionlev*10+100)/100;
					pokUser[sender].gold=pokUser[sender].gold+money;
					var moneyprint="";
					if(money>100000000)
					{
						moneyprint=moneyprint+Math.floor(money/100000000)+"Ïñµ ";
						if((money%100000000)!=0)
							moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					}
					else
						moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\nüëëÎßàÏ†úÏä§Ìã∞Ïùò ÌÇ§Î•º Î∞úÍ≤¨ÌñàÏñ¥Ïöî!\nÏÉÅÏ†êÏóê ÌåîÏïÑ "+moneyprint+"ÏõêÏùÑ ÌöçÎìùÌñàÏñ¥Ïöî.");
				}	
				else
				{
					var money=setting.luckygold;
					if(Number(pokUser[sender].activecollection.includes(19)))
						money=money*(pokUser[sender].collectionlev*10+100)/100;
					pokUser[sender].gold=pokUser[sender].gold+money;
					var moneyprint="";
					if(money>100000000)
					{
						moneyprint=moneyprint+Math.floor(money/100000000)+"Ïñµ ";
						if((money%100000000)!=0)
							moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					}
					else
						moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\nü™®Ïïå Ïàò ÏóÜÎäî ÎèåÏùÑ Î∞úÍ≤¨ÌñàÏñ¥Ïöî!\nÏÉÅÏ†êÏóê ÌåîÏïÑ "+moneyprint+"ÏõêÏùÑ ÌöçÎìùÌñàÏñ¥Ïöî.");
				}	
			}
		}
		}
		
		--pokUser[sender].hp;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
        FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
		
		pokdelay[sender]=Math.ceil((Math.random()*(setting.castT.max*1000-setting.castT.min*1000)+setting.castT.min*1000)*(100-Number(pokUser[sender].castT))/100);
		java.lang.Thread.sleep(pokdelay[sender]);
		
		if(advOn[sender]==0) return;
		prob=getprob(sender,replier);
		r=Math.floor(Math.random()*100)+1;
	}while(prob<3);
	if(pokUser[sender].hp<0) pokUser[sender].hp=0;
	}
	let pokname="";
	var lev=0;
	if(Math.floor(Math.random()*50)==1)
	{
		let pokseason=JSON.parse(FileStream.read(pathseason));
		if(pokseason==null){
			let data={"month":1};
			FileStream.write(pathseason, JSON.stringify(data));
			pokseason=JSON.parse(FileStream.read(pathseason));
		}
		month=month+1;
		if(month>4) month=month-4;
		
		pokseason["month"]=month;
		FileStream.write(pathseason, JSON.stringify(pokseason));
		var seasontext=["","Î¥Ñ","Ïó¨Î¶Ñ","Í∞ÄÏùÑ","Í≤®Ïö∏"];
		replier.reply("ÌòÑÏû¨ Í≥ÑÏ†à: "+seasontext[month]);
	}
	if(prob==7)
	{
		let pokseason=JSON.parse(FileStream.read(pathseason));
		if(pokseason==null){
			let data={"month":1};
			FileStream.write(pathseason, JSON.stringify(data));
			pokseason=JSON.parse(FileStream.read(pathseason));
		}
		month=pokseason["month"];
		
		if(month==1)
			pokname=seasons.spring[Math.floor(Math.random()*seasons.spring.length)];
		else if(month==2)
			pokname=seasons.summer[Math.floor(Math.random()*seasons.summer.length)];
		else if(month==3)
			pokname=seasons.autumn[Math.floor(Math.random()*seasons.autumn.length)];
		else
			pokname=seasons.winter[Math.floor(Math.random()*seasons.winter.length)];
	}
	else if(prob==99)
		pokname=pokArr.groupunknown[Math.floor(Math.random()*pokArr.groupunknown.length)];
	else if(prob==3)
		pokname=pokArr.group5[Math.floor(Math.random()*pokArr.group5.length)];
	else if(prob==4)
	{
		pokname=pokArr.group4[Math.floor(Math.random()*pokArr.group4.length)];
	}
	else if(prob==5)
		pokname=pokArr.group3[Math.floor(Math.random()*pokArr.group3.length)];
	else if(prob==6)
		pokname=pokArr.group2[Math.floor(Math.random()*pokArr.group2.length)];
	else
		pokname=pokArr.group1[Math.floor(Math.random()*pokArr.group1.length)];
	let lt=pokname.length-1;
	lev=lev+setting.minlevel+(ballArr.indexOf(pokUser[sender].Ball)+1)*setting.balluplev; //Î≥º Í∞ïÌôîÎãπ Ï∂úÌòÑÎ†àÎ≤® 8Ïî© Ï¶ùÍ∞Ä
	lev=lev+Math.floor(Math.random()*10)+1;
	if(pokArr.groupunknown.includes(pokname))
		replier.reply("@"+sender+"\n‚ùó <???> "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÎÇòÌÉÄÎÇ¨Ïñ¥Ïöî!");
	else if(pokArr.group5.includes(pokname))
		replier.reply("@"+sender+"\n‚ùó <ü¶ÑÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ü¶Ñ> "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÎÇòÌÉÄÎÇ¨Ïñ¥Ïöî!");
	else if(pokArr.group4.includes(pokname))
		replier.reply("@"+sender+"\n‚ùó <‚≠êÏ†ÑÏÑ§‚≠ê> "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÎÇòÌÉÄÎÇ¨Ïñ¥Ïöî!");
	else if(pokArr.group3.includes(pokname))
		replier.reply("@"+sender+"\n‚ùó [Î†àÏñ¥] ÏïºÏÉùÏùò "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÎÇòÌÉÄÎÇ¨Ïñ¥Ïöî!");
	else if(pokArr.group2.includes(pokname))
		replier.reply("@"+sender+"\n‚ùó [Í≥†Í∏â] ÏïºÏÉùÏùò "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÎÇòÌÉÄÎÇ¨Ïñ¥Ïöî!");
	else
		replier.reply("@"+sender+"\n‚ùó [ÏùºÎ∞ò] ÏïºÏÉùÏùò "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" ÌäÄÏñ¥ÎÇòÏôîÏñ¥Ïöî!");
	++pokUser[sender].count.total;
	
	let pokinfo={
		'name':pokname,
		'level':lev
	};
	ispokfind.push(sender);
	battlepokinfo.push(pokinfo);
	isballwaiting=[];
	advOn[sender]=2;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
    FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	try{
		img=pokimglink(pokname,0);
		poklink="ko/wiki/"+encodeURIComponent(pokname+"_(Ìè¨ÏºìÎ™¨)");
		//
		
		Kakao.sendLink(room, {
			"link_ver":"4.0",
			"template_id":(58796),
			"template_args":{
			//Ïù¥Í≥≥Ïóê ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.
			'POKIMG':img,
			'POKNAME':"Lv."+lev+"  "+pokname,
			'DESC':"Î≥ºÎçòÏßÄÍ∏∞: "+cmds.ballthrow.join("/")+"\nÎèÑÎßùÍ∞ÄÍ∏∞: "+cmds.esc.join("/"),
			'LINK':poklink
			}
			}, "custom")
	//
	}catch(e){
		replier.reply("Ïπ¥Ïπ¥Ïò§ÎßÅÌÅ¨ Ïò§Î•ò. Î¶¨ÏÖã ÌïúÎ≤à Ìï¥Ï£ºÏÑ∏Ïöî.\n(Î≥ºÏùÄ ÎçòÏßàÏàò ÏûàÏùå)\n\n"+"Lv."+lev+"  "+pokname+"\nÎ≥ºÎçòÏßÄÍ∏∞: "+cmds.ballthrow.join("/")+"\nÎèÑÎßùÍ∞ÄÍ∏∞: "+cmds.esc.join("/"));
	}

}

if(cmds.ballthrow.includes(msg)){ //Î≥ºÎçòÏßÄÍ∏∞
	/* ÎîîÎ∞îÏù¥Ïä§ Ïò®ÎèÑ Ï≤¥ÌÅ¨ */
    if(Device.getBatteryTemperature()>=450){
        replier.reply('@'+sender+'\nÎ¥áÏù¥ Í≥ºÏó¥ÎêòÏóàÏñ¥Ïöî!\nÏ°∞Í∏àÎßå Ïâ¨ÏóàÎã§Í∞Ä Îã§Ïãú Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
    /* Ïì∞Î†àÎìúÍ∞êÏßÄ */
    if(Api.getActiveThreadsCount()>=7){
        replier.reply('@'+sender+' \nÏÇ¨Ïö©Ïûê Ìè≠Ï£ºÏ§ëÏù¥ÏòàÏöî.\nÏû†ÏãúÌõÑÏóê Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]!=2){
        replier.reply('@'+sender+'\nÎ∞úÍ≤¨Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî!\n@ÏïºÏÉù Î™ÖÎ†πÏñ¥Î°ú ÌÉêÌóòÎ∂ÄÌÑ∞ ÏãúÏûëÌï¥ Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	if(isballwaiting.includes(sender)){
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	let pokname=battlepokinfo[ispokfind.indexOf(sender)].name;
	--pokUser[sender].balls; //Î≥º ÏÜåÎ™®
	replier.reply(sender+' ÎãòÏù¥ '+pokname+'ÏóêÍ≤å '+pokUser[sender].Ball+'ÏùÑ ÎçòÏ°åÏñ¥Ïöî!');
	isballwaiting.push(sender);
	var group=0;
	if(pokArr.groupunknown.includes(pokname))
		group=99;
	else if(pokArr.group5.includes(pokname))
		group=5;
	else if(pokArr.group4.includes(pokname))
		group=4;
	else if(pokArr.group3.includes(pokname))
		group=3;
	else if(pokArr.group2.includes(pokname))
		group=2;
	else
		group=1;
	java.lang.Thread.sleep(1000);
		if(catchjudge(group,sender,replier))
		{
			//Ìè¨ÌöçÏÑ±Í≥µ
			var caughtpoklev=Number(battlepokinfo[ispokfind.indexOf(sender)].level);
			var skillsarr=read("Ìè¨ÏºìÎ™¨/"+pokname,"skills");
			var caughtpokskills=[];
			if(skillsarr.length<5)
				caughtpokskills=skillsarr;
			else
			{
				while(caughtpokskills.length<4)
				{
					var t=skillsarr[Math.floor(Math.random()*skillsarr.length)];
					t=t.replace("DP","").replace("Pt","");
					if(caughtpokskills.indexOf(t)==(-1))
						caughtpokskills.push(t);
				}
			}
			
			var caughtpokhp=read("Ìè¨ÏºìÎ™¨/"+pokname,"hp");
			
			let caughtpok={
				'name':pokname,
				'level':caughtpoklev,
				'hp': Math.ceil(caughtpokhp*caughtpoklev/50),
				'atk': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"atk")*caughtpoklev/50),
				'def': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"def")*caughtpoklev/50),
				'spd': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"spd")*caughtpoklev/50),
				'skills':caughtpokskills,
				'skillslocked':[],
				'formchange':0,
				'islocked':0
			};
			pokInv[sender].box.push(caughtpok);
			++pokUser[sender].count.succ;
			--pokUser[sender].hp;
			let lt=battlepokinfo[ispokfind.indexOf(sender)].name.length-1;
			replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n"+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" Ïû°ÏïòÏäµÎãàÎã§!");
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
			battlepokinfo.splice(ispokfind.indexOf(sender),1);
			ispokfind.splice(ispokfind.indexOf(sender),1);
			advOn[sender]=0;
			replier.reply("@"+sender+"\nÏû°ÏùÄ Ìè¨ÏºìÎ™¨ÏùÑ Ï†ÄÏû•ÌñàÏäµÎãàÎã§.");
			for(var ii of collectionnames){
			if(collectioncontents[collectionnames.indexOf(ii)].includes(pokname))
			{
				if(pokCol[sender][ii].indexOf(pokname)==(-1))
				{
					pokCol[sender][ii].push(pokname)
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(pokCol[sender]));
					replier.reply("@"+sender+"\nÎèÑÍ∞êÏùò ["+ii+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
					updatecollection(replier,sender);
					break;
				}
			}
		}
		
			updatetitle(replier,sender);
			return;
		}
		else
		{
			//Ìè¨ÌöçÏã§Ìå®
			replier.reply("@"+sender+"\n"+ballfail[Math.floor(Math.random()*ballfail.length)])
			var runprob=0;
			if(runpoks.includes(pokname)||pokArr.groupunknown.includes(pokname)) runprob=90;
			else runprob=setting.run[5-group];
			if(runprob>(Math.floor(Math.random()*100)+1)) //Ìè¨ÏºìÎ™¨ ÎèÑÏ£º
			{
				++pokUser[sender].count.fail;
				--pokUser[sender].hp;
				battlepokinfo.splice(ispokfind.indexOf(sender),1);
				ispokfind.splice(ispokfind.indexOf(sender),1);
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
				advOn[sender]=0;
				let lt=pokname.length-1;
				replier.reply("@"+sender+"\nÏïºÏÉùÏùò "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÄ' : 'Îäî')+" ÎèÑÎßùÏ≥ê Î≤ÑÎ†∏Ïñ¥Ïöî!\nÌè¨Ìöç Ïã§Ìå®!");
			}
			else if(pokUser[sender].balls<1) //Î≥ºÏóÜÏùå
			{
				++pokUser[sender].count.fail;
				--pokUser[sender].hp;
				battlepokinfo.splice(ispokfind.indexOf(sender),1);
				ispokfind.splice(ispokfind.indexOf(sender),1);
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
				advOn[sender]=0;
				replier.reply("@"+sender+"\nÎçî Ïù¥ÏÉÅ ÎçòÏßà Î≥ºÏù¥ ÏóÜÏñ¥ ÎèÑÎßùÏ≥ê ÎÇòÏôîÏñ¥Ïöî. "+cmds.ball+" Î•º ÌÜµÌï¥ Î≥ºÏùÑ Íµ¨Îß§Ìï¥ Ï£ºÏÑ∏Ïöî!\nÌè¨Ìöç Ïã§Ìå®!");
			}
			else
			{
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
				replier.reply("@"+sender+"\n\n"+battlepokinfo[ispokfind.indexOf(sender)].name+"\nLv."+battlepokinfo[ispokfind.indexOf(sender)].level+"\n\nÎ≥º ÎçòÏßÄÍ∏∞:"+cmds.ballthrow.join("/")+" ÎèÑÎßùÍ∞ÄÍ∏∞:"+cmds.esc.join("/"));
			}
		}
	
	isballwaiting.splice(isballwaiting.indexOf(sender),1);
	
}

if(cmds.esc.includes(msg)){ //ÎèÑÎßù
	/* ÎîîÎ∞îÏù¥Ïä§ Ïò®ÎèÑ Ï≤¥ÌÅ¨ */
    if(Device.getBatteryTemperature()>=390){
        replier.reply('@'+sender+'\nÎ£®ÏãúÍ∞Ä Í≥ºÏó¥ÎêòÏóàÏñ¥Ïöî!\nÏ°∞Í∏àÎßå Ïâ¨ÏóàÎã§Í∞Ä Îã§Ïãú Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
    /* Ïì∞Î†àÎìúÍ∞êÏßÄ */
    if(Api.getActiveThreadsCount()>=5){
        replier.reply('@'+sender+' \nÏÇ¨Ïö©Ïûê Ìè≠Ï£ºÏ§ëÏù¥ÏòàÏöî.\nÏû†ÏãúÌõÑÏóê Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]!=2){
        replier.reply('@'+sender+'\nÎ∞úÍ≤¨Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî!\n@ÏïºÏÉù Î™ÖÎ†πÏñ¥Î°ú ÌÉêÌóòÎ∂ÄÌÑ∞ ÏãúÏûëÌï¥ Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	--pokUser[sender].hp;
	battlepokinfo.splice(ispokfind.indexOf(sender),1);
	ispokfind.splice(ispokfind.indexOf(sender),1);
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	advOn[sender]=0;
	replier.reply("@"+sender+"\nÎ¨¥ÏÇ¨Ìûà ÎèÑÎßùÏ≥§Ïñ¥Ïöî!");
}
if(msg==cmds.box)//Ìè¨ÏºìÎ™¨ Î≥¥Í¥ÄÌï®
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	var str="";
	var str2="";
	var showlocked=[" ","üîí"];
	if(pokInv[sender].deck.length<1) str="\nÌòÑÏû¨ Ïû•Ï∞© Ï§ëÏù∏ Îç±Ïù¥ ÏóÜÏäµÎãàÎã§.\n";
	else{
		for(var i=0;i<pokInv[sender].deck.length;i++)
			str=str+(i+1)+".  Lv."+pokInv[sender].deck[i].level+" "+pokInv[sender].deck[i].name+"\n";
		if(pokInv[sender].deck.length<6)
		{
			for(var i=0;i<(6-pokInv[sender].deck.length);i++)
				str=str+(pokInv[sender].deck.length+(i+1))+".  (ÎπÑÏñ¥ ÏûàÏùå)\n";
		}
	}
	if(pokInv[sender].box.length<1) str2="\nÎ≥¥Ïú† Ï§ëÏù∏ Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏäµÎãàÎã§.\n";
	else{
		for(var i=0;i<pokInv[sender].box.length;i++)
			str2=str2+(i+1)+".  Lv."+pokInv[sender].box[i].level+" "+pokInv[sender].box[i].name+" "+showlocked[pokInv[sender].box[i].islocked]+"\n";
	}
	replier.reply("["+sender+"] ÎãòÏùò Ìè¨ÏºìÎ™¨ Î™©Î°ù\n"+"\u200b".repeat(500)+"\nÌè¨ÏºìÎ™¨ Ï†ïÎ≥¥ ÏûêÏÑ∏Ìûà Î≥¥Í∏∞: "+cmds.pokinfo+" (Ïà´Ïûê)\n(Îç±Ïóê Ïû•Ï∞© Ï§ëÏù∏ Ìè¨ÏºìÎ™¨ÏùÄ "+cmds.dpokinfo+" Î•º Ïù¥Ïö©)\n‚ÄªÌè¨ÏºìÎ™¨ Ïä§ÌÇ¨ ÎΩëÍ∏∞, Î†àÎ≤®ÏóÖÏùÄ Îç±Ïóê Ïû•Ï∞©Îêú ÏÉÅÌÉúÏó¨Ïïº Í∞ÄÎä•\n\nÎç± Ïû•Ï∞©: "+cmds.lock+" (Î≤àÌò∏)\nÎç± Ïû•Ï∞©Ìï¥Ï†ú: "+cmds.unlock+" (Î≤àÌò∏)\nÎç± ÏàúÏÑú Î≥ÄÍ≤Ω: "+cmds.swap+" (Î≤àÌò∏1) (Î≤àÌò∏2)\nÎ≥¥Í¥ÄÌï® Ìè¨ÏºìÎ™¨ Ïû†Í∏à: "+cmds.boxlock+" (Î≤àÌò∏)\nÎ≥¥Í¥ÄÌï® Ìè¨ÏºìÎ™¨ Ïû†Í∏àÌï¥Ï†ú: "+cmds.boxunlock+" (Î≤àÌò∏)\n\n-----[Î∞∞ÌãÄ Îç±]-----\n"+str+"\n----------\n\n\n-----[Î≥¥Í¥ÄÌï®]-----\n"+str2+"\n----------");
}

if(msg.split(" ")[0]==cmds.boxlock)//Ïû†Í∏à
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].box.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	pokInv[sender].box[n-1].islocked=1;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nÎ∞ïÏä§Ïùò Lv."+pokInv[sender].box[n-1].level+" "+pokInv[sender].box[n-1].name+"(ÏùÑ)Î•º Ïû†Í∏à ÏôÑÎ£åÌñàÏñ¥Ïöî!");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.boxunlock)//Ïû†Í∏àÌï¥Ï†ú
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].box.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	pokInv[sender].box[n-1].islocked=0;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nÎ∞ïÏä§Ïùò Lv."+pokInv[sender].box[n-1].level+" "+pokInv[sender].box[n-1].name+"(ÏùÑ)Î•º Ïû†Í∏à Ìï¥Ï†úÌñàÏñ¥Ïöî!");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.sell)//ÎÜìÏïÑÏ£ºÍ∏∞
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].box.length>0)
	{
		var money=0;
		var pokmoney=0;
		let tempbox=[];
	for(var i=0;i<pokInv[sender].box.length;i++)
	{
		if(pokInv[sender].box[i].islocked==0)
		{
			pokmoney=3000*pokInv[sender].box[i].level*pokInv[sender].box[i].level;
			if(pokArr.group4.includes(pokInv[sender].box[i].name)||pokInv[sender].box[i].name=="Îã§Î∂ÄÎãà")
				pokmoney=pokmoney*5;
			else if(pokArr.group5.includes(pokInv[sender].box[i].name))
				pokmoney=pokmoney*10;
			money=money+pokmoney;
			
		}
		else{
			tempbox.push(pokInv[sender].box[i]);
		}
	}
	pokInv[sender].box=[];
	if(tempbox.length>0){
		for(var i=0;i<tempbox.length;i++)
			pokInv[sender].box.push(tempbox[i]);
	}
	if(Number(pokUser[sender].activecollection.includes(19)))
		money=money*(pokUser[sender].collectionlev*10+100)/100;
	money=money*setting.eventp.goldX;
	pokUser[sender].gold=pokUser[sender].gold+money;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	replier.reply("@"+sender+"\nÏû†Í∏àÏÉÅÌÉúÏùò Ìè¨ÏºìÎ™¨ÏùÑ Ï†úÏô∏Ìïú Î∞ïÏä§Ïùò Î™®Îì† Ìè¨ÏºìÎ™¨ÏùÑ ÎÜìÏïÑÏ£ºÏóàÏñ¥Ïöî.\n"+money.comma()+"Ïõê ÌöçÎìù.\n\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê");
	}else replier.reply("@"+sender+"\nÎ∞ïÏä§Ïóê Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.");
}

if(msg.split(" ")[0]==cmds.create)//Ìè¨ÏºìÎ™¨ Ìï©ÏÑ±
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].box.length>0)
	{
		var pok1num=msg.split(" ")[1];
		var pok2num=msg.split(" ")[2];
		if(pok1num==pok2num){
			replier.reply('@'+sender+"\nÏÑúÎ°ú Îã§Î•∏ Îëê Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.");
			return;
		}
		if(pok2num<pok1num){
			var ttemp=pok2num;
			pok2num=pok1num;
			pok1num=ttemp;
		}
		if((pokArr.group4.indexOf(pokInv[sender].box[pok1num-1].name)==(-1)&&setting.leaguechararr.indexOf(pokInv[sender].box[pok1num-1].name)==(-1))||(pokArr.group4.indexOf(pokInv[sender].box[pok2num-1].name)==(-1)&&setting.leaguechararr.indexOf(pokInv[sender].box[pok2num-1].name)==(-1)))
		{
			replier.reply('@'+sender+'\nÌè¨ÏºìÎ™¨ Ìï©ÏÑ±ÏùÄ Îëê ÎßàÎ¶¨Ïùò Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ÏúºÎ°úÎßå Í∞ÄÎä•Ìï¥Ïöî.\nÏÇ¨Ïö©Î∞©Î≤ï: '+cmds.create+" (Î∞ïÏä§Î≤àÌò∏1) (Î∞ïÏä§Î≤àÌò∏2)");
			return;
		}
		if(pokInv[sender].box[pok1num-1].islocked!=0||pokInv[sender].box[pok2num-1].islocked!=0)
		{
			replier.reply('@'+sender+"\nÏÑ†ÌÉùÌïú Îëê Ìè¨ÏºìÎ™¨ Ï§ë Ïû†Í∏à ÏÉÅÌÉúÏùò Ìè¨ÏºìÎ™¨Ïù¥ ÏûàÏñ¥Ïöî.");
			return;
		}
		var money=100000000;
		if(pokUser[sender].gold<money)
		{
			replier.reply('@'+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\nÌè¨ÏºìÎ™¨ Ìï©ÏÑ± ÎπÑÏö©: "+money.comma()+"Ïõê");
			return;
		}
		var oldpoks=[pokInv[sender].box[pok1num-1].name,pokInv[sender].box[pok2num-1].name];
	pokInv[sender].box.splice((pok2num-1),1);
	pokInv[sender].box.splice((pok1num-1),1);
	pokUser[sender].gold=pokUser[sender].gold-money;
	pokInv[sender].item.push("Ï†ÑÏÑ§Ïïå");
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	replier.reply("@"+sender+"\n"+money.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\n"+oldpoks[0]+" + "+oldpoks[1]+"ÏùÑ Ìï©ÏÑ±ÌïòÏó¨ Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò ÏïåÏùÑ ÌöçÎìùÌñàÏñ¥Ïöî.\n"+cmds.legendegg+" Î™ÖÎ†πÏñ¥Î°ú ÌöçÎìùÌïú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.");
	}else replier.reply("@"+sender+"\nÎ∞ïÏä§Ïóê Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.");
}


if(msg==cmds.gatcha)//Ï†úÎπÑÎΩëÍ∏∞
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(gatchaplayers[sender]==null||gatchaplayers[sender]==undefined)
		gatchaplayers[sender]=0;
	gatchaplayers[sender]++;
	if(Number(pokUser[sender].activecollection.includes(15)))
	{
		if(gatchaplayers[sender]>(3+pokUser[sender].collectionlev)){
			replier.reply('@'+sender+"\nÏ†úÎπÑÎΩëÍ∏∞Îäî 1Ìöå Î¶¨Î°úÎìú Îãπ 3(+"+pokUser[sender].collectionlev+")ÌöåÎßå ÎèÑÏ†ÑÌï† Ïàò ÏûàÏñ¥Ïöî.");
			return;
		}
	}
	else if(gatchaplayers[sender]>3)
	{
		replier.reply('@'+sender+"\nÏ†úÎπÑÎΩëÍ∏∞Îäî 1Ìöå Î¶¨Î°úÎìú Îãπ 3ÌöåÎßå ÎèÑÏ†ÑÌï† Ïàò ÏûàÏñ¥Ïöî.");
		return;
	}
	var gooditemadd=0;
	if(Number(pokUser[sender].activecollection.includes(13)))
	{
		gooditemadd=pokUser[sender].collectionlev;
	}
	var itemname = ["1000000","10000000","Î≥º 10Í∞ú","Î≥º 30Í∞ú","100000000","ÏïåÏàòÏóÜÎäîÎèå","ÏùºÎ∞òÏïå","Ï†ÑÏÑ§Ïïå","ÎßàÏ†úÏä§Ìã∞ÏùòÌÇ§","10000000000","100000000000","100"];
	var itemrate = [240,200,100,100,(20+gooditemadd*10),(10+gooditemadd*10),(20+gooditemadd*10),(10+gooditemadd*10),(6+gooditemadd*10),(3+gooditemadd*10),(1+gooditemadd*10),300];
      var ran = Math.random()*1000;
      var a = 0;
      var b = itemrate[0];
      for(var j = 0 ; j < itemrate.length ; j++){
         if(ran>=a && ran<b)
         {
            var res="";
			var resdesc="";
			if(itemname[j]=="ÏïåÏàòÏóÜÎäîÎèå")
			{
				res="ü™®Ïïå Ïàò ÏóÜÎäî Îèå";
				var money=setting.luckygold;
					if(Number(pokUser[sender].activecollection.includes(19)))
						money=money*(pokUser[sender].collectionlev*10+100)/100;
					pokUser[sender].gold=pokUser[sender].gold+money;
					var moneyprint="";
					if(money>100000000)
					{
						moneyprint=moneyprint+Math.floor(money/100000000)+"Ïñµ ";
						if((money%100000000)!=0)
							moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					}
					else
						moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					resdesc=moneyprint+"Ïõê ÌöçÎìù.";
				
			}
			else if(itemname[j]=="Î≥º 30Í∞ú")
			{
				res=itemname[j];
				pokUser[sender].balls=Number(pokUser[sender].balls)+30;
				if(pokUser[sender].balls>setting.maxball)
					pokUser[sender].balls=setting.maxball;
					resdesc="";
			}
			else if(itemname[j]=="Î≥º 10Í∞ú")
			{
				res=itemname[j];
				pokUser[sender].balls=Number(pokUser[sender].balls)+10;
				if(pokUser[sender].balls>setting.maxball)
					pokUser[sender].balls=setting.maxball;
					resdesc="";
			}
			else if(itemname[j]=="ÏùºÎ∞òÏïå")
			{
				res="Ìè¨ÏºìÎ™¨Ïùò Ïïå";
				pokInv[sender].item.push("ÏùºÎ∞òÏïå");
				resdesc=cmds.egg+" Î™ÖÎ†πÏñ¥Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.";
			}
			else if(itemname[j]=="Ï†ÑÏÑ§Ïïå")
			{
				res="<‚≠êÏ†ÑÏÑ§‚≠ê>Ìè¨ÏºìÎ™¨Ïùò Ïïå";
				pokInv[sender].item.push("Ï†ÑÏÑ§Ïïå");
				resdesc=cmds.legendegg+" Î™ÖÎ†πÏñ¥Î°ú ÏïåÏùÑ Î∂ÄÌôîÏãúÌÇ§ÏÑ∏Ïöî.";
			}
			else if(itemname[j]=="ÎßàÏ†úÏä§Ìã∞ÏùòÌÇ§")
			{
				res="üëëÎßàÏ†úÏä§Ìã∞Ïùò ÌÇ§";
				var money=setting.luckygold*10;
					if(Number(pokUser[sender].activecollection.includes(19)))
						money=money*(pokUser[sender].collectionlev*10+100)/100;
					pokUser[sender].gold=pokUser[sender].gold+money;
					var moneyprint="";
					if(money>100000000)
					{
						moneyprint=moneyprint+Math.floor(money/100000000)+"Ïñµ ";
						if((money%100000000)!=0)
							moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					}
					else
						moneyprint=moneyprint+Math.floor((money%100000000)/10000)+"Îßå ";
					resdesc=moneyprint+"Ïõê ÌöçÎìù.";
			}
			else if(!isNaN(Number(itemname[j]))){
				var money=0;
				
				money=Number(itemname[j]);
				res=money.comma()+"Ïõê";
				pokUser[sender].gold=Number(pokUser[sender].gold+Number(money));
				resdesc="";
			}
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
            replier.reply("@"+sender+"\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nÏ†úÎπÑÎΩëÍ∏∞ÏóêÏÑú "+res+"(ÏùÑ)Î•º ÌöçÎìùÌñàÏäµÎãàÎã§.\n"+resdesc);
            return;
         }
         else{
            a=b;
            b=b+itemrate[j+1];
         }
      }
   }

   
   
if(msg.split(" ")[0]==cmds.lock)//Îç± Ïû•Ï∞©
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].box.length+1)&&msg.indexOf(".")==(-1))
	{
	if(pokInv[sender].deck.length<6){
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].box[n-1];
	var ismegaexists=0;
	for(var i=0;i<pokInv[sender].deck.length;i++)
	{
		if(megaafternames.includes(pokInv[sender].deck[i].name))
			ismegaexists=1;
	}
	if(ismegaexists==1&&megaafternames.includes(p.name))
	{
		replier.reply("@"+sender+"\nÏù¥ÎØ∏ Îç±Ïóê Î©îÍ∞ÄÏßÑÌôîÌïú Ìè¨ÏºìÎ™¨Ïù¥ ÏûàÏñ¥Ïöî.\nÎ©îÍ∞ÄÏßÑÌôîÎäî Îç±Ïóê 1ÎßàÎ¶¨Îßå Ïû•Ï∞© Í∞ÄÎä•Ìï¥Ïöî.");
		return;
	}
	pokInv[sender].box.splice((n-1),1);
	pokInv[sender].deck.push(p);
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nLv."+p.level+" "+p.name+"(ÏùÑ)Î•º Îç±ÏúºÎ°ú Ïù¥ÎèôÌñàÏñ¥Ïöî!");
	}else replier.reply("@"+sender+"\nÎ∞∞ÌãÄÏö© Îç±ÏùÄ 6ÎßàÎ¶¨ÍπåÏßÄÎßå Ïû•Ï∞©Ìï† Ïàò ÏûàÏñ¥Ïöî.");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.unlock)//Î∞ïÏä§Î°ú Ïù¥Îèô
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
		
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].deck[n-1];
	pokInv[sender].deck.splice((n-1),1);
	pokInv[sender].box.push(p);
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nLv."+p.level+" "+p.name+"(ÏùÑ)Î•º Î≥¥Í¥ÄÌï®ÏúºÎ°ú Ïù¥ÎèôÌñàÏñ¥Ïöî!");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.skillchange)//Ïä§ÌÇ¨ÎΩëÍ∏∞
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÏä§ÌÇ¨ ÎΩëÍ∏∞Îäî Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].deck[n-1];
	var skillcosts=[100000,1000000,10000000,50000000,0];
	var cost=Math.ceil(skillcosts[p.skillslocked.length]*(100-pokUser[sender].upgradedc)/100);
	if(pokUser[sender].gold<cost)
		replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLv."+p.level+" "+p.name+"Ïùò Ïä§ÌÇ¨ ÎΩëÍ∏∞ ÎπÑÏö©: "+cost.comma()+"\n("+p.skillslocked.length+"Í∞ú Ïä§ÌÇ¨ Ïû†Í∏à)");
	else{
	var skillsarr=read("Ìè¨ÏºìÎ™¨/"+p.name,"skills");
	if(p.formchange!=0)
		skillsarr=read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"skills");
	if(skillsarr.length<5||p.skillslocked.length>3) replier.reply("@"+sender+"\nÌï¥Îãπ Ìè¨ÏºìÎ™¨ÏùÄ Î∞îÍøÄ Ïä§ÌÇ¨Ïù¥ ÏóÜÏñ¥Ïöî.");
	else
	{
	var caughtpokskills=[];
	p.skills=caughtpokskills;
	while(caughtpokskills.length<(4-p.skillslocked.length))
	{
		var t=skillsarr[Math.floor(Math.random()*skillsarr.length)];
		t=t.replace("DP","").replace("Pt","");
		if(caughtpokskills.indexOf(t)==(-1)&&p.skillslocked.indexOf(t)==(-1))
			caughtpokskills.push(t);
	}
	p.skills=caughtpokskills;
	pokInv[sender].deck[n-1]=p;
	pokUser[sender].gold=pokUser[sender].gold-cost;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	replier.reply("@"+sender+"\n"+cost.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nLv."+pokInv[sender].deck[n-1].level+" "+pokInv[sender].deck[n-1].name+"Ïùò Í∏∞Ïà†\n\n"+printskills(pokInv[sender].deck[n-1].skills,pokInv[sender].deck[n-1].skillslocked));
	}
	}
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}
//
if(msg.split(" ")[0]==cmds.levelup)//Î†àÎ≤®ÏóÖ
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
	if(pokCol[sender]==null){
        let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(dogam));
		pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
    }
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎ†àÎ≤®ÏóÖÏùÄ Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	var n2=Number(msg.split(" ")[2]);
	if(n2>0){
		
	}
	else n2=1;
	if(n2<1||n2>(setting.maxlevel-1))
	{
		replier.reply('@'+sender+'\nÎã§Ï§ë Î†àÎ≤®ÏóÖÏùÄ 1~'+(setting.maxlevel-1)+'ÏÇ¨Ïù¥ Ïà´ÏûêÎ°úÎßå ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
	}
	let p;
	p=pokInv[sender].deck[n-1];
	var skillcosts=0;
	var totalcosts=0;
	for(var j=0;j<n2;j++)
	{
		skillcosts=10*(p.level+j)*(p.level+j)*(p.level+j);
		if(pokArr.group5.includes(p.name)) skillcosts=skillcosts*2;
		if((p.level+j)>150) skillcosts=skillcosts*2;
		else if(p.level>100) skillcosts=skillcosts*1.5;
		if(Number(pokUser[sender].activecollection.includes(18)))
			skillcosts=Math.ceil(skillcosts*(100-pokUser[sender].upgradedc-pokUser[sender].collectionlev*5)/100);
		else
			skillcosts=Math.ceil(skillcosts*(100-pokUser[sender].upgradedc)/100);
		if((p.level+j)>200) skillcosts=skillcosts*5;
		totalcosts=totalcosts+skillcosts;
	}
	if(pokUser[sender].gold<totalcosts)
	{
		if(n2<2)
			replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò Îã§Ïùå Î†àÎ≤®ÏóÖ ÎπÑÏö©: "+totalcosts.comma()+"Ïõê");
		else
			replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò Lv."+(p.level+n2)+"ÍπåÏßÄÏùò Î†àÎ≤®ÏóÖ ÎπÑÏö©: "+totalcosts.comma()+"Ïõê");
	}
	else{
	if(p.level>(setting.maxlevel-1)) replier.reply("@"+sender+"\nÌï¥Îãπ Ìè¨ÏºìÎ™¨ÏùÄ Ïù¥ÎØ∏ ÏµúÎåÄ Î†àÎ≤®Ïù¥ÏóêÏöî.");
	else if((Number(p.level)+Number(n2))>setting.maxlevel) replier.reply("@"+sender+"\nÏµúÎåÄ Î†àÎ≤®ÏùÑ Ï¥àÍ≥ºÌïòÏó¨ Í∞ïÌôîÌï† Ïàò ÏóÜÏñ¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò ÏµúÎåÄ Î†àÎ≤®ÍπåÏßÄ ÎÇ®ÏùÄ Î†àÎ≤®ÏóÖ: "+(setting.maxlevel-p.level)+"Ìöå");
	else
	{
	p.level=Number(p.level)+Number(n2);
	if(p.level>(read("Ìè¨ÏºìÎ™¨/"+p.name,"nextlv")-1)&&read("Ìè¨ÏºìÎ™¨/"+p.name,"nextup")!="x")
	{
		var preup=p.name;
		var up=read("Ìè¨ÏºìÎ™¨/"+p.name,"nextup");
		if(up.includes("/"))
			p.name=up.split("/")[Math.floor(Math.random()*up.split("/").length)];
		else p.name=up;
		replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n"+preup+"ÏùÄ(Îäî) Lv."+p.level+"ÏùÑ Îã¨ÏÑ±ÌïòÏó¨ "+p.name+"(Ïúº)Î°ú ÏßÑÌôîÌïòÏòÄÏäµÎãàÎã§!");
		for(var i of collectionnames){
			if(collectioncontents[collectionnames.indexOf(i)].includes(p.name))
			{
				if(pokCol[sender][i].indexOf(p.name)==(-1))
				{
					pokCol[sender][i].push(p.name)
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(pokCol[sender]));
					replier.reply("@"+sender+"\nÎèÑÍ∞êÏùò ["+i+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
					updatecollection(replier,sender);
					break;
				}
			}
		}
		
		
	}
	if(p.formchange!=0){
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"spd")*p.level/50);
	}
	else
	{
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"spd")*p.level/50);
	}
	
	pokInv[sender].deck[n-1]=p;
	pokUser[sender].gold=pokUser[sender].gold-totalcosts;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	var showstats="\nÏµúÎåÄ HP: "+pokInv[sender].deck[n-1].hp+"\nÍ≥µÍ≤©Î†•: "+pokInv[sender].deck[n-1].atk+"\nÎ∞©Ïñ¥Î†•: "+pokInv[sender].deck[n-1].def+"\nÏä§ÌîºÎìú: "+pokInv[sender].deck[n-1].spd;
	replier.reply("@"+sender+"\n"+totalcosts.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nLv."+(pokInv[sender].deck[n-1].level-n2)+" > Lv."+pokInv[sender].deck[n-1].level+" "+pokInv[sender].deck[n-1].name+"\n\n"+"\u200b".repeat(500)+showstats);
	}
	}
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}
//
if(msg.split(" ")[0]==cmds.boxlevelup)//Î∞ïÏä§Î†àÎ≤®ÏóÖ
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
	if(pokCol[sender]==null){
        let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(dogam));
		pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
    }
	if(pokInv[sender].box.length<1)
		replier.reply("@"+sender+"\nÎ∞ïÏä§Ïóê Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].box.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	var n2=Number(msg.split(" ")[2]);
	if(n2>0){
		
	}
	else n2=1;
	if(n2<1||n2>(setting.maxlevel-1))
	{
		replier.reply('@'+sender+'\nÎã§Ï§ë Î†àÎ≤®ÏóÖÏùÄ 1~'+(setting.maxlevel-1)+'ÏÇ¨Ïù¥ Ïà´ÏûêÎ°úÎßå ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.');
        return;
	}
	let p;
	p=pokInv[sender].box[n-1];
	var skillcosts=0;
	var totalcosts=0;
	for(var j=0;j<n2;j++)
	{
		skillcosts=10*(p.level+j)*(p.level+j)*(p.level+j);
		if(pokArr.group5.includes(p.name)) skillcosts=skillcosts*2;
		if((p.level+j)>150) skillcosts=skillcosts*2;
		else if(p.level>100) skillcosts=skillcosts*1.5;
		if(Number(pokUser[sender].activecollection.includes(18)))
			skillcosts=Math.ceil(skillcosts*(100-pokUser[sender].upgradedc-pokUser[sender].collectionlev*5)/100);
		else
			skillcosts=Math.ceil(skillcosts*(100-pokUser[sender].upgradedc)/100);
		if((p.level+j)>200) skillcosts=skillcosts*5;
		totalcosts=totalcosts+skillcosts;
	}
	if(pokUser[sender].gold<totalcosts)
	{
		if(n2<2)
			replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò Îã§Ïùå Î†àÎ≤®ÏóÖ ÎπÑÏö©: "+totalcosts.comma()+"Ïõê");
		else
			replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò Lv."+(p.level+n2)+"ÍπåÏßÄÏùò Î†àÎ≤®ÏóÖ ÎπÑÏö©: "+totalcosts.comma()+"Ïõê");
	}
	else{
	if(p.level>(setting.maxlevel-1)) replier.reply("@"+sender+"\nÌï¥Îãπ Ìè¨ÏºìÎ™¨ÏùÄ Ïù¥ÎØ∏ ÏµúÎåÄ Î†àÎ≤®Ïù¥ÏóêÏöî.");
	else if((Number(p.level)+Number(n2))>setting.maxlevel) replier.reply("@"+sender+"\nÏµúÎåÄ Î†àÎ≤®ÏùÑ Ï¥àÍ≥ºÌïòÏó¨ Í∞ïÌôîÌï† Ïàò ÏóÜÏñ¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò ÏµúÎåÄ Î†àÎ≤®ÍπåÏßÄ ÎÇ®ÏùÄ Î†àÎ≤®ÏóÖ: "+(setting.maxlevel-p.level)+"Ìöå");
	else
	{
	p.level=Number(p.level)+Number(n2);
	if(p.level>(read("Ìè¨ÏºìÎ™¨/"+p.name,"nextlv")-1)&&read("Ìè¨ÏºìÎ™¨/"+p.name,"nextup")!="x")
	{
		var preup=p.name;
		var up=read("Ìè¨ÏºìÎ™¨/"+p.name,"nextup");
		if(up.includes("/"))
			p.name=up.split("/")[Math.floor(Math.random()*up.split("/").length)];
		else p.name=up;
		replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n"+preup+"ÏùÄ(Îäî) Lv."+p.level+"ÏùÑ Îã¨ÏÑ±ÌïòÏó¨ "+p.name+"(Ïúº)Î°ú ÏßÑÌôîÌïòÏòÄÏäµÎãàÎã§!");
		for(var i of collectionnames){
			if(collectioncontents[collectionnames.indexOf(i)].includes(p.name))
			{
				if(pokCol[sender][i].indexOf(p.name)==(-1))
				{
					pokCol[sender][i].push(p.name)
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(pokCol[sender]));
					replier.reply("@"+sender+"\nÎèÑÍ∞êÏùò ["+i+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
					updatecollection(replier,sender);
					break;
				}
			}
		}
		
		
	}
	if(p.formchange!=0){
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"spd")*p.level/50);
	}
	else
	{
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"spd")*p.level/50);
	}
	
	pokInv[sender].box[n-1]=p;
	pokUser[sender].gold=pokUser[sender].gold-totalcosts;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	var showstats="\nÏµúÎåÄ HP: "+pokInv[sender].box[n-1].hp+"\nÍ≥µÍ≤©Î†•: "+pokInv[sender].box[n-1].atk+"\nÎ∞©Ïñ¥Î†•: "+pokInv[sender].box[n-1].def+"\nÏä§ÌîºÎìú: "+pokInv[sender].box[n-1].spd;
	replier.reply("@"+sender+"\n"+totalcosts.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nLv."+(pokInv[sender].box[n-1].level-n2)+" > Lv."+pokInv[sender].box[n-1].level+" "+pokInv[sender].box[n-1].name+"\n\n"+"\u200b".repeat(500)+showstats);
	}
	}
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}

if(msg.split(" ")[0]==cmds.formchange)//ÌèºÏ≤¥Ïù∏ÏßÄ
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÌèºÏ≤¥Ïù∏ÏßÄÎäî Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].deck[n-1];
	if(formchangenames.indexOf(p.name)==(-1))
	{
		replier.reply("@"+sender+"\nÌèºÏ≤¥Ïù∏ÏßÄÎ•º Ìï† Ïàò ÏóÜÎäî Ìè¨ÏºìÎ™¨Ïù¥ÏóêÏöî.\n\nÌèºÏ≤¥Ïù∏ÏßÄ Í∞ÄÎä•Ìïú Ìè¨ÏºìÎ™¨: "+formchangenames.join(","));
		return;
	}
	var skillcosts=10000000;
	skillcosts=Math.ceil(skillcosts*(100-pokUser[sender].upgradedc)/100);
	if(pokUser[sender].gold<skillcosts)
	{
		replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò ÌèºÏ≤¥Ïù∏ÏßÄ ÎπÑÏö©: "+skillcosts.comma()+"Ïõê");
	}
	else{
	var oldname=formchangestatus[p.name][p.formchange];
	if(p.name=="ÌÅêÎ†àÎ¨¥")
	{
		if(pokCol[sender]["Ï†ÑÏÑ§/ÌôòÏÉÅ"].includes("Ï†úÌÅ¨Î°úÎ¨¥")&&pokCol[sender]["Ï†ÑÏÑ§/ÌôòÏÉÅ"].includes("Î†àÏãúÎùºÎ¨¥")){
			
		}
		else
		{
			replier.reply("ÌÅêÎ†àÎ¨¥Ïùò ÌèºÏ≤¥Ïù∏ÏßÄÎäî Ï†úÌÅ¨Î°úÎ¨¥, Î†àÏãúÎùºÎ¨¥Í∞Ä Î™®Îëê ÎèÑÍ∞êÏóê Îì±Î°ùÎêòÏñ¥ ÏûàÏñ¥Ïïº Í∞ÄÎä•Ìï©ÎãàÎã§.");
			return;
		}
	}
	if(p.name=="ÎÑ§ÌÅ¨Î°úÏ¶àÎßà")
	{
		if(pokCol[sender]["Ï†ÑÏÑ§/ÌôòÏÉÅ"].includes("ÏÜîÍ∞ÄÎ†àÏò§")&&pokCol[sender]["Ï†ÑÏÑ§/ÌôòÏÉÅ"].includes("Î£®ÎÇòÏïÑÎùº")){
			
		}
		else
		{
			replier.reply("ÎÑ§ÌÅ¨Î°úÏ¶àÎßàÏùò ÌèºÏ≤¥Ïù∏ÏßÄÎäî ÏÜîÍ∞ÄÎ†àÏò§, Î£®ÎÇòÏïÑÎùºÍ∞Ä Î™®Îëê ÎèÑÍ∞êÏóê Îì±Î°ùÎêòÏñ¥ ÏûàÏñ¥Ïïº Í∞ÄÎä•Ìï©ÎãàÎã§.");
			return;
		}
	}
	var newform=0;
	do{
		newform=Math.floor(Math.random()*formchangestatus[p.name].length);
	}while(newform==p.formchange);
	p.formchange=newform;
	if(p.formchange!=0){
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"spd")*p.level/50);
	}
	else
	{
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"spd")*p.level/50);
	}
	
	pokInv[sender].deck[n-1]=p;
	pokUser[sender].gold=pokUser[sender].gold-skillcosts;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	var showstats="\nÏµúÎåÄ HP: "+pokInv[sender].deck[n-1].hp+"\nÍ≥µÍ≤©Î†•: "+pokInv[sender].deck[n-1].atk+"\nÎ∞©Ïñ¥Î†•: "+pokInv[sender].deck[n-1].def+"\nÏä§ÌîºÎìú: "+pokInv[sender].deck[n-1].spd;
	replier.reply("@"+sender+"\n"+skillcosts.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nLv."+pokInv[sender].deck[n-1].level+pokInv[sender].deck[n-1].name+"("+oldname+") > Lv."+pokInv[sender].deck[n-1].level+" "+pokInv[sender].deck[n-1].name+"("+formchangestatus[p.name][p.formchange]+")\n\n"+"\u200b".repeat(500)+showstats);
	
	}
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}

if(msg.split(" ")[0]==cmds.mega)//Î©îÍ∞ÄÏßÑÌôî
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎ©îÍ∞ÄÏßÑÌôîÎäî Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].deck[n-1];
	if(meganames.indexOf(p.name)==(-1))
	{
		replier.reply("@"+sender+"\nÎ©îÍ∞ÄÏßÑÌôîÎ•º Ìï† Ïàò ÏóÜÎäî Ìè¨ÏºìÎ™¨Ïù¥ÏóêÏöî.\n\nÎ©îÍ∞ÄÏßÑÌôî Í∞ÄÎä•Ìïú Ìè¨ÏºìÎ™¨: "+meganames.join(", "));
		return;
	}
	if(p.name=="ÎÑ§ÌÅ¨Î°úÏ¶àÎßà"&&p.formchange==0)
	{
		replier.reply("@"+sender+"\nÎÑ§ÌÅ¨Î°úÏ¶àÎßàÏùò Î©îÍ∞ÄÏßÑÌôîÎäî ÌèºÏ≤¥Ïù∏ÏßÄ ÏÉÅÌÉúÏóêÏÑúÎßå Í∞ÄÎä•Ìï¥Ïöî.");
		return;
	}
	var ismegaexists=0;
	for(var i=0;i<pokInv[sender].deck.length;i++)
	{
		if(megaafternames.includes(pokInv[sender].deck[i].name))
			ismegaexists=1;
	}
	if(ismegaexists==1)
	{
		replier.reply("@"+sender+"\nÏù¥ÎØ∏ Îç±Ïóê Î©îÍ∞ÄÏßÑÌôîÌïú Ìè¨ÏºìÎ™¨Ïù¥ ÏûàÏñ¥Ïöî.\nÎ©îÍ∞ÄÏßÑÌôîÎäî Îç±Ïóê 1ÎßàÎ¶¨Îßå Ïû•Ï∞© Í∞ÄÎä•Ìï¥Ïöî.");
		return;
	}
	if(p.level<200)
	{
		replier.reply("@"+sender+"\nÎ©îÍ∞ÄÏßÑÌôîÎäî Î†àÎ≤® 200 Ïù¥ÏÉÅÎ∂ÄÌÑ∞ Í∞ÄÎä•Ìï¥Ïöî.");
		return;
	}
	var skillcosts=2000000000;
	if(pokUser[sender].gold<skillcosts)
	{
		replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\n\nLV."+p.level+" "+p.name+"Ïùò Î©îÍ∞ÄÏßÑÌôî ÎπÑÏö©: "+skillcosts.comma()+"Ïõê");
	}
	else{
	var oldname=p.name;
	if(p.name=="Î¶¨ÏûêÎ™Ω"||p.name=="ÎÆ§Ï∏†")
	{
		var newname="Î©îÍ∞Ä"+p.name;
		if(Math.floor(Math.random()*2)==1)
			newname=newname+"X";
		else
			newname=newname+"Y";
		p.name=newname;
	}
	else if(p.name=="Í∑∏ÎûÄÎèà"||p.name=="Í∞ÄÏù¥Ïò§Í∞Ä")
	{
		var newname="ÏõêÏãú"+p.name;
		p.name=newname;
	}
	else if(p.name=="ÎÑ§ÌÅ¨Î°úÏ¶àÎßà")
	{
		var newname="Ïö∏Ìä∏Îùº"+p.name;
		p.name=newname;
	}
	else
	{
		var newname="Î©îÍ∞Ä"+p.name;
		p.name=newname;
	}
	p.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"hp")*p.level/50);
	p.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"atk")*p.level/50);
	p.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"def")*p.level/50);
	p.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+p.name,"spd")*p.level/50);
	p.formchange=0;
	pokInv[sender].deck[n-1]=p;
	pokUser[sender].gold=pokUser[sender].gold-skillcosts;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
	var showstats="\nÏµúÎåÄ HP: "+pokInv[sender].deck[n-1].hp+"\nÍ≥µÍ≤©Î†•: "+pokInv[sender].deck[n-1].atk+"\nÎ∞©Ïñ¥Î†•: "+pokInv[sender].deck[n-1].def+"\nÏä§ÌîºÎìú: "+pokInv[sender].deck[n-1].spd;
	replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n"+oldname+"(ÏùÄ)Îäî "+pokInv[sender].deck[n-1].name+"(Ïúº)Î°ú Î©îÍ∞ÄÏßÑÌôîÌñàÏäµÎãàÎã§!");
	replier.reply("@"+sender+"\n"+skillcosts.comma()+"Ïõê ÏßÄÎ∂à.\nÎ≥¥Ïú†Í∏àÏï°: "+(pokUser[sender].gold).comma()+"Ïõê\n\nLv."+pokInv[sender].deck[n-1].level+" "+oldname+" > Lv."+pokInv[sender].deck[n-1].level+" "+pokInv[sender].deck[n-1].name+"\n\n"+"\u200b".repeat(500)+showstats);
	
	}
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}

if(msg.split(" ")[0]==cmds.skilllock)//Ïä§ÌÇ¨Ïû†Í∏à
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÏä§ÌÇ¨ Ïû†Í∏à Î∞è Ìï¥Ï†úÎäî Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	if(0<msg.split(" ")[2]&&msg.split(" ")[2]<5){
	var n1=msg.split(" ")[1];
	var n2=msg.split(" ")[2];
	var n="";
	let p;
	p=pokInv[sender].deck[n1-1];
	if(n2<(p.skills.length+1)){
	n=p.skills[n2-1];
	p.skillslocked.push(n);
	p.skills.splice(p.skills.indexOf(n),1);
	pokInv[sender].deck[n1-1]=p;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nLv."+pokInv[sender].deck[n1-1].level+" "+pokInv[sender].deck[n1-1].name+"Ïùò Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\n"+printskills(pokInv[sender].deck[n1-1].skills,pokInv[sender].deck[n1-1].skillslocked));
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}

if(msg.split(" ")[0]==cmds.skillunlock)//Ïä§ÌÇ¨Ïû†Í∏àÌï¥Ï†ú
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÏä§ÌÇ¨ Ïû†Í∏à Î∞è Ìï¥Ï†úÎäî Îç±Ïóê Ïû•Ï∞©Îêú Ìè¨ÏºìÎ™¨Îßå Í∞ÄÎä•Ìï¥Ïöî.\nÎ®ºÏ†Ä Ìè¨ÏºìÎ™¨ÏùÑ Îç±Ïóê Ïû•Ï∞©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	else
	{
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	if(0<msg.split(" ")[2]&&msg.split(" ")[2]<5){
	var n1=msg.split(" ")[1];
	var n2=msg.split(" ")[2];
	var n="";
	let p;
	p=pokInv[sender].deck[n1-1];
	if(n2<(p.skillslocked.length+1)){
	n=p.skillslocked[n2-1];
	p.skills.push(n);
	p.skillslocked.splice(p.skillslocked.indexOf(n),1);
	pokInv[sender].deck[n1-1]=p;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\nLv."+pokInv[sender].deck[n1-1].level+" "+pokInv[sender].deck[n1-1].name+"Ïùò Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\n"+printskills(pokInv[sender].deck[n1-1].skills,pokInv[sender].deck[n1-1].skillslocked));
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
	}
}

if(msg.split(" ")[0]==cmds.swap)//ÏàúÏÑúÎ≥ÄÍ≤Ω
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1)&&0<msg.split(" ")[2]&&msg.split(" ")[2]<(pokInv[sender].deck.length+1)&&msg.split(" ")[1]!=msg.split(" ")[2])
	{
	var n1=msg.split(" ")[1];
	var n2=msg.split(" ")[2];
	let p;
	p=pokInv[sender].deck[n1-1];
	pokInv[sender].deck[n1-1]=pokInv[sender].deck[n2-1];
	pokInv[sender].deck[n2-1]=p;
	FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
	replier.reply("@"+sender+"\n"+pokInv[sender].deck[n1-1].name+", "+pokInv[sender].deck[n2-1].name+"Ïùò ÏàúÏÑúÎ•º Î≥ÄÍ≤ΩÌñàÏñ¥Ïöî!");
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.pokinfo)//Ìè¨ÏºìÎ™¨ Ï†ïÎ≥¥ ÏûêÏÑ∏Ìûà
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].box.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	let p;
	
	p=pokInv[sender].box[n-1];
	var pokdesc=typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type2")];
	if(p.formchange>0)
		pokdesc=typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"type2")];
	try{
		img=pokimglink(p.name,p.formchange);
		poklink="ko/wiki/"+encodeURIComponent(p.name+"_(Ìè¨ÏºìÎ™¨)");
//  	
		
		
		Kakao.sendLink(room, {
			"link_ver":"4.0",
			"template_id":(58796),
			"template_args":{
			//Ïù¥Í≥≥Ïóê ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.
			'POKIMG':img,
			'POKNAME':"Lv."+p.level+" "+p.name+"  "+pokdesc,
			'DESC':"ÏµúÎåÄ HP: "+p.hp+" Í≥µÍ≤©Î†•: "+p.atk+" Î∞©Ïñ¥Î†•: "+p.def+" Ïä§ÌîºÎìú: "+p.spd,
			'LINK':poklink
			}
			}, "custom")

	
	//
	}catch(e){
		replier.reply("Ïπ¥Ïπ¥Ïò§ÎßÅÌÅ¨ Ïò§Î•ò. Î¶¨ÏÖã ÌïúÎ≤à Ìï¥Ï£ºÏÑ∏Ïöî.\n\nLv."+p.level+" "+p.name+"  "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type2")]+"\n"+"ÏµúÎåÄ HP: "+p.hp+" Í≥µÍ≤©Î†•: "+p.atk+" Î∞©Ïñ¥Î†•: "+p.def+" Ïä§ÌîºÎìú: "+p.spd);
	}
	if(p.name=="Î©îÌÉÄÎ™Ω") replier.reply("Î≥¥Ïú† Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\nÎ≥ÄÏã† [‚ö™ÎÖ∏Îßê]\nÏÉÅÎåÄ Ìè¨ÏºìÎ™¨ÏúºÎ°ú Î≥ÄÏã†");
	else replier.reply("Î≥¥Ïú† Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\n"+printskills(p.skills,p.skillslocked));
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.split(" ")[0]==cmds.ball)//Î≥ºÍµ¨Îß§
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(setting.maxball+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	if((Number(pokUser[sender].balls)+Number(n))>setting.maxball) replier.reply("@"+sender+"\nÎ≥ºÏùÄ 50Í∞úÍπåÏßÄÎßå ÏÜåÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî.\nÌòÑÏû¨ Î≥¥Ïú† Í∞ØÏàò: "+pokUser[sender].balls);
	else
	{
		var price=setting.ballPrice[ballArr.indexOf(pokUser[sender].Ball)];
		price=price*n;
		price=Math.ceil(price*(100-pokUser[sender].balldc)/100);
		if(pokUser[sender].gold<price)
			replier.reply("@"+sender+"\nÎèàÏù¥ Î∂ÄÏ°±Ìï¥Ïöî.\nÍµ¨Îß§ ÌïÑÏöî Í∞ÄÍ≤©: "+price.comma()+"Ïõê");
		else
		{
			pokUser[sender].gold=pokUser[sender].gold-price;
			pokUser[sender].balls=Number(pokUser[sender].balls)+Number(n);
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
			replier.reply("@"+sender+"\n"+price.comma()+"ÏõêÏúºÎ°ú Î≥º "+n+"Í∞úÎ•º Íµ¨Îß§ÌñàÏñ¥Ïöî.");
		}
	}
	}else replier.reply("@"+sender+"\nÎ≥ºÏùÄ 50Í∞úÍπåÏßÄÎßå ÏÜåÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî.\nÌòÑÏû¨ Î≥¥Ïú† Í∞ØÏàò: "+pokUser[sender].balls);
}

if(msg.split(" ")[0]==cmds.dpokinfo)//Ìè¨ÏºìÎ™¨ Ï†ïÎ≥¥ ÏûêÏÑ∏Ìûà(Îç±)
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(0<msg.split(" ")[1]&&msg.split(" ")[1]<(pokInv[sender].deck.length+1)&&msg.indexOf(".")==(-1))
	{
	var n=msg.split(" ")[1];
	let p;
	p=pokInv[sender].deck[n-1];
	var pokdesc=typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type2")];
	if(p.formchange>0)
		pokdesc=typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name+"_"+p.formchange,"type2")];
	try{
		img=pokimglink(p.name,p.formchange);
		poklink="ko/wiki/"+encodeURIComponent(p.name+"_(Ìè¨ÏºìÎ™¨)");
		//    
		
		Kakao.sendLink(room, {
			"link_ver":"4.0",
			"template_id":(58796),
			"template_args":{
			//Ïù¥Í≥≥Ïóê ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.
			'POKIMG':img,
			'POKNAME':"Lv."+p.level+" "+p.name+"  "+pokdesc,
			'DESC':"ÏµúÎåÄ HP: "+p.hp+" Í≥µÍ≤©Î†•: "+p.atk+" Î∞©Ïñ¥Î†•: "+p.def+" Ïä§ÌîºÎìú: "+p.spd,
			'LINK':poklink
			}
			}, "custom")
	
	//
	}catch(e){
		replier.reply("Ïπ¥Ïπ¥Ïò§ÎßÅÌÅ¨ Ïò§Î•ò. Î¶¨ÏÖã ÌïúÎ≤à Ìï¥Ï£ºÏÑ∏Ïöî.\n\nLv."+p.level+" "+p.name+"  "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+p.name,"type2")]+"\n"+"ÏµúÎåÄ HP: "+p.hp+" Í≥µÍ≤©Î†•: "+p.atk+" Î∞©Ïñ¥Î†•: "+p.def+" Ïä§ÌîºÎìú: "+p.spd);
	}
	if(p.name=="Î©îÌÉÄÎ™Ω") replier.reply("Î≥¥Ïú† Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\nÎ≥ÄÏã† [‚ö™ÎÖ∏Îßê]\nÏÉÅÎåÄ Ìè¨ÏºìÎ™¨ÏúºÎ°ú Î≥ÄÏã†");
	else replier.reply("Î≥¥Ïú† Í∏∞Ïà†\n"+"\u200b".repeat(500)+"\n"+printskills(p.skills,p.skillslocked));
	}else replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
}

if(msg.startsWith(cmds.info))//Ìä∏Î†àÏù¥ÎÑàÏ†ïÎ≥¥
{
	var name=msg.substr(cmds.info.length);
	if(name.slice(-2)==("  ")) name.slice(0,-2);
	else if(name.slice(-1)==(" ")) name.slice(0,-1);
	if(name==""||name==undefined) name=sender;
	else name=name.substr(1);
	
	pokUser[name]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+name+'.json'));
	if(pokUser[name]==null){
        replier.reply('@'+name+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[name]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+name+'_inv.json'));
	var str="";
	if(pokInv[name].deck.length<1) str="\nÌòÑÏû¨ Ïû•Ï∞© Ï§ëÏù∏ Îç±Ïù¥ ÏóÜÏäµÎãàÎã§.\n";
	else{
		for(var i=0;i<pokInv[name].deck.length;i++)
			str=str+(i+1)+".  Lv."+pokInv[name].deck[i].level+" "+pokInv[name].deck[i].name+"\n";
		if(pokInv[name].deck.length<6)
		{
			for(var i=0;i<(6-pokInv[name].deck.length);i++)
				str=str+(pokInv[name].deck.length+(i+1))+".  (ÎπÑÏñ¥ ÏûàÏùå)\n";
		}
	}
	var winrate=Math.ceil(Number(pokUser[name].battlecount.win)*100/(Number(pokUser[name].battlecount.win)+Number(pokUser[name].battlecount.lose)));
	if(isNaN(winrate)) winrate=0;
	replier.reply(["["+pokUser[name].rank+"] "+name+"ÎãòÏùò Ï†ïÎ≥¥",
	"\u200b".repeat(500),
	"\n",
	"ÌòÑÏû¨ Ï≤¥Î†•: "+pokUser[name].hp+"/"+pokUser[name].maxHp,
	"Î≥¥Ïú†Í∏àÏï°: "+pokUser[name].gold.comma()+"Ïõê",
	"Î≥º: "+pokUser[name].Ball,
	"Î≥º 1Í∞úÎãπ Í∞ÄÍ≤©: "+Math.ceil(setting.ballPrice[ballArr.indexOf(pokUser[name].Ball)]*(100-pokUser[name].balldc)/100).comma()+"Ïõê("+pokUser[name].balldc+"% Ìï†Ïù∏)",
	"ÏïºÏÉù Ìè¨ÏºìÎ™¨ Î†àÎ≤®: "+(setting.minlevel+(ballArr.indexOf(pokUser[name].Ball)+1)*setting.balluplev+1)+"~"+(setting.minlevel+(ballArr.indexOf(pokUser[name].Ball)+1)*setting.balluplev+10),
	"ÌòÑÏû¨ Î≥º Í∞ØÏàò: "+pokUser[name].balls,
	"\n",
	"ÌòÑÏû¨ Ïû•Ï∞© Ï§ëÏù∏ Îç±",
	"„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°",
	str,
	"„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°",
	"\n",
	"Ìè¨ÏºìÎ™¨ Ï°∞Ïö∞ ÌöüÏàò: "+pokUser[name].count.total,
	"Ìè¨Ìöç ÏÑ±Í≥µ: "+pokUser[name].count.succ,
	"Ìè¨Ìöç Ïã§Ìå®: "+pokUser[name].count.fail,
	"Ìè¨Ìöç ÏÑ±Í≥µÎ•†: "+Math.ceil(Number(pokUser[name].count.succ)*100/(Number(pokUser[name].count.succ)+Number(pokUser[name].count.fail)))+"%",
	"\n",
	"Î¶¨Î≥∏: "+pokUser[name].ribbon,
	"ÌöçÎìùÌïú Î±ÉÏßÄ Í∞úÏàò: "+pokUser[name].badge+"Í∞ú",
	"Î∞∞ÌãÄ ÌöüÏàò: "+pokUser[name].battlecount.total,
	"Î∞∞ÌãÄ ÏäπÎ¶¨: "+pokUser[name].battlecount.win,
	"Î∞∞ÌãÄ Ìå®Î∞∞: "+pokUser[name].battlecount.lose,
	"Î∞∞ÌãÄ ÏäπÎ•†: "+winrate+"%",
	"\n",
	"ÌÉêÌóò ÏÑ±Í≥µÎ•†: "+pokUser[name].success+"%(+"+(pokUser[name].success-setting.success)+"%)",
	"Ìú¥Ïãù ÏÜåÏöîÏãúÍ∞Ñ: "+Number(pokUser[name].rest)/1000+"Ï¥àÎßàÎã§ Ï≤¥Î†• 1 ÌöåÎ≥µ",
	"ÌÉêÌóò ÏÜåÏöîÏãúÍ∞Ñ: "+Math.ceil(setting.castT.min*(100-pokUser[name].castT)/100)+"~"+Math.ceil(setting.castT.max*(100-pokUser[name].castT)/100)+"Ï¥à ("+pokUser[name].castT+"% Îã®Ï∂ï)",
	"\n",
	"Ìè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ/Ïä§ÌÇ¨ÎΩëÍ∏∞ Ìï†Ïù∏: "+pokUser[name].upgradedc+"%",
	"\n",
	"Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ Ï∂úÌòÑÎ•†: "+pokUser[name].stat.g5+"%(+"+(pokUser[name].stat.g5-setting.p.g5).toFixed(1)+"%)",
	"Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: "+pokUser[name].stat.g4+"%(+"+(pokUser[name].stat.g4-setting.p.g4).toFixed(1)+"%)",
	"Î†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: "+pokUser[name].stat.g3+"%(+"+(pokUser[name].stat.g3-setting.p.g3).toFixed(1)+"%)",
	"Í≥†Í∏â Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: "+pokUser[name].stat.g2+"%(+"+(pokUser[name].stat.g2-setting.p.g2).toFixed(1)+"%)",
	"ÏùºÎ∞ò Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: "+pokUser[name].stat.g1+"%(+"+(pokUser[name].stat.g1-setting.p.g1).toFixed(1)+"%)",
	"\n",
	"Ìè¨ÏºìÎ™¨ Í∑∏Î£πÎ≥Ñ Ìè¨ÌöçÎ•†",
	"Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏: "+pokUser[name].successcatch.g5+"%(+"+(pokUser[name].successcatch.g5-setting.catchsuccess[0]).toFixed(1)+"%)",
	"Ï†ÑÏÑ§: "+pokUser[name].successcatch.g4+"%(+"+(pokUser[name].successcatch.g4-setting.catchsuccess[1]).toFixed(1)+"%)",
	"Î†àÏñ¥: "+pokUser[name].successcatch.g3+"%(+"+(pokUser[name].successcatch.g3-setting.catchsuccess[2]).toFixed(1)+"%)",
	"Í≥†Í∏â: "+pokUser[name].successcatch.g2+"%(+"+(pokUser[name].successcatch.g2-setting.catchsuccess[3]).toFixed(1)+"%)",
	"ÏùºÎ∞ò: "+pokUser[name].successcatch.g1+"%(+"+(pokUser[name].successcatch.g1-setting.catchsuccess[4]).toFixed(1)+"%)"].join("\n"));
}

if(msg==cmds.mycollection)//ÎÇ¥ Ïª¨Î†âÏÖò
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
	if(pokCol[sender]==null){
        let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(dogam));
		pokCol[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json'));
    }
	var res="";
	for(var ii of collectionnames){
		if(ii!='???')
			res=res+"["+ii+"] "+pokCol[sender][ii].length+"/"+collectioncontents[collectionnames.indexOf(ii)].length+"\n";
		else
			res=res+"[???] "+pokCol[sender][ii].length+"/???\n";
	}
	res=res+"\n"
	if(pokUser[sender].activecollection.length>0){
		res=res+"---ÌòÑÏû¨ Ï†ÅÏö©Ï§ëÏù∏ Ïª¨Î†âÏÖò Ìö®Í≥º---\n";
		for(var i=0;i<pokUser[sender].activecollection.length;i++)
		{
			if(Number(pokUser[sender].activecollection[i])>0&&Number(pokUser[sender].activecollection[i])<8)
				res=res+"Î∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ "+pokUser[sender].collectionlev*2+"% Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==8)
				res=res+"Î∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Ïä§ÌîºÎìú "+pokUser[sender].collectionlev*5+" Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==9)
				res=res+"Î∞∞ÌãÄ Ï§ë ÏÉÅÎåÄÎ∞© Î™ÖÏ§ëÎ•† "+pokUser[sender].collectionlev*3+"% Í∞êÏÜå\n(Î†ôÏ∞® Ìå®ÎÑêÌã∞ÏôÄ Ìï©Ìï¥ÏÑú 50%Î•º ÎÑòÏùÑ Ïàò ÏóÜÏùå)\n";
			else if(Number(pokUser[sender].activecollection[i])==10)
				res=res+"PVP Î∞∞ÌãÄ ÏÉÅÍ∏à X"+(pokUser[sender].collectionlev+1)+" Î∞∞\n";
			else if(Number(pokUser[sender].activecollection[i])==11)
				res=res+"Î∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Î∞©Ïñ¥Î†• "+pokUser[sender].collectionlev*30+" Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==12)
				res=res+"Î∞∞ÌãÄ Ï§ë ÏÉÅÎåÄÏùò Ìö®Í≥ºÍ∞Ä ÍµâÏû•Ìïú Í≥µÍ≤©Ïùò Îç∞ÎØ∏ÏßÄ "+pokUser[sender].collectionlev*5+"% Í∞êÏÜå\n";
			else if(Number(pokUser[sender].activecollection[i])==13)
				res=res+"Ï†úÎπÑÎΩëÍ∏∞ Ï¢ãÏùÄ Î≥¥ÏÉÅ ÌöçÎìù ÌôïÎ•† "+pokUser[sender].collectionlev+"% Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==14)
				res=res+"Î∞∞ÌãÄÏóêÏÑú ÏïÑÍµ∞Ïù¥ Ïì∞Îü¨Ïßà Í≥µÍ≤©ÏùÑ Î∞õÏùÑ Ïãú "+pokUser[sender].collectionlev*4+"% ÌôïÎ•†Î°ú Ï≤¥Î†• 1ÏùÑ ÎÇ®Í∏∞Í≥† ÏÉùÏ°¥\n";
			else if(Number(pokUser[sender].activecollection[i])==15)
				res=res+"Ï†úÎπÑÎΩëÍ∏∞ Î¶¨Î°úÎìú 1ÌöåÎãπ ÌöüÏàò Ï†úÌïú "+pokUser[sender].collectionlev+"Ìöå Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==16)
				res=res+"ÌÉêÌóò Ï§ë Îèà Î∞úÍ≤¨ Ïãú ÌöçÎìùÎüâ X"+(pokUser[sender].collectionlev+1)+" Î∞∞\n";
			else if(Number(pokUser[sender].activecollection[i])==17)
				res=res+"Ï∂îÍ∞Ä Ìè¨ÌöçÎ•† "+pokUser[sender].collectionlev+"% Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==18)
				res=res+"Ìè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ ÎπÑÏö© "+pokUser[sender].collectionlev*5+"% Í∞êÏÜå\n";
			else if(Number(pokUser[sender].activecollection[i])==19)
				res=res+"Î™®Îì† Îèà ÌöçÎìùÎüâ +"+pokUser[sender].collectionlev*10+"% Ï¶ùÍ∞Ä\n";
			else if(Number(pokUser[sender].activecollection[i])==20)
				res=res+"Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ Ï∂úÌòÑÏú® "+pokUser[sender].collectionlev+"% Ï¶ùÍ∞Ä\n";
		}
		res=res+"\n";
	}
	res=res+"---ÌòÑÏû¨ Ïª¨Î†âÏÖò Îì±Î°ù Ìè¨ÏºìÎ™¨ ÌòÑÌô©---\n";
	for(var ii of collectionnames){
		res=res+"["+ii+"]\n"+pokCol[sender][ii].join(", ")+"\n\n";
	}
	replier.reply("["+sender+"] ÎãòÏùò ÌòÑÏû¨ Ïª¨Î†âÏÖò\n"+"\u200b".repeat(500)+"\n"+res);
}

if(msg==cmds.rest)//Ìú¥Ïãù
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]!=0)
	{
		replier.reply('@'+sender+'\nÌÉêÌóò Î∞è Î∞∞ÌãÄ Ï§ëÏóî Ìú¥ÏãùÏùÑ Ìï† ÏàòÍ∞Ä ÏóÜÏñ¥Ïöî.');
		return;
	}
	if(pokUser[sender].hp>=pokUser[sender].maxHp)
	{
		replier.reply('@'+sender+'\nÏ≤¥Î†•Ïù¥ ÏµúÎåÄÏóêÏöî.');
		return;
	}
	if(pokUser[sender].restOn.on){ //Ìú¥ÏãùÏ¢ÖÎ£å
		let t=Number(Date.now());
        t=Math.ceil(Number((t-Number(pokUser[sender].restOn.time))/Number(pokUser[sender].rest)));
		pokUser[sender].hp=pokUser[sender].hp+t;
		if(pokUser[sender].hp>pokUser[sender].maxHp) pokUser[sender].hp=pokUser[sender].maxHp;
		pokUser[sender].restOn.on=0;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
		replier.reply('@'+sender+'\nÌú¥ÏãùÏùÑ Ï¢ÖÎ£åÌñàÏñ¥Ïöî.\nÌòÑÏû¨ Ï≤¥Î†•: '+pokUser[sender].hp+"/"+pokUser[sender].maxHp);
	}
	else{ //Ìú¥ÏãùÏãúÏûë
		pokUser[sender].restOn.time=Number(Date.now());
		pokUser[sender].restOn.on=1;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
		replier.reply('@'+sender+'\nÌú¥ÏãùÏùÑ ÏãúÏûëÌñàÏñ¥Ïöî.\n"'+cmds.rest+'"ÏùÑ Îã§Ïãú ÏÇ¨Ïö©ÌïòÎ©¥ Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌï† Ïàò ÏûàÏñ¥Ïöî.');
	}
}

if(msg==cmds.egg)//Ïïå Î∂ÄÌôî(ÏïÑÏù¥ÌÖú)
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].item.includes("ÏùºÎ∞òÏïå"))
	{
		pokInv[sender].item.splice(pokInv[sender].item.indexOf("ÏùºÎ∞òÏïå"),1);
		var rann=Math.floor(Math.random()*100);
		let pokname="";
		var islegend=0;
		if(rann==1)
		{
			pokname=pokArr.groupunknown[Math.floor(Math.random()*pokArr.groupunknown.length)];
			islegend=3;
		}
		else if(rann<4)
		{
			pokname=pokArr.group5[Math.floor(Math.random()*pokArr.group5.length)];
			islegend=2;
		}
		else if(rann>3&&rann<22)
		{
			pokname=pokArr.group4[Math.floor(Math.random()*pokArr.group4.length)];
			islegend=1;
		}
		else
		{
			pokname=pokArr.group3[Math.floor(Math.random()*pokArr.group3.length)];
		}
			var skillsarr=read("Ìè¨ÏºìÎ™¨/"+pokname,"skills");
			var caughtpokskills=[];
			var poklev=0;
			poklev=((ballArr.indexOf(pokUser[sender].Ball)+1)*setting.balluplev)+10;
			if(skillsarr.length<5)
				caughtpokskills=skillsarr;
			else
			{
				while(caughtpokskills.length<4)
				{
					var t=skillsarr[Math.floor(Math.random()*skillsarr.length)];
					t=t.replace("DP","").replace("Pt","");
					if(caughtpokskills.indexOf(t)==(-1))
						caughtpokskills.push(t);
				}
			}
			
			var caughtpokhp=read("Ìè¨ÏºìÎ™¨/"+pokname,"hp");
			
			let caughtpok={
				'name':pokname,
				'level':poklev,
				'hp': Math.ceil(caughtpokhp*poklev/50),
				'atk': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"atk")*poklev/50),
				'def': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"def")*poklev/50),
				'spd': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"spd")*poklev/50),
				'skills':caughtpokskills, //ÏúÑ 4Í∞úÎäî json read
				'skillslocked':[],
				'formchange':0,
				'islocked':0
			};
			pokInv[sender].box.push(caughtpok);
			let lt=pokname.length-1;
			if(islegend==1)
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <‚≠êÏ†ÑÏÑ§‚≠ê> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			else if(islegend==2)
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <ü¶ÑÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ü¶Ñ> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			else if(islegend==3)
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <???> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			else
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú [Î†àÏñ¥] Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
			replier.reply("@"+sender+"\nÌöçÎìùÌïú Ìè¨ÏºìÎ™¨ÏùÑ Ï†ÄÏû•ÌñàÏäµÎãàÎã§.");
			for(var ii of collectionnames){
				if(collectioncontents[collectionnames.indexOf(ii)].includes(pokname))
				{
					if(pokCol[sender][ii].indexOf(pokname)==(-1))
					{
						pokCol[sender][ii].push(pokname)
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(pokCol[sender]));
						replier.reply("@"+sender+"\nÎèÑÍ∞êÏùò ["+ii+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
						updatecollection(replier,sender);
						break;
					}
				}
			}
	}
}

if(msg==cmds.legendegg)//Ï†ÑÏÑ§Ïïå(ÏïÑÏù¥ÌÖú)
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].item.includes("Ï†ÑÏÑ§Ïïå"))
	{
		pokInv[sender].item.splice(pokInv[sender].item.indexOf("Ï†ÑÏÑ§Ïïå"),1);
		var rann=Math.floor(Math.random()*100);
		let pokname="";
		var islegend=0;
		if(rann==1)
		{
			pokname=pokArr.groupunknown[Math.floor(Math.random()*pokArr.groupunknown.length)];
			islegend=2;
		}
		else if(rann<4)
		{
			pokname=pokArr.group5[Math.floor(Math.random()*pokArr.group5.length)];
			islegend=1;
		}
		else
		{
			pokname=pokArr.group4[Math.floor(Math.random()*pokArr.group4.length)];
		}
			var skillsarr=read("Ìè¨ÏºìÎ™¨/"+pokname,"skills");
			var caughtpokskills=[];
			var poklev=0;
			poklev=((ballArr.indexOf(pokUser[sender].Ball)+1)*setting.balluplev)+10;
			if(skillsarr.length<5)
				caughtpokskills=skillsarr;
			else
			{
				while(caughtpokskills.length<4)
				{
					var t=skillsarr[Math.floor(Math.random()*skillsarr.length)];
					t=t.replace("DP","").replace("Pt","");
					if(caughtpokskills.indexOf(t)==(-1))
						caughtpokskills.push(t);
				}
			}
			
			var caughtpokhp=read("Ìè¨ÏºìÎ™¨/"+pokname,"hp");
			
			let caughtpok={
				'name':pokname,
				'level':poklev,
				'hp': Math.ceil(caughtpokhp*poklev/50),
				'atk': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"atk")*poklev/50),
				'def': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"def")*poklev/50),
				'spd': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+pokname,"spd")*poklev/50),
				'skills':caughtpokskills, //ÏúÑ 4Í∞úÎäî json read
				'skillslocked':[],
				'formchange':0,
				'islocked':0
			};
			pokInv[sender].box.push(caughtpok);
			let lt=pokname.length-1;
			if(islegend==1)
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <ü¶ÑÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ü¶Ñ> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			else if(islegend==2)
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <???> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			else
				replier.reply("@"+sender+"\nÏ∂ïÌïòÌï©ÎãàÎã§!\n ÏïåÏóêÏÑú <‚≠êÏ†ÑÏÑ§‚≠ê> Lv."+poklev+" "+pokname+(pokname[lt].normalize("NFD").length == 3 ? 'ÏùÑ' : 'Î•º')+" ÌöçÎìùÌñàÏäµÎãàÎã§!");
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json', JSON.stringify(pokInv[sender]));
			replier.reply("@"+sender+"\nÌöçÎìùÌïú Ìè¨ÏºìÎ™¨ÏùÑ Ï†ÄÏû•ÌñàÏäµÎãàÎã§.");
			for(var ii of collectionnames){
				if(collectioncontents[collectionnames.indexOf(ii)].includes(pokname))
				{
					if(pokCol[sender][ii].indexOf(pokname)==(-1))
					{
						pokCol[sender][ii].push(pokname)
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'_collection.json', JSON.stringify(pokCol[sender]));
						replier.reply("@"+sender+"\nÎèÑÍ∞êÏùò ["+ii+"] Ïóê ÏÉàÎ°úÏö¥ Ìè¨ÏºìÎ™¨Ïù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.");
						updatecollection(replier,sender);
						break;
					}
				}
			}
	}
}

if(msg==cmds.ballup)//Î≥ºÍ∞ïÌôî
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	var b=ballArr.indexOf(pokUser[sender].Ball);
	if(b==(ballArr.length-1))
		replier.reply("@"+sender+"\nÏù¥ÎØ∏ Î≥º Í∞ïÌôîÍ∞Ä ÏµúÎåÄÎ°ú ÏôÑÎ£åÎêòÏñ¥ ÏûàÏñ¥Ïöî.");
	else if(setting.ballupPrice[b]>pokUser[sender].gold)
		replier.reply("@"+sender+"\nÎ≥ºÏùÑ ÏóÖÍ∑∏Î†àÏù¥ÎìúÌïòÍ∏∞ ÏúÑÌïú ÎèàÏù¥ Î™®ÏûêÎùºÏöî.\nÏóÖÍ∑∏Î†àÏù¥Îìú ÎπÑÏö©: "+setting.ballupPrice[b].comma()+"Ïõê");
	else if(setting.ballupsucc[b]>pokUser[sender].count.total)
		replier.reply("@"+sender+"\nÌè¨ÏºìÎ™¨ÏùÑ Îçî ÎßéÏù¥ ÎßåÎÇòÏïº ÏóÖÍ∑∏Î†àÏù¥ÎìúÌï† Ïàò ÏûàÏñ¥Ïöî.\nÏóÖÍ∑∏Î†àÏù¥Îìú ÏöîÍµ¨ Ìè¨ÏºìÎ™¨ Î∞úÍ≤¨ ÌöüÏàò: "+setting.ballupsucc[b]+"Ìöå");
	else
	{
		pokUser[sender].gold=pokUser[sender].gold-setting.ballupPrice[b];
		pokUser[sender].Ball=ballArr[b+1];
		
		pokUser[sender].successcatch.g5=pokUser[sender].successcatch.g5+setting.ballcatch[0];
		pokUser[sender].successcatch.g4=pokUser[sender].successcatch.g4+setting.ballcatch[1];
		pokUser[sender].successcatch.g3=pokUser[sender].successcatch.g3+setting.ballcatch[2];
		pokUser[sender].successcatch.g2=pokUser[sender].successcatch.g2+setting.ballcatch[3];
		pokUser[sender].successcatch.g1=pokUser[sender].successcatch.g1+setting.ballcatch[4];
		
		pokUser[sender].stat.g5=pokUser[sender].stat.g5+setting.ballg5[b+1]-setting.ballg5[b];
		pokUser[sender].stat.g4=pokUser[sender].stat.g4+setting.ballg4[b+1]-setting.ballg4[b];
		pokUser[sender].stat.g3=pokUser[sender].stat.g3+setting.ballg3[b+1]-setting.ballg3[b];
		
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+sender+'.json', JSON.stringify(pokUser[sender]));
		replier.reply('@'+sender+'\n'+setting.ballupPrice[b].comma()+'ÏõêÏùÑ ÏßÄÎ∂àÌïòÏó¨\nÎ≥ºÏùÑ '+ballArr[b]+"ÏóêÏÑú "+pokUser[sender].Ball+"Î°ú ÏóÖÍ∑∏Î†àÏù¥ÎìúÌñàÏñ¥Ïöî.");
	}
}

if(msg==cmds.battleexit)//Î∞∞ÌãÄÏ∑®ÏÜå
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(player2==""&&player1==sender&&isbattle==0)
	{
		player1="";
		advOn[sender]=0;
		replier.reply('@'+sender+'\nÎ∞∞ÌãÄÏóêÏÑú Ìá¥Ïû•ÌñàÏñ¥Ïöî.');
	}
	else replier.reply('@'+sender+'\nÎ∞∞ÌãÄÏóê ÏûÖÏû•ÌïòÏßÄ ÏïäÏïòÍ±∞ÎÇò Ïù¥ÎØ∏ Î∞∞ÌãÄÏù¥ ÏãúÏûëÎêêÏñ¥Ïöî.');
	
}

if(msg==cmds.battlejoin)//Î∞∞ÌãÄÏ∞∏Í∞Ä
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]==3){
        replier.reply('@'+sender+'\nÏù¥ÎØ∏ Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌïú ÏÉÅÌÉúÏóêÏöî.');
        return;
    }
	else if(advOn[sender]!=0){
        replier.reply('@'+sender+'\nÌÉêÌóò Ï§ëÏóêÎäî Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌï† Ïàò ÏóÜÏñ¥Ïöî.');
        return;
    }
	
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎç±Ïóê Ïû•Ï∞©Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.\nÎ∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ÏÑú Îç±ÏúºÎ°ú Ïù¥ÎèôÏãúÏºú Ï£ºÏÑ∏Ïöî.");
	else
	{
		if(player1==""&&isbattle==0)
		{
			player1=sender;
			replier.reply("["+sender+"]ÎãòÏù¥ Î∞∞ÌãÄÏóê ÏûÖÏû•ÌïòÏÖ®ÏäµÎãàÎã§!\nÎã§Î•∏ Ï∞∏Í∞ÄÏûêÍ∞Ä ÏûÖÏû•Ìï†ÎïåÍπåÏßÄ ÎåÄÍ∏∞Ìï¥ Ï£ºÏÑ∏Ïöî.\n"+cmds.battleexit+" Î™ÖÎ†πÏñ¥Î°ú Îß§Ïπ≠ÏùÑ Ï∑®ÏÜåÌï† Ïàò ÏûàÏäµÎãàÎã§.");
			advOn[player1]=3;
		}
		else if(player2==""&&isbattle==0)
		{
			player2=sender;
			isbattle=1;
			advOn[player2]=3;
			player1retire=[];
			player2retire=[];
			replier.reply("["+sender+"]ÎãòÏù¥ Î∞∞ÌãÄÏóê ÏûÖÏû•ÌïòÏÖ®ÏäµÎãàÎã§!\n\n"+player1+"\nVS\n"+player2+"\n\nÎß§Ïπ≠Ïù¥ ÏÑ±ÏÇ¨ÎêòÏñ¥ Ïû†Ïãú ÌõÑ Î∞∞ÌãÄÏù¥ ÏãúÏûëÎê©ÎãàÎã§.");
			pokInv[player1]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player1+'_inv.json'));
			pokInv[player2]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player2+'_inv.json'));
			player1ball="";
			player2ball="";
			battleres="";
			player1pok={};
			player2pok={};
			player1pp=[];
			player2pp=[];
			isplayer1bind=0;
			isplayer2bind=0;
			isnpcbattle=0;
			nextpokchoose=0;
			player1maxhp=0;
			player2maxhp=0;
			weather=0;
			for(var i=0;i<(pokInv[player1].deck.length-player1retire.length);i++)
				player1ball=player1ball+"‚óã";
			for(var i=0;i<player1retire.length;i++)
				player1ball=player1ball+"‚óè";
			for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
				player2ball=player2ball+"‚óã";
			for(var i=0;i<player2retire.length;i++)
				player2ball=player2ball+"‚óè";
			java.lang.Thread.sleep(3000);
			replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
			player1pok=pokInv[player1].deck[0];
			player2pok=pokInv[player2].deck[0];
			player1maxhp=player1pok.hp;
			player2maxhp=player2pok.hp;
			var player1skillsarr=[];
			for(var j=0;j<player1pok.skills.length;j++)
				player1skillsarr.push(player1pok.skills[j]);
			for(var j=0;j<player1pok.skillslocked.length;j++)
				player1skillsarr.push(player1pok.skillslocked[j]);
			var player2skillsarr=[];
			for(var j=0;j<player2pok.skills.length;j++)
				player2skillsarr.push(player2pok.skills[j]);
			for(var j=0;j<player2pok.skillslocked.length;j++)
				player2skillsarr.push(player2pok.skillslocked[j]);
			if(player1pok.name=="Î©îÌÉÄÎ™Ω"){
				player1pok.name=player2pok.name;
				player1pok.hp=player2maxhp;
				player1pok.skills=player2pok.skills;
				player1pok.skillslocked=player2pok.skillslocked;
				player1pok.atk=player2pok.atk;
				player1pok.def=player2pok.def;
				player1pok.spd=player2pok.spd;
				player1skillsarr=player2skillsarr;
				player1maxhp=player2maxhp;
				replier.reply("@"+player1+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player1pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
			}
			else if(player2pok.name=="Î©îÌÉÄÎ™Ω"){
				player2pok.name=player1pok.name;
				player2pok.hp=player1maxhp;
				player2pok.skills=player1pok.skills;
				player2pok.skillslocked=player1pok.skillslocked;
				player2pok.atk=player1pok.atk;
				player2pok.def=player1pok.def;
				player2pok.spd=player1pok.spd;
				player2skillsarr=player1skillsarr;
				player2maxhp=player1maxhp;
				replier.reply("@"+player2+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player2pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
			}
			if(pokUser[player1].activecollection.includes(8))
				player1pok.spd=player1pok.spd+pokUser[player1].collectionlev*5;
			if(Number(pokUser[player2].activecollection.includes(8)))
				player2pok.spd=player2pok.spd+pokUser[player2].collectionlev*5;
			if(pokUser[player1].activecollection.includes(11))
				player1pok.def=player1pok.def+pokUser[player1].collectionlev*30;
			if(Number(pokUser[player2].activecollection.includes(11)))
				player2pok.def=player2pok.def+pokUser[player2].collectionlev*30;
			for(var i=0;i<player1skillsarr.length;i++)
			{
				try{
					player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
				}
				catch(e){
					player1pp.push(1);
				}
			}
			for(var i=0;i<player2skillsarr.length;i++)
			{
				try{
					player2pp.push(Number(read("Í∏∞Ïà†/"+player2skillsarr[i]),"pp"));
				}
				catch(e){
					player2pp.push(1);
				}
			}
			if(Math.floor(Math.random()*3)==1){
				let pokseason=JSON.parse(FileStream.read(pathseason));
				if(pokseason==null){
					let data={"month":1};
					FileStream.write(pathseason, JSON.stringify(data));
					pokseason=JSON.parse(FileStream.read(pathseason));
				}
				month=pokseason["month"];
				weather=month;
				if(weather==1) replier.reply("ÌñáÏÇ¥Ïù¥ Í∞ïÌï¥Ï°åÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==2) replier.reply("ÎπÑÍ∞Ä ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==3) replier.reply("Î™®ÎûòÎ∞îÎûåÏù¥ Î∂àÍ∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==4) replier.reply("Ïã∏ÎùºÍ∏∞ÎààÏù¥ ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
			}
			printbattlekakaolink(room,replier);
			do{
				battleturn(room,replier);
			}while(player1pok.hp>0&&player2pok.hp>0);
			replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
			battleres="";
			if(player1pok.hp<1)
			{
				player1retire.push(pokInv[player1].deck.indexOf(player1pok));
				let lt=player1pok.name.length-1;
				replier.reply("@"+player1+"\n"+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player1retire.length==pokInv[player1].deck.length)
				{
					var reward=Math.ceil(pokUser[player1].gold/10);
					if(Number(pokUser[player2].activecollection.includes(10)))
						reward=reward*(pokUser[player2].collectionlev+1);
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					pokUser[player1].gold=pokUser[player1].gold-reward;
					pokUser[player2].gold=pokUser[player2].gold+reward;
					pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player1].battlecount.lose=pokUser[player1].battlecount.lose+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player1].name)){
						let ruser={
							'name':pokUser[player1].name,
							'rank':pokUser[player1].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player1].battlecount.total;
						ruser.battle.win=pokUser[player1].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
						pokRank[n].rank=pokUser[player1].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
							pokRank[n].battle.total=pokUser[player1].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
							pokRank[n].battle.win=pokUser[player1].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
					replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=1;
					var res="";
					for(var i=0;i<pokInv[player1].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player1retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player1].deck[i].level+" "+pokInv[player1].deck[i].name+"\n";
					}
					replier.reply("@"+player1+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
			else if(player2pok.hp<1)
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					var reward=Math.ceil(pokUser[player2].gold/10);
					if(pokUser[player1].activecollection.includes(10))
						reward=reward*(pokUser[player1].collectionlev+1);
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					pokUser[player2].gold=pokUser[player2].gold-reward;
					pokUser[player1].gold=pokUser[player1].gold+reward;
					pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					pokUser[player1].battlecount.win=pokUser[player1].battlecount.win+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player1].name)){
						let ruser={
							'name':pokUser[player1].name,
							'rank':pokUser[player1].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player1].battlecount.total;
						ruser.battle.win=pokUser[player1].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
						pokRank[n].rank=pokUser[player1].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
							pokRank[n].battle.total=pokUser[player1].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
							pokRank[n].battle.win=pokUser[player1].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
					replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		else
		{
			replier.reply("@"+sender+"\nÏù¥ÎØ∏ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄÏù¥ ÏûàÏñ¥Ïöî.\n\nÌòÑÏû¨ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄ\n"+player1+" VS "+player2);
		}
	}
}

if(msg==cmds.battletower)//Î∞∞ÌãÄÌÉÄÏõå(ÏùºÏùº Î†àÏù¥Îìú)
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]==3){
        replier.reply('@'+sender+'\nÏù¥ÎØ∏ Îã§Î•∏ Î∞∞ÌãÄÏùÑ Îß§Ïπ≠ Ï§ëÏù∏ ÏÉÅÌÉúÏóêÏöî.\nÎ∞∞ÌãÄÏùÑ ÎÅùÎÇ¥ÏãúÍ±∞ÎÇò Îß§Ïπ≠ÏùÑ Ï∑®ÏÜåÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	else if(advOn[sender]!=0){
        replier.reply('@'+sender+'\nÌÉêÌóò Ï§ëÏóêÎäî Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌï† Ïàò ÏóÜÏñ¥Ïöî.');
        return;
    }
	if(pokUser[sender].hp<=4){
        replier.reply('@'+sender+' \nÎ∞∞ÌãÄÌÉÄÏõå ÎèÑÏ†ÑÏùÄ 1ÌöåÎãπ Ï≤¥Î†• 5Î•º ÏÜåÎ™®Ìï¥Ïöî.\n"'+cmds.rest+'" Î™ÖÎ†πÏñ¥Î•º ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	if(battletowerplayers[sender]==null||battletowerplayers[sender]==undefined)
				battletowerplayers[sender]=0;
	if(battletowerplayers[sender]>0)
	{
		replier.reply('@'+sender+"\nÎ∞∞ÌãÄÌÉÄÏõåÎäî 1Ìöå Î¶¨Î°úÎìú Îãπ 1ÌöåÎßå ÌÅ¥Î¶¨Ïñ¥ Í∞ÄÎä•Ìï©ÎãàÎã§.");
		return;
	}
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎç±Ïóê Ïû•Ï∞©Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.\nÎ∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ÏÑú Îç±ÏúºÎ°ú Ïù¥ÎèôÏãúÏºú Ï£ºÏÑ∏Ïöî.");
	else
	{
		if(player1==""&&isbattle==0)
		{
			player1="Ìè¨ÏºìÎ™¨ Ìä∏Î†àÏù¥ÎÑà";
			player2=sender;
			isbattle=4;
			advOn[player2]=3;
			player1retire=[];
			player2retire=[];
			trainerInv={};
			pokUser[sender].hp=pokUser[sender].hp-5;
			trainerInv[player1]={"deck":[]};
			pokInv[player2]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player2+'_inv.json'));
			battletowerlev[sender]=pokInv[sender].deck[0].level;
			var aipokname="";
			for(var ii=0;ii<6;ii++){
				aipokname=trainerranpoks[Math.floor(Math.random()*trainerranpoks.length)];
				var skillsarr=read("Ìè¨ÏºìÎ™¨/"+aipokname,"skills");
				var caugtpokskills=[];
				if(skillsarr.length<5)
					caugtpokskills=skillsarr;
				else
				{
					while(caugtpokskills.length<4)
					{
						var tt=skillsarr[Math.floor(Math.random()*skillsarr.length)];
						tt=tt.replace("DP","").replace("Pt","");
						if(caugtpokskills.indexOf(tt)==(-1))
							caugtpokskills.push(tt);
					}
				}
				
				var caugtpokhp=read("Ìè¨ÏºìÎ™¨/"+aipokname,"hp");
				
				let caugtpok={
					'name':aipokname,
					'level':battletowerlev[sender],
					'hp': Math.ceil(caugtpokhp*battletowerlev[sender]/50),
					'atk': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+aipokname,"atk")*battletowerlev[sender]/50),
					'def': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+aipokname,"def")*battletowerlev[sender]/50),
					'spd': Math.ceil(read("Ìè¨ÏºìÎ™¨/"+aipokname,"spd")*battletowerlev[sender]/50),
					'skills':caugtpokskills,
					'skillslocked':[],
					'formchange':0,
					'islocked':0
				};
				trainerInv[player1].deck.push(caugtpok);
			}
			replier.reply("@"+sender+"\nÎûúÎç§ÏúºÎ°ú Ìä∏Î†àÏù¥ÎÑàÍ∞Ä Îß§Ïπ≠ÎêòÏóàÏäµÎãàÎã§!\n\nÏû†Ïãú ÌõÑ Î∞∞ÌãÄÏù¥ ÏãúÏûëÎê©ÎãàÎã§.");
			player1ball="";
			player2ball="";
			battleres="";
			player1pok={};
			player2pok={};
			player1pp=[];
			player2pp=[];
			isplayer1bind=0;
			isplayer2bind=0;
			isnpcbattle=1;
			nextpokchoose=0;
			player1maxhp=0;
			player2maxhp=0;
			trainerpoknum=0;
			weather=0;
			for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
				player1ball=player1ball+"‚óã";
			for(var i=0;i<player1retire.length;i++)
				player1ball=player1ball+"‚óè";
			for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
				player2ball=player2ball+"‚óã";
			for(var i=0;i<player2retire.length;i++)
				player2ball=player2ball+"‚óè";
			java.lang.Thread.sleep(3000);
			replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
			trainerpoknum=1;
			player1pok=trainerInv[player1].deck[trainerpoknum-1];
			player2pok=pokInv[player2].deck[0];
			if(player1pok.formchange!=0)
			{
				player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
				player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
				player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
				player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
			}
			else{
			player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
			player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
			player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
			player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
			}
			//
			player1maxhp=player1pok.hp;
			player2maxhp=player2pok.hp;
			var player1skillsarr=[];
			for(var j=0;j<player1pok.skills.length;j++)
				player1skillsarr.push(player1pok.skills[j]);
			for(var j=0;j<player1pok.skillslocked.length;j++)
				player1skillsarr.push(player1pok.skillslocked[j]);
			var player2skillsarr=[];
			for(var j=0;j<player2pok.skills.length;j++)
				player2skillsarr.push(player2pok.skills[j]);
			for(var j=0;j<player2pok.skillslocked.length;j++)
				player2skillsarr.push(player2pok.skillslocked[j]);
			if(player2pok.name=="Î©îÌÉÄÎ™Ω"){
				player2pok.name=player1pok.name;
				player2pok.hp=player1maxhp;
				player2pok.skills=player1pok.skills;
				player2pok.skillslocked=player1pok.skillslocked;
				player2pok.atk=player1pok.atk;
				player2pok.def=player1pok.def;
				player2pok.spd=player1pok.spd;
				player2skillsarr=player1skillsarr;
				player2maxhp=player1maxhp;
				replier.reply("@"+player2+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player2pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
			}
			if(Number(pokUser[player2].activecollection.includes(8)))
				player2pok.spd=player2pok.spd+pokUser[player2].collectionlev*5;
			if(Number(pokUser[player2].activecollection.includes(11)))
				player2pok.def=player2pok.def+pokUser[player2].collectionlev*30;
			for(var i=0;i<player1skillsarr.length;i++)
			{
				try{
					player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
				}
				catch(e){
					player1pp.push(1);
				}
			}
			for(var i=0;i<player2skillsarr.length;i++)
			{
				try{
					player2pp.push(Number(read("Í∏∞Ïà†/"+player2skillsarr[i]),"pp"));
				}
				catch(e){
					player2pp.push(1);
				}
			}
			if(Math.floor(Math.random()*3)==1){
				let pokseason=JSON.parse(FileStream.read(pathseason));
				if(pokseason==null){
					let data={"month":1};
					FileStream.write(pathseason, JSON.stringify(data));
					pokseason=JSON.parse(FileStream.read(pathseason));
				}
				month=pokseason["month"];
				weather=month;
				if(weather==1) replier.reply("ÌñáÏÇ¥Ïù¥ Í∞ïÌï¥Ï°åÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==2) replier.reply("ÎπÑÍ∞Ä ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==3) replier.reply("Î™®ÎûòÎ∞îÎûåÏù¥ Î∂àÍ∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==4) replier.reply("Ïã∏ÎùºÍ∏∞ÎààÏù¥ ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
			}
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("ÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÏùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("ÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÍ∞Ä Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=[];
						for(var j=0;j<player1pok.skills.length;j++)
							player1skillsarr.push(player1pok.skills[j]);
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
							player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					var reward=battletowerlev[player2]*battletowerlev[player2]*10000;
					reward=reward*setting.eventp.goldX;
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					trainerInv={};
					trainerpoknum=0;
					battletowerplayers[player2]++;
					pokUser[player2].gold=pokUser[player2].gold+reward;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÎ∞∞ÌãÄÌÉÄÏõåÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
					updateribbon(replier,player2);
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÏôÄÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		else
		{
			replier.reply("@"+sender+"\nÏù¥ÎØ∏ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄÏù¥ ÏûàÍ±∞ÎÇò Ï≤¥Ïú°Í¥Ä ÎòêÎäî Ï±îÌîºÏñ∏Ïóê ÎèÑÏ†ÑÏ§ëÏù∏ Ïú†Ï†ÄÍ∞Ä ÏûàÏñ¥Ïöî.\n\nÌòÑÏû¨ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄ\n"+player1+" VS "+player2);
		}
	}
}

if(msg==cmds.gym)//Ï≤¥Ïú°Í¥Ä
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]==3){
        replier.reply('@'+sender+'\nÏù¥ÎØ∏ Îã§Î•∏ Î∞∞ÌãÄÏùÑ Îß§Ïπ≠ Ï§ëÏù∏ ÏÉÅÌÉúÏóêÏöî.\nÎ∞∞ÌãÄÏùÑ ÎÅùÎÇ¥ÏãúÍ±∞ÎÇò Îß§Ïπ≠ÏùÑ Ï∑®ÏÜåÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	else if(advOn[sender]!=0){
        replier.reply('@'+sender+'\nÌÉêÌóò Ï§ëÏóêÎäî Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌï† Ïàò ÏóÜÏñ¥Ïöî.');
        return;
    }
	if(pokUser[sender].hp<=4){
        replier.reply('@'+sender+' \nÏ≤¥Ïú°Í¥Ä ÎèÑÏ†ÑÏùÄ 1ÌöåÎãπ Ï≤¥Î†• 5Î•º ÏÜåÎ™®Ìï¥Ïöî.\n"'+cmds.rest+'" Î™ÖÎ†πÏñ¥Î•º ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎç±Ïóê Ïû•Ï∞©Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.\nÎ∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ÏÑú Îç±ÏúºÎ°ú Ïù¥ÎèôÏãúÏºú Ï£ºÏÑ∏Ïöî.");
	else
	{
		gymnum=0;
		if(pokUser[sender].badge>(-1))
		{
			
		}
		else{
			pokUser[sender].badge=null;
			pokUser[sender].badge=0;
			
		}
		gymnum=pokUser[sender].badge+1;
		if((gymnum-1)>17)
			replier.reply("@"+sender+"\nÎ™®Îì† Ï≤¥Ïú°Í¥ÄÏùò Î±ÉÏßÄÎ•º ÌöçÎìùÌïòÏó¨ Îçî ÎèÑÏ†ÑÌï† Ï≤¥Ïú°Í¥ÄÏù¥ ÏóÜÏäµÎãàÎã§.\nÏ±îÌîºÏñ∏Ïóê ÎèÑÏ†ÑÌï¥ Î≥¥ÏÑ∏Ïöî.");
		else if(player1==""&&isbattle==0)
		{
			player1="Ï≤¥Ïú°Í¥Ä Í¥ÄÏû•";
			player2=sender;
			isbattle=2;
			advOn[player2]=3;
			player1retire=[];
			player2retire=[];
			trainerInv={};
			pokUser[sender].hp=pokUser[sender].hp-5;
			replier.reply("@"+sender+"\n"+gymnum+"Î≤àÏß∏ Ï≤¥Ïú°Í¥Ä ÎèÑÏ†ÑÏùÑ ÏãúÏûëÌï©ÎãàÎã§!\n\nÏû†Ïãú ÌõÑ Î∞∞ÌãÄÏù¥ ÏãúÏûëÎê©ÎãàÎã§.");
			trainerInv[player1]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/trainer/gym_"+gymnum+'.json'));
			pokInv[player2]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player2+'_inv.json'));
			player1ball="";
			player2ball="";
			battleres="";
			player1pok={};
			player2pok={};
			player1pp=[];
			player2pp=[];
			isplayer1bind=0;
			isplayer2bind=0;
			isnpcbattle=1;
			nextpokchoose=0;
			player1maxhp=0;
			player2maxhp=0;
			trainerpoknum=0;
			weather=0;
			for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
				player1ball=player1ball+"‚óã";
			for(var i=0;i<player1retire.length;i++)
				player1ball=player1ball+"‚óè";
			for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
				player2ball=player2ball+"‚óã";
			for(var i=0;i<player2retire.length;i++)
				player2ball=player2ball+"‚óè";
			java.lang.Thread.sleep(3000);
			replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
			trainerpoknum=1;
			player1pok=trainerInv[player1].deck[trainerpoknum-1];
			player2pok=pokInv[player2].deck[0];
			//Ï≤¥Ïú°Í¥Ä Í¥ÄÏû• Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
			if(player1pok.formchange!=0)
			{
				player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
				player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
				player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
				player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
			}
			else{
			player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
			player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
			player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
			player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
			}
			//
			player1maxhp=player1pok.hp;
			player2maxhp=player2pok.hp;
			var player1skillsarr=[];
			for(var j=0;j<player1pok.skills.length;j++)
				player1skillsarr.push(player1pok.skills[j]);
			for(var j=0;j<player1pok.skillslocked.length;j++)
				player1skillsarr.push(player1pok.skillslocked[j]);
			var player2skillsarr=[];
			for(var j=0;j<player2pok.skills.length;j++)
				player2skillsarr.push(player2pok.skills[j]);
			for(var j=0;j<player2pok.skillslocked.length;j++)
				player2skillsarr.push(player2pok.skillslocked[j]);
			if(player2pok.name=="Î©îÌÉÄÎ™Ω"){
				player2pok.name=player1pok.name;
				player2pok.hp=player1maxhp;
				player2pok.skills=player1pok.skills;
				player2pok.skillslocked=player1pok.skillslocked;
				player2pok.atk=player1pok.atk;
				player2pok.def=player1pok.def;
				player2pok.spd=player1pok.spd;
				player2skillsarr=player1skillsarr;
				player2maxhp=player1maxhp;
				replier.reply("@"+player2+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player2pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
			}
			if(Number(pokUser[player2].activecollection.includes(8)))
				player2pok.spd=player2pok.spd+pokUser[player2].collectionlev*5;
			if(Number(pokUser[player2].activecollection.includes(11)))
				player2pok.def=player2pok.def+pokUser[player2].collectionlev*30;
			for(var i=0;i<player1skillsarr.length;i++)
			{
				try{
					player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
				}
				catch(e){
					player1pp.push(1);
				}
			}
			for(var i=0;i<player2skillsarr.length;i++)
			{
				try{
					player2pp.push(Number(read("Í∏∞Ïà†/"+player2skillsarr[i]),"pp"));
				}
				catch(e){
					player2pp.push(1);
				}
			}
			if(Math.floor(Math.random()*3)==1){
				let pokseason=JSON.parse(FileStream.read(pathseason));
				if(pokseason==null){
					let data={"month":1};
					FileStream.write(pathseason, JSON.stringify(data));
					pokseason=JSON.parse(FileStream.read(pathseason));
				}
				month=pokseason["month"];
				weather=month;
				if(weather==1) replier.reply("ÌñáÏÇ¥Ïù¥ Í∞ïÌï¥Ï°åÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==2) replier.reply("ÎπÑÍ∞Ä ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==3) replier.reply("Î™®ÎûòÎ∞îÎûåÏù¥ Î∂àÍ∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==4) replier.reply("Ïã∏ÎùºÍ∏∞ÎààÏù¥ ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
			}
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("Ï≤¥Ïú°Í¥Ä Í¥ÄÏû•Ïùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("Ï≤¥Ïú°Í¥Ä Í¥ÄÏû•Ïù¥ Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						//Ï≤¥Ïú°Í¥Ä Í¥ÄÏû• Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=[];
						for(var j=0;j<player1pok.skills.length;j++)
							player1skillsarr.push(player1pok.skills[j]);
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					var reward=2000000*(gymnum+1)*(gymnum+1);
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].gold=pokUser[player2].gold+reward;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					pokUser[player2].badge=pokUser[player2].badge+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ≤¥Ïú°Í¥Ä Í¥ÄÏû•ÏóêÍ≤åÏÑú ÏäπÎ¶¨ÌïòÏó¨ Î±ÉÏßÄÎ•º ÌöçÎìùÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê\nÌòÑÏû¨ Î±ÉÏßÄ Í∞úÏàò: "+pokUser[player2].badge+"Í∞ú");
					updateribbon(replier,player2);
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ≤¥Ïú°Í¥Ä Í¥ÄÏû•Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.\nÌòÑÏû¨ Î±ÉÏßÄ Í∞úÏàò: "+pokUser[player2].badge+"Í∞ú");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		else
		{
			replier.reply("@"+sender+"\nÏù¥ÎØ∏ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄÏù¥ ÏûàÍ±∞ÎÇò Ï≤¥Ïú°Í¥Ä ÎòêÎäî Ï±îÌîºÏñ∏Ïóê ÎèÑÏ†ÑÏ§ëÏù∏ Ïú†Ï†ÄÍ∞Ä ÏûàÏñ¥Ïöî.\n\nÌòÑÏû¨ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄ\n"+player1+" VS "+player2);
		}
	}
}

if(msg==cmds.champ)//Ï±îÌîºÏñ∏ÎèÑÏ†Ñ
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender]==null){
        replier.reply('@'+sender+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]==3){
        replier.reply('@'+sender+'\nÏù¥ÎØ∏ Îã§Î•∏ Î∞∞ÌãÄÏùÑ Îß§Ïπ≠ Ï§ëÏù∏ ÏÉÅÌÉúÏóêÏöî.\nÎ∞∞ÌãÄÏùÑ ÎÅùÎÇ¥ÏãúÍ±∞ÎÇò Îß§Ïπ≠ÏùÑ Ï∑®ÏÜåÌï¥ Ï£ºÏÑ∏Ïöî.');
        return;
    }
	else if(advOn[sender]!=0){
        replier.reply('@'+sender+'\nÌÉêÌóò Ï§ëÏóêÎäî Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌï† Ïàò ÏóÜÏñ¥Ïöî.');
        return;
    }
	if(pokUser[sender].hp<=4){
        replier.reply('@'+sender+' \nÏ±îÌîºÏñ∏ ÎèÑÏ†ÑÏùÄ 1ÌöåÎãπ Ï≤¥Î†• 5Î•º ÏÜåÎ™®Ìï¥Ïöî.\n"'+cmds.rest+'" Î™ÖÎ†πÏñ¥Î•º ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.');
        return;
    }
	
	pokInv[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'_inv.json'));
	if(pokInv[sender].deck.length<1)
		replier.reply("@"+sender+"\nÎç±Ïóê Ïû•Ï∞©Ìïú Ìè¨ÏºìÎ™¨Ïù¥ ÏóÜÏñ¥Ïöî.\nÎ∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ÏÑú Îç±ÏúºÎ°ú Ïù¥ÎèôÏãúÏºú Ï£ºÏÑ∏Ïöî.");
	else
	{
		gymnum=0;
		if(pokUser[sender].badge>(-1))
		{
			
		}
		else{
			pokUser[sender].badge=null;
			pokUser[sender].badge=0;
			
		}
		gymnum=pokUser[sender].badge+1;
		if(gymnum<18)
			replier.reply("@"+sender+"\nÏ±îÌîºÏñ∏ ÎèÑÏ†ÑÏùÄ Î™®Îì† Ï≤¥Ïú°Í¥ÄÏùÑ ÌÅ¥Î¶¨Ïñ¥Ìï¥ÏïºÎßå Í∞ÄÎä•Ìï¥Ïöî.");
		else if(player1==""&&isbattle==0)
		{
			let chamRank=JSON.parse(FileStream.read(pathchampRank));
			if(chamRank==null){
				let cdata={"Champnum":1,"Champlogs":[]};
				FileStream.write(pathchampRank, JSON.stringify(cdata));
				chamRank=JSON.parse(FileStream.read(pathchampRank));
			}
			if(chamRank["Champlogs"][chamRank["Champlogs"].length-1]==sender)
			{
				replier.reply('@'+sender+'\nÏù¥ÎØ∏ ÌòÑ Ï±îÌîºÏñ∏Ïù¥ÏóêÏöî.\nÎã§Î•∏ Ïú†Ï†ÄÏùò Ï±îÌîºÏñ∏ ÎèÑÏ†ÑÏùÑ Í∏∞Îã§Î†§ Î≥¥ÏÑ∏Ïöî.');
				return;
			}
			if(champplayers[sender]==null||champplayers[sender]==undefined)
				champplayers[sender]=0;
			if(champplayers[sender]>0)
			{
				replier.reply('@'+sender+"\nÏ±îÌîºÏñ∏ÏùÄ 1Ìöå Î¶¨Î°úÎìú Îãπ 1ÌöåÎßå Îê† Ïàò ÏûàÏñ¥Ïöî.");
				return;
			}
			player1="Ï±îÌîºÏñ∏";
			player2=sender;
			isbattle=3;
			advOn[player2]=3;
			player1retire=[];
			player2retire=[];
			trainerInv={};
			trainerInv[player1]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/trainer/champion.json"));
			pokUser[sender].hp=pokUser[sender].hp-5;
			replier.reply("@"+sender+"\nÎãòÏù¥ Ï±îÌîºÏñ∏ "+trainerInv[player1].champname+"ÏóêÍ≤å ÎèÑÏ†ÑÏùÑ ÏãúÏûëÌï©ÎãàÎã§!\n\nÏû†Ïãú ÌõÑ Î∞∞ÌãÄÏù¥ ÏãúÏûëÎê©ÎãàÎã§.");
			pokInv[player2]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+player2+'_inv.json'));
			player1ball="";
			player2ball="";
			battleres="";
			player1pok={};
			player2pok={};
			player1pp=[];
			player2pp=[];
			isplayer1bind=0;
			isplayer2bind=0;
			isnpcbattle=1;
			nextpokchoose=0;
			player1maxhp=0;
			player2maxhp=0;
			trainerpoknum=0;
			weather=0;
			for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
				player1ball=player1ball+"‚óã";
			for(var i=0;i<player1retire.length;i++)
				player1ball=player1ball+"‚óè";
			for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
				player2ball=player2ball+"‚óã";
			for(var i=0;i<player2retire.length;i++)
				player2ball=player2ball+"‚óè";
			java.lang.Thread.sleep(3000);
			replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
			trainerpoknum=1;
			player1pok=trainerInv[player1].deck[trainerpoknum-1];
			player2pok=pokInv[player2].deck[0];
			//Ï±îÌîºÏñ∏ Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
			if(player1pok.formchange!=0)
			{
				player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
				player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
				player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
				player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
			}
			else{
			player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
			player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
			player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
			player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
			}
			//
			player1maxhp=player1pok.hp;
			player2maxhp=player2pok.hp;
			var player1skillsarr=[];
			for(var j=0;j<player1pok.skills.length;j++)
				player1skillsarr.push(player1pok.skills[j]);
			for(var j=0;j<player1pok.skillslocked.length;j++)
				player1skillsarr.push(player1pok.skillslocked[j]);
			var player2skillsarr=[];
			for(var j=0;j<player2pok.skills.length;j++)
				player2skillsarr.push(player2pok.skills[j]);
			for(var j=0;j<player2pok.skillslocked.length;j++)
				player2skillsarr.push(player2pok.skillslocked[j]);
			if(player2pok.name=="Î©îÌÉÄÎ™Ω"){
				player2pok.name=player1pok.name;
				player2pok.hp=player1maxhp;
				player2pok.skills=player1pok.skills;
				player2pok.skillslocked=player1pok.skillslocked;
				player2pok.atk=player1pok.atk;
				player2pok.def=player1pok.def;
				player2pok.spd=player1pok.spd;
				player2skillsarr=player1skillsarr;
				player2maxhp=player1maxhp;
				replier.reply("@"+player2+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player2pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
			}
			if(Number(pokUser[player2].activecollection.includes(8)))
				player2pok.spd=player2pok.spd+pokUser[player2].collectionlev*5;
			if(Number(pokUser[player2].activecollection.includes(11)))
				player2pok.def=player2pok.def+pokUser[player2].collectionlev*30;
			for(var i=0;i<player1skillsarr.length;i++)
			{
				try{
					player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
				}
				catch(e){
					player1pp.push(1);
				}
			}
			for(var i=0;i<player2skillsarr.length;i++)
			{
				try{
					player2pp.push(Number(read("Í∏∞Ïà†/"+player2skillsarr[i]),"pp"));
				}
				catch(e){
					player2pp.push(1);
				}
			}
			if(Math.floor(Math.random()*3)==1){
				let pokseason=JSON.parse(FileStream.read(pathseason));
				if(pokseason==null){
					let data={"month":1};
					FileStream.write(pathseason, JSON.stringify(data));
					pokseason=JSON.parse(FileStream.read(pathseason));
				}
				month=pokseason["month"];
				weather=month;
				if(weather==1) replier.reply("ÌñáÏÇ¥Ïù¥ Í∞ïÌï¥Ï°åÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==2) replier.reply("ÎπÑÍ∞Ä ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==3) replier.reply("Î™®ÎûòÎ∞îÎûåÏù¥ Î∂àÍ∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
				else if(weather==4) replier.reply("Ïã∏ÎùºÍ∏∞ÎààÏù¥ ÎÇ¥Î¶¨Í∏∞ ÏãúÏûëÌñàÏñ¥Ïöî!\nÌòÑÏû¨ ÎÇ†Ïî®: "+weathertexts[weather]);
			}
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("Ï±îÌîºÏñ∏Ïùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("Ï±îÌîºÏñ∏Ïù¥ Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						//Ï≤¥Ïú°Í¥Ä Í¥ÄÏû• Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=[];
						for(var j=0;j<player1pok.skills.length;j++)
							player1skillsarr.push(player1pok.skills[j]);
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					pokUser[player2].badge=pokUser[player2].badge+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					newChampion(player2,replier);
					updateribbon(replier,player2);
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ±îÌîºÏñ∏Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		else
		{
			replier.reply("@"+sender+"\nÏù¥ÎØ∏ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄÏù¥ ÏûàÍ±∞ÎÇò Ï≤¥Ïú°Í¥Ä ÎòêÎäî Ï±îÌîºÏñ∏Ïóê ÎèÑÏ†ÑÏ§ëÏù∏ Ïú†Ï†ÄÍ∞Ä ÏûàÏñ¥Ïöî.\n\nÌòÑÏû¨ ÏßÑÌñâ Ï§ëÏù∏ Î∞∞ÌãÄ\n"+player1+" VS "+player2);
		}
	}
}

if(msg.split(" ")[0]==cmds.battlenext&&isbattle!=0)//Î∞∞ÌãÄ Îã§ÏùåÌè¨ÏºìÎ™¨
{
	
	if(advOn[sender]==undefined) advOn[sender]=0;
	if(advOn[sender]!=3){
        replier.reply('@'+sender+'\nÌÉêÌóò Ï§ëÏóêÎäî Î∞∞ÌãÄÏóê Ï∞∏Í∞ÄÌï† Ïàò ÏóÜÏñ¥Ïöî.');
        return;
    }
	if(pokUser[sender].restOn.on){
        replier.reply('@'+sender+' \nÌú¥Ïãù Ï§ëÏûÖÎãàÎã§.\n"'+cmds.rest+'" ÏùÑ ÏûÖÎ†•Ìï¥ÏÑú Ìú¥ÏãùÏùÑ Ï¢ÖÎ£åÌïòÏÑ∏Ïöî.');
        return;
    }
	if(nextpokchoose!=0){
		var nextpoknum=msg.split(" ")[1];
		if(player1==sender&&nextpokchoose==1&&isbattle==1){
			if(0<nextpoknum&&nextpoknum<(pokInv[player1].deck.length+1)&&msg.indexOf(".")==(-1)){
				if(player1retire.includes(nextpoknum-1))
				{
					var res="";
						for(var i=0;i<pokInv[player1].deck.length;i++)
						{
							res=res+(i+1)+". ";
							if(player1retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
							res=res+"Lv."+pokInv[player1].deck[i].level+" "+pokInv[player1].deck[i].name+"\n";
						}
						replier.reply("@"+player1+"\nÌï¥Îãπ Ìè¨ÏºìÎ™¨ÏùÄ Í∏∞Ï†àÌï¥ÏÑú ÎÇòÍ∞à Ïàò ÏóÜÏñ¥Ïöî.\nÎã§Î•∏ Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
						return;
				}
				else
				{
					player1pok={};
					player1pp=[];
					player1maxhp=0;
					player1ball="";
					player2ball="";
					for(var i=0;i<(pokInv[player1].deck.length-player1retire.length);i++)
						player1ball=player1ball+"‚óã";
					for(var i=0;i<player1retire.length;i++)
						player1ball=player1ball+"‚óè";
					for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
						player2ball=player2ball+"‚óã";
					for(var i=0;i<player2retire.length;i++)
						player2ball=player2ball+"‚óè";
					java.lang.Thread.sleep(2000);
					replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
					player1pok=pokInv[player1].deck[nextpoknum-1];
					player1maxhp=player1pok.hp;
					var player1skillsarr=[];
					for(var j=0;j<player1pok.skills.length;j++)
						player1skillsarr.push(player1pok.skills[j]);
					for(var j=0;j<player1pok.skillslocked.length;j++)
						player1skillsarr.push(player1pok.skillslocked[j]);
					if(player1pok.name=="Î©îÌÉÄÎ™Ω"){
						player1pok.name=player2pok.name;
						player1pok.hp=player2maxhp;
						player1pok.skills=player2pok.skills;
						player1pok.skillslocked=player2pok.skillslocked;
						player1pok.atk=player2pok.atk;
						player1pok.def=player2pok.def;
						player1pok.spd=player2pok.spd;
						player1skillsarr=player2skillsarr;
						player1maxhp=player2maxhp;
						replier.reply("@"+player1+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player1pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
					}
					if(pokUser[player1].activecollection.includes(8))
						player1pok.spd=player1pok.spd+pokUser[player1].collectionlev*5;
					if(pokUser[player1].activecollection.includes(11))
						player1pok.def=player1pok.def+pokUser[player1].collectionlev*30;
					for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
					
				}
			}else{
				replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
				return;
			}
		}
		else if(player2==sender&&nextpokchoose==2){
			if(0<nextpoknum&&nextpoknum<(pokInv[player2].deck.length+1)&&msg.indexOf(".")==(-1)){
				if(player2retire.includes(nextpoknum-1))
				{
					var res="";
						for(var i=0;i<pokInv[player2].deck.length;i++)
						{
							res=res+(i+1)+". ";
							if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
							res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
						}
						replier.reply("@"+player2+"\nÌï¥Îãπ Ìè¨ÏºìÎ™¨ÏùÄ Í∏∞Ï†àÌï¥ÏÑú ÎÇòÍ∞à Ïàò ÏóÜÏñ¥Ïöî.\nÎã§Î•∏ Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
						return;
				}
				else
				{
					player2pok={};
					player2pp=[];
					player2maxhp=0;
					player1ball="";
					player2ball="";
					if(isbattle==1){
						for(var i=0;i<(pokInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
					}
					else{
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
					}
					for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
						player2ball=player2ball+"‚óã";
					for(var i=0;i<player2retire.length;i++)
						player2ball=player2ball+"‚óè";
					java.lang.Thread.sleep(1000);
					replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
					player2pok=pokInv[player2].deck[nextpoknum-1];
					player2maxhp=player2pok.hp;
					var player2skillsarr=[];
					for(var j=0;j<player2pok.skills.length;j++)
						player2skillsarr.push(player2pok.skills[j]);
					for(var j=0;j<player2pok.skillslocked.length;j++)
						player2skillsarr.push(player2pok.skillslocked[j]);
					if(player2pok.name=="Î©îÌÉÄÎ™Ω"){
						player2pok.name=player1pok.name;
						player2pok.hp=player1maxhp;
						player2pok.skills=player1pok.skills;
						player2pok.skillslocked=player1pok.skillslocked;
						player2pok.atk=player1pok.atk;
						player2pok.def=player1pok.def;
						player2pok.spd=player1pok.spd;
						player2skillsarr=player1skillsarr;
						player2maxhp=player1maxhp;
						replier.reply("@"+player2+"\nÎ©îÌÉÄÎ™ΩÏùÄ "+player2pok.name+"Ïùò Î™®ÏäµÏúºÎ°ú Î≥ÄÏã†ÌñàÏñ¥Ïöî!");
					}
					if(Number(pokUser[player2].activecollection.includes(8)))
						player2pok.spd=player2pok.spd+pokUser[player2].collectionlev*5;
					if(Number(pokUser[player2].activecollection.includes(11)))
						player2pok.def=player2pok.def+pokUser[player2].collectionlev*30;
					for(var i=0;i<player2skillsarr.length;i++)
					{
						try{
							player2pp.push(Number(read("Í∏∞Ïà†/"+player2skillsarr[i]),"pp"));
						}
						catch(e){
							player2pp.push(1);
						}
					}
					
				}
			}else{
				replier.reply("@"+sender+"\nÏûòÎ™ª ÏûÖÎ†•ÌïòÏÖ®ÏäµÎãàÎã§.");
				return;
			}
		}
		else return;
		if(isbattle==1){
			printbattlekakaolink(room,replier);
			do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
			replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
			battleres="";
			if(player1pok.hp<1)
			{
					player1retire.push(pokInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("@"+player1+"\n"+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length==pokInv[player1].deck.length)
					{
						var reward=Math.ceil(pokUser[player1].gold/10);
						if(Number(pokUser[player2].activecollection.includes(10)))
							reward=reward*(pokUser[player2].collectionlev+1);
						isbattle=0;
						player1retire=[];
						player2retire=[];
						player1ball="";
						player2ball="";
						player1pok={};
						player2pok={};
						player1pp=[];
						player2pp=[];
						isplayer1bind=0;
						isplayer2bind=0;
						isnpcbattle=0;
						player1maxhp=0;
						player2maxhp=0;
						weather=0;
						nextpokchoose=0;
						battleres="";
						advOn[player1]=0;
						advOn[player2]=0;
						pokUser[player1].gold=pokUser[player1].gold-reward;
						pokUser[player2].gold=pokUser[player2].gold+reward;
						pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
						pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
						pokUser[player1].battlecount.lose=pokUser[player1].battlecount.lose+1;
						pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
						
						let pokRank=JSON.parse(FileStream.read(pathRank));
						if(pokRank==null){
							let data=[];
							FileStream.write(pathRank, JSON.stringify(data));
							pokRank=JSON.parse(FileStream.read(pathRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player1].name)){
							let ruser={
								'name':pokUser[player1].name,
								'rank':pokUser[player1].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player1].battlecount.total;
							ruser.battle.win=pokUser[player1].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
							pokRank[n].rank=pokUser[player1].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
								pokRank[n].battle.total=pokUser[player1].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
								pokRank[n].battle.win=pokUser[player1].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player2].name)){
							let ruser={
								'name':pokUser[player2].name,
								'rank':pokUser[player2].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player2].battlecount.total;
							ruser.battle.win=pokUser[player2].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
							pokRank[n].rank=pokUser[player2].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
								pokRank[n].battle.total=pokUser[player2].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
								pokRank[n].battle.win=pokUser[player2].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
						replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
						replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
						updateribbon(replier,player1);
						updateribbon(replier,player2);
						player1="";
						player2="";
					}
					else
					{
						nextpokchoose=1;
						var res="";
						for(var i=0;i<pokInv[player1].deck.length;i++)
						{
							res=res+(i+1)+". ";
							if(player1retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
							res=res+"Lv."+pokInv[player1].deck[i].level+" "+pokInv[player1].deck[i].name+"\n";
						}
						replier.reply("@"+player1+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
					}
			}
			else if(player2pok.hp<1)
			{
					player2retire.push(pokInv[player2].deck.indexOf(player2pok));
					let lt=player2pok.name.length-1;
					replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player2retire.length==pokInv[player2].deck.length)
					{
						var reward=Math.ceil(pokUser[player2].gold/10);
						if(pokUser[player1].activecollection.includes(10))
							reward=reward*(pokUser[player1].collectionlev+1);
						isbattle=0;
						player1retire=[];
						player2retire=[];
						player1ball="";
						player2ball="";
						player1pok={};
						player2pok={};
						player1pp=[];
						player2pp=[];
						isplayer1bind=0;
						isplayer2bind=0;
						isnpcbattle=0;
						weather=0;
						player1maxhp=0;
						player2maxhp=0;
						nextpokchoose=0;
						battleres="";
						advOn[player1]=0;
						advOn[player2]=0;
						pokUser[player2].gold=pokUser[player2].gold-reward;
						pokUser[player1].gold=pokUser[player1].gold+reward;
						pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
						pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
						pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
						pokUser[player1].battlecount.win=pokUser[player1].battlecount.win+1;
						let pokRank=JSON.parse(FileStream.read(pathRank));
						if(pokRank==null){
							let data=[];
							FileStream.write(pathRank, JSON.stringify(data));
							pokRank=JSON.parse(FileStream.read(pathRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player1].name)){
							let ruser={
								'name':pokUser[player1].name,
								'rank':pokUser[player1].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player1].battlecount.total;
							ruser.battle.win=pokUser[player1].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
							pokRank[n].rank=pokUser[player1].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
								pokRank[n].battle.total=pokUser[player1].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
								pokRank[n].battle.win=pokUser[player1].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player2].name)){
							let ruser={
								'name':pokUser[player2].name,
								'rank':pokUser[player2].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player2].battlecount.total;
							ruser.battle.win=pokUser[player2].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
							pokRank[n].rank=pokUser[player2].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
								pokRank[n].battle.total=pokUser[player2].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
								pokRank[n].battle.win=pokUser[player2].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
						replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
						replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
						updateribbon(replier,player1);
						updateribbon(replier,player2);
						player1="";
						player2="";
					}
					else
					{
						nextpokchoose=2;
						var res="";
						for(var i=0;i<pokInv[player2].deck.length;i++)
						{
							res=res+(i+1)+". ";
							if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
							res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
						}
						replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
					}
			}
		}
		else if(isbattle==3){
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("Ï±îÌîºÏñ∏Ïùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("Ï±îÌîºÏñ∏Ïù¥ Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						//Ï±îÌîºÏñ∏ Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=player1pok.skills;
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					pokUser[player2].badge=pokUser[player2].badge+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					newChampion(player2,replier);
					updateribbon(replier,player2);
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ±îÌîºÏñ∏Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		else if(isbattle==4){
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("ÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÏùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("ÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÍ∞Ä Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						//Ï≤¥Ïú°Í¥Ä Í¥ÄÏû• Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=player1pok.skills;
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					var reward=battletowerlev[player2]*battletowerlev[player2]*10000;
					reward=reward*setting.eventp.goldX;
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].gold=pokUser[player2].gold+reward;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					battletowerplayers[player2]++;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÎ∞∞ÌãÄÌÉÄÏõåÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÏôÄÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		//
		else{
			do{
				printbattlekakaolink(room,replier);
				do{
					battleturn(room,replier);
				}while(player1pok.hp>0&&player2pok.hp>0);
				replier.reply("Î∞∞ÌãÄ Í≤∞Í≥º\n"+"\u200b".repeat(500)+"\n"+battleres);
				battleres="";
				if(player1pok.hp<1){
					player1retire.push(trainerInv[player1].deck.indexOf(player1pok));
					let lt=player1pok.name.length-1;
					replier.reply("Ï≤¥Ïú°Í¥Ä Í¥ÄÏû•Ïùò "+player1pok.name+(player1pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
					java.lang.Thread.sleep(1000);
					if(player1retire.length!=trainerInv[player1].deck.length){
						replier.reply("Ï≤¥Ïú°Í¥Ä Í¥ÄÏû•Ïù¥ Îã§Ïùå Ìè¨ÏºìÎ™¨ÏùÑ Î∞∞ÌãÄÏóê ÎÇ¥Î≥¥ÎÉÖÎãàÎã§.");
						player1pok={};
						player1pp=[];
						player1maxhp=0;
						player1ball="";
						player2ball="";
						for(var i=0;i<(trainerInv[player1].deck.length-player1retire.length);i++)
							player1ball=player1ball+"‚óã";
						for(var i=0;i<player1retire.length;i++)
							player1ball=player1ball+"‚óè";
						for(var i=0;i<(pokInv[player2].deck.length-player2retire.length);i++)
							player2ball=player2ball+"‚óã";
						for(var i=0;i<player2retire.length;i++)
							player2ball=player2ball+"‚óè";
						java.lang.Thread.sleep(2000);
						replier.reply("["+player1+"]\n"+player1ball+"\n\n["+player2+"]\n"+player2ball);
						trainerpoknum=trainerpoknum+1;
						player1pok=trainerInv[player1].deck[trainerpoknum-1];
						//Ï≤¥Ïú°Í¥Ä Í¥ÄÏû• Ìè¨ÏºìÎ™¨Ïùò Ïä§ÌÖüÏùÄ Ïó¨Í∏∞ÏÑú ÏûêÎèô Í≥ÑÏÇ∞
						if(player1pok.formchange!=0)
						{
							player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"hp")*player1pok.level/50);
							player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"atk")*player1pok.level/50);
							player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"def")*player1pok.level/50);
							player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name+"_"+player1pok.formchange,"spd")*player1pok.level/50);
						}
						else{
						player1pok.hp=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"hp")*player1pok.level/50);
						player1pok.atk=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"atk")*player1pok.level/50);
						player1pok.def=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"def")*player1pok.level/50);
						player1pok.spd=Math.ceil(read("Ìè¨ÏºìÎ™¨/"+player1pok.name,"spd")*player1pok.level/50);
						}
						//
						player1maxhp=player1pok.hp;
						var player1skillsarr=player1pok.skills;
						for(var j=0;j<player1pok.skillslocked.length;j++)
							player1skillsarr.push(player1pok.skillslocked[j]);
						for(var i=0;i<player1skillsarr.length;i++)
						{
							try{
								player1pp.push(Number(read("Í∏∞Ïà†/"+player1skillsarr[i]),"pp"));
							}
							catch(e){
								player1pp.push(1);
							}
						}
						
					}
				}
			}while(player1retire.length!=trainerInv[player1].deck.length&&player2pok.hp>0);
			
			if(player1retire.length==trainerInv[player1].deck.length)
			{
					var reward=2000000*(gymnum+1)*(gymnum+1);
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].gold=pokUser[player2].gold+reward;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					pokUser[player2].badge=pokUser[player2].badge+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ≤¥Ïú°Í¥Ä Í¥ÄÏû•ÏóêÍ≤åÏÑú ÏäπÎ¶¨ÌïòÏó¨ Î±ÉÏßÄÎ•º ÌöçÎìùÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê\nÌòÑÏû¨ Î±ÉÏßÄ Í∞úÏàò: "+pokUser[player2].badge+"Í∞ú");
					player1="";
					player2="";

			}
			else
			{
				player2retire.push(pokInv[player2].deck.indexOf(player2pok));
				let lt=player2pok.name.length-1;
				replier.reply("@"+player2+"\n"+player2pok.name+(player2pok.name[lt].normalize("NFD").length == 3 ? 'Ïù¥' : 'Í∞Ä')+" Ïì∞Îü¨Ï°åÏñ¥Ïöî!");
				java.lang.Thread.sleep(1000);
				if(player2retire.length==pokInv[player2].deck.length)
				{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ≤¥Ïú°Í¥Ä Í¥ÄÏû•Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.\nÌòÑÏû¨ Î±ÉÏßÄ Í∞úÏàò: "+pokUser[player2].badge+"Í∞ú");
					player1="";
					player2="";
				}
				else
				{
					nextpokchoose=2;
					var res="";
					for(var i=0;i<pokInv[player2].deck.length;i++)
					{
						res=res+(i+1)+". ";
						if(player2retire.includes(i)) res=res+"(Í∏∞Ï†à) ";
						res=res+"Lv."+pokInv[player2].deck[i].level+" "+pokInv[player2].deck[i].name+"\n";
					}
					replier.reply("@"+player2+"\nÎã§ÏùåÏúºÎ°ú ÎÇ¥Î≥¥ÎÇº Ìè¨ÏºìÎ™¨ÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.\n("+cmds.battlenext+" (Ïà´Ïûê) Î™ÖÎ†πÏñ¥Î°ú ÏÑ†ÌÉù)\n\n"+res);
				}
			}
		}
		
	}
}

if(msg==cmds.giveup)//Î∞∞ÌãÄ Í∏∞Í∂å
{
	if(isbattle!=0){
		if(sender==player1&&isbattle==1)
			{
				replier.reply(player1+"ÎãòÏù¥ Î∞∞ÌãÄÏùÑ Í∏∞Í∂åÌñàÏñ¥Ïöî.");
				java.lang.Thread.sleep(1000);
				var reward=Math.ceil(pokUser[player1].gold/10);
				if(Number(pokUser[player2].activecollection.includes(10)))
					reward=reward*(pokUser[player2].collectionlev+1);
				isbattle=0;
				player1retire=[];
				player2retire=[];
				player1ball="";
				player2ball="";
				player1pok={};
				player2pok={};
				player1pp=[];
				player2pp=[];
				isplayer1bind=0;
				isplayer2bind=0;
				isnpcbattle=0;
				player1maxhp=0;
				player2maxhp=0;
				nextpokchoose=0;
				battleres="";
				advOn[player1]=0;
				advOn[player2]=0;
				pokUser[player1].gold=pokUser[player1].gold-reward;
				pokUser[player2].gold=pokUser[player2].gold+reward;
				pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
				pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
				pokUser[player1].battlecount.lose=pokUser[player1].battlecount.lose+1;
				pokUser[player2].battlecount.win=pokUser[player2].battlecount.win+1;
					
				let pokRank=JSON.parse(FileStream.read(pathRank));
				if(pokRank==null){
					let data=[];
					FileStream.write(pathRank, JSON.stringify(data));
					pokRank=JSON.parse(FileStream.read(pathRank));
				}
				if(!pokRank.some(e=>e.name==pokUser[player1].name)){
					let ruser={
						'name':pokUser[player1].name,
						'rank':pokUser[player1].rank,
						'battle':{'total':0,'win':0}
					};
					ruser.battle.total=pokUser[player1].battlecount.total;
					ruser.battle.win=pokUser[player1].battlecount.win;
					pokRank.push(ruser);
					FileStream.write(pathRank, JSON.stringify(pokRank));
				}
				else{
					let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
					pokRank[n].rank=pokUser[player1].rank;
					if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
						pokRank[n].battle.total=pokUser[player1].battlecount.total;
					if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
						pokRank[n].battle.win=pokUser[player1].battlecount.win;
					FileStream.write(pathRank, JSON.stringify(pokRank));
				}
				if(!pokRank.some(e=>e.name==pokUser[player2].name)){
					let ruser={
						'name':pokUser[player2].name,
						'rank':pokUser[player2].rank,
						'battle':{'total':0,'win':0}
					};
					ruser.battle.total=pokUser[player2].battlecount.total;
					ruser.battle.win=pokUser[player2].battlecount.win;
					pokRank.push(ruser);
					FileStream.write(pathRank, JSON.stringify(pokRank));
				}
				else{
					let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
					pokRank[n].rank=pokUser[player2].rank;
					if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
						pokRank[n].battle.total=pokUser[player2].battlecount.total;
					if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
						pokRank[n].battle.win=pokUser[player2].battlecount.win;
					FileStream.write(pathRank, JSON.stringify(pokRank));
				}
					
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
				FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
				replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
				replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
				updateribbon(replier,player1);
				updateribbon(replier,player2);
				player1="";
				player2="";
			}

			else if(sender==player2)
			{
					replier.reply(player2+"ÎãòÏù¥ Î∞∞ÌãÄÏùÑ Í∏∞Í∂åÌñàÏñ¥Ïöî.");
					java.lang.Thread.sleep(1000);
					if(isbattle==1){
						var reward=Math.ceil(pokUser[player2].gold/10);
						if(pokUser[player1].activecollection.includes(10))
							reward=reward*(pokUser[player1].collectionlev+1);
						isbattle=0;
						player1retire=[];
						player2retire=[];
						player1ball="";
						player2ball="";
						player1pok={};
						player2pok={};
						player1pp=[];
						player2pp=[];
						isplayer1bind=0;
						isplayer2bind=0;
						isnpcbattle=0;
						player1maxhp=0;
						player2maxhp=0;
						nextpokchoose=0;
						battleres="";
						advOn[player1]=0;
						advOn[player2]=0;
						pokUser[player2].gold=pokUser[player2].gold-reward;
						pokUser[player1].gold=pokUser[player1].gold+reward;
						pokUser[player1].battlecount.total=pokUser[player1].battlecount.total+1;
						pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
						pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
						pokUser[player1].battlecount.win=pokUser[player1].battlecount.win+1;
						let pokRank=JSON.parse(FileStream.read(pathRank));
						if(pokRank==null){
							let data=[];
							FileStream.write(pathRank, JSON.stringify(data));
							pokRank=JSON.parse(FileStream.read(pathRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player1].name)){
							let ruser={
								'name':pokUser[player1].name,
								'rank':pokUser[player1].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player1].battlecount.total;
							ruser.battle.win=pokUser[player1].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player1].name);
							pokRank[n].rank=pokUser[player1].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player1].battlecount.total)
								pokRank[n].battle.total=pokUser[player1].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player1].battlecount.win)
								pokRank[n].battle.win=pokUser[player1].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						if(!pokRank.some(e=>e.name==pokUser[player2].name)){
							let ruser={
								'name':pokUser[player2].name,
								'rank':pokUser[player2].rank,
								'battle':{'total':0,'win':0}
							};
							ruser.battle.total=pokUser[player2].battlecount.total;
							ruser.battle.win=pokUser[player2].battlecount.win;
							pokRank.push(ruser);
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						else{
							let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
							pokRank[n].rank=pokUser[player2].rank;
							if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
								pokRank[n].battle.total=pokUser[player2].battlecount.total;
							if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
								pokRank[n].battle.win=pokUser[player2].battlecount.win;
							FileStream.write(pathRank, JSON.stringify(pokRank));
						}
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player1+'.json', JSON.stringify(pokUser[player1]));
						FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
						replier.reply("@"+player2+"\nÎ∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\n"+reward.comma()+"ÏõêÏùÑ ÏûÉÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player2].gold.comma()+"Ïõê");
						replier.reply("@"+player1+"\nÎ∞∞ÌãÄÏóêÏÑú ÏäπÎ¶¨ÌñàÏñ¥Ïöî.\nÏÉÅÍ∏àÏúºÎ°ú "+reward.comma()+"ÏõêÏùÑ ÏñªÏóàÏñ¥Ïöî.\nÎ≥¥Ïú†Í∏àÏï°: "+pokUser[player1].gold.comma()+"Ïõê");
						updateribbon(replier,player1);
						updateribbon(replier,player2);
						player1="";
						player2="";
				}
				else if(isbattle==3){
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ±îÌîºÏñ∏Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else if(isbattle==4){
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏÉÅÎåÄ Ìä∏Î†àÏù¥ÎÑàÏôÄÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎ∞∞ÌãÄÌÉÄÏõå ÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.");
					player1="";
					player2="";
				}
				else{
					isbattle=0;
					player1retire=[];
					player2retire=[];
					player1ball="";
					player2ball="";
					battleres="";
					player1pok={};
					player2pok={};
					player1pp=[];
					player2pp=[];
					isplayer1bind=0;
					isplayer2bind=0;
					isnpcbattle=0;
					player1maxhp=0;
					player2maxhp=0;
					nextpokchoose=0;
					advOn[player1]=0;
					advOn[player2]=0;
					weather=0;
					gymnum=0;
					trainerInv={};
					trainerpoknum=0;
					pokUser[player2].battlecount.total=pokUser[player2].battlecount.total+1;
					pokUser[player2].battlecount.lose=pokUser[player2].battlecount.lose+1;
					
					let pokRank=JSON.parse(FileStream.read(pathRank));
					if(pokRank==null){
						let data=[];
						FileStream.write(pathRank, JSON.stringify(data));
						pokRank=JSON.parse(FileStream.read(pathRank));
					}
					if(!pokRank.some(e=>e.name==pokUser[player2].name)){
						let ruser={
							'name':pokUser[player2].name,
							'rank':pokUser[player2].rank,
							'battle':{'total':0,'win':0}
						};
						ruser.battle.total=pokUser[player2].battlecount.total;
						ruser.battle.win=pokUser[player2].battlecount.win;
						pokRank.push(ruser);
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					else{
						let n=pokRank.findIndex(e=>e.name==pokUser[player2].name);
						pokRank[n].rank=pokUser[player2].rank;
						if(Number(pokRank[n].battle.total)<pokUser[player2].battlecount.total)
							pokRank[n].battle.total=pokUser[player2].battlecount.total;
						if(Number(pokRank[n].battle.win)<pokUser[player2].battlecount.win)
							pokRank[n].battle.win=pokUser[player2].battlecount.win;
						FileStream.write(pathRank, JSON.stringify(pokRank));
					}
					
					FileStream.write("sdcard/Devel/Pokemon/Data/player_"+player2+'.json', JSON.stringify(pokUser[player2]));
					replier.reply("@"+player2+"\nÏ≤¥Ïú°Í¥Ä Í¥ÄÏû•Í≥ºÏùò Î∞∞ÌãÄÏóêÏÑú Ìå®Î∞∞ÌñàÏñ¥Ïöî.\nÎèÑÏ†ÑÏóê Ïã§Ìå®ÌñàÏñ¥Ïöî.\nÌòÑÏû¨ Î±ÉÏßÄ Í∞úÏàò: "+pokUser[player2].badge+"Í∞ú");
					player1="";
					player2="";
				}
			}
			else replier.reply("@"+sender+"\nÎ∞∞ÌãÄ Ï∞∏Í∞ÄÏûêÍ∞Ä ÏïÑÎãàÏóêÏöî.");
	}
}

if(msg==cmds.title)//Ìä∏Î†àÏù¥ÎÑàÎì±Í∏â
{
	var res=[];
	for(var i=0;i<(setting.rank.name.length-2);i++)
	{
		res.push(setting.rank.name[i]+"\nÌè¨ÏºìÎ™¨ "+setting.rank.upif[i]+"ÎßàÎ¶¨ Ìè¨ÌöçÏÑ±Í≥µ Ïãú Îì±Í∏âÏóÖ\nÏ∂îÍ∞Ä ÌÉêÌóò ÏÑ±Í≥µÎ•†: +"+setting.rank.success[i]+"%\nÏ∂îÍ∞Ä Ìè¨Ìöç ÏÑ±Í≥µÎ•†: +"+setting.rank.successcatch[i]+"%\nÏµúÎåÄ Ï≤¥Î†•: "+setting.rank.maxHp[i]+"\nÌÉêÌóò ÏÜåÏöîÏãúÍ∞Ñ Îã®Ï∂ï: -"+setting.rank.castT[i]+"%\nÌú¥ÏãùÏãú "+(setting.rank.rest[i]/1000)+"Ï¥àÎßàÎã§ Ï≤¥Î†• 1 ÌöåÎ≥µ\n");
	}
	res.push(setting.rank.name[(setting.rank.name.length-2)]+"\nÏ±îÌîºÏñ∏ÏóêÍ≤åÏÑú ÏäπÎ¶¨ Ïãú Îì±Í∏âÏóÖ\nÏ∂îÍ∞Ä ÌÉêÌóò ÏÑ±Í≥µÎ•†: +"+setting.rank.success[(setting.rank.name.length-2)]+"%\nÏ∂îÍ∞Ä Ìè¨Ìöç ÏÑ±Í≥µÎ•†: +"+setting.rank.successcatch[(setting.rank.name.length-2)]+"%\nÏµúÎåÄ Ï≤¥Î†•: "+setting.rank.maxHp[(setting.rank.name.length-2)]+"\nÌÉêÌóò ÏÜåÏöîÏãúÍ∞Ñ Îã®Ï∂ï: -"+setting.rank.castT[(setting.rank.name.length-2)]+"%\nÌú¥ÏãùÏãú "+(setting.rank.rest[(setting.rank.name.length-2)]/1000)+"Ï¥àÎßàÎã§ Ï≤¥Î†• 1 ÌöåÎ≥µ\n");
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Ìä∏Î†àÏù¥ÎÑà Îì±Í∏â"+"\u200b".repeat(500)+"\n"+res.join("\n"));
}

if(msg==cmds.ribbon)//Î¶¨Î≥∏Ï¢ÖÎ•ò
{
	var rewards=["-","-","-","Ìè¨ÏºìÎ™¨Ïùò Ïïå 1Í∞ú","2000Îßå Ïõê","Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò Ïïå 1Í∞ú","3Ïñµ Ïõê","Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨Ïùò Ïïå 3Í∞ú","10Ïñµ Ïõê","Lv.200 ÎÑ§ÌÅ¨Î°úÏ¶àÎßà","(ÎØ∏Íµ¨ÌòÑ)","(ÎØ∏Íµ¨ÌòÑ)"];
	var res=[];
	res.push("["+setting.ribbon.name[0]+"]\nÎ∞∞ÌãÄ 0Ìöå Ïãú ÏóÖÍ∑∏Î†àÏù¥Îìú\nÏ∂îÍ∞Ä Ìè¨Ìöç ÏÑ±Í≥µÎ•†: +"+setting.ribbon.successcatch[0]+"%\nÏ†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+setting.ribbon.g4[0]+"%\nÎ†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+setting.ribbon.g3[0]+"%\nÎ≥º Íµ¨Îß§ Ìï†Ïù∏: -"+setting.ribbon.balldc[0]+"%\nÌè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ Î∞è Ïä§ÌÇ¨ÎΩëÍ∏∞ Ìï†Ïù∏: -"+setting.ribbon.upgradedc[0]+"%\nÎã¨ÏÑ± Î≥¥ÏÉÅ: "+rewards[0]+"\n");
	for(var i=1;i<12;i++)
	{
		res.push("["+setting.ribbon.name[i]+"]\nÎ∞∞ÌãÄ "+setting.ribbon.upif[i-1]+"Ìöå Ïãú ÏóÖÍ∑∏Î†àÏù¥Îìú\nÏ∂îÍ∞Ä Ìè¨Ìöç ÏÑ±Í≥µÎ•†: +"+setting.ribbon.successcatch[i]+"%\nÏ†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+setting.ribbon.g4[i]+"%\nÎ†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+setting.ribbon.g3[i]+"%\nÎ≥º Íµ¨Îß§ Ìï†Ïù∏: -"+setting.ribbon.balldc[i]+"%\nÌè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ Î∞è Ïä§ÌÇ¨ÎΩëÍ∏∞ Ìï†Ïù∏: -"+setting.ribbon.upgradedc[i]+"%\nÎã¨ÏÑ± Î≥¥ÏÉÅ: "+rewards[i]+"\n");
	}
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Î¶¨Î≥∏ Ï¢ÖÎ•ò"+"\u200b".repeat(500)+"\n"+res.join("\n"));
}

if(msg==cmds.ballinfo)//Î≥ºÍ∞ïÌôî Ï¢ÖÎ•ò
{
	var res=[];
	for(var i=0;i<(ballArr.length-1);i++)
	{
		res.push("["+ballArr[i]+"]\nÏóÖÍ∑∏Î†àÏù¥Îìú ÎπÑÏö©: "+setting.ballupPrice[i].comma()+"\nÏóÖÍ∑∏Î†àÏù¥ÎìúÏóê ÌïÑÏöîÌïú Ìè¨ÏºìÎ™¨ Î∞úÍ≤¨ ÌöüÏàò: "+setting.ballupsucc[i]+"\nÎ≥º 1Í∞úÎãπ Í∞ÄÍ≤©: "+setting.ballPrice[i].comma()+"\nÏïºÏÉù Ìè¨ÏºìÎ™¨ Î†àÎ≤®: "+(setting.minlevel+(i+1)*setting.balluplev+1)+"~"+(setting.minlevel+(i+1)*setting.balluplev+10)+"\nÏ∂îÍ∞Ä Ìè¨ÌöçÎ•†\nÏ†ÑÏÑ§: +"+(setting.ballcatch[0]*i)+"%\nÎ†àÏñ¥: +"+(setting.ballcatch[1]*i)+"%\nÍ≥†Í∏â: +"+(setting.ballcatch[2]*i)+"%\nÏùºÎ∞ò: +"+(setting.ballcatch[3]*i)+"%\nÏ†ÑÏÑ§ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+(setting.ballg4[i])+"%\nÎ†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+(setting.ballg3[i])+"%\n");
	}
	res.push("["+ballArr[(ballArr.length-1)]+"]\nÏóÖÍ∑∏Î†àÏù¥Îìú ÎπÑÏö©: -\nÏóÖÍ∑∏Î†àÏù¥ÎìúÏóê ÌïÑÏöîÌïú Ìè¨ÏºìÎ™¨ Î∞úÍ≤¨ ÌöüÏàò: -\nÎ≥º 1Í∞úÎãπ Í∞ÄÍ≤©: "+setting.ballPrice[(ballArr.length-1)].comma()+"\nÏïºÏÉù Ìè¨ÏºìÎ™¨ Î†àÎ≤®: "+(setting.minlevel+((ballArr.length-1))*setting.balluplev+1)+"~"+(setting.minlevel+((ballArr.length-1))*setting.balluplev+10)+"\nÏ∂îÍ∞Ä Ìè¨ÌöçÎ•†\nÏ†ÑÏÑ§: +"+(setting.ballcatch[0]*(ballArr.length-1))+"%\nÎ†àÏñ¥: +"+(setting.ballcatch[1]*(ballArr.length-1))+"%\nÍ≥†Í∏â: +"+(setting.ballcatch[2]*(ballArr.length-1))+"%\nÏùºÎ∞ò: +"+(setting.ballcatch[3]*(ballArr.length-1))+"%\nÏ†ÑÏÑ§ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+(setting.ballg4[(ballArr.length-1)])+"%\nÎ†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•†: +"+(setting.ballg3[(ballArr.length-1)])+"%\n");
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Î≥º Í∞ïÌôî Î™©Î°ù"+"\u200b".repeat(500)+"\n"+res.join("\n"));
}

if(msg==cmds.collectioneffects)//Ïª¨Î†âÏÖò Ìö®Í≥º
{
	var res=["[Í¥ÄÎèôÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Ïä§ÌîºÎìú 5x(Ïª¨Î†âÏÖò Î†àÎ≤®) Ï¶ùÍ∞Ä\n",
	"[ÏÑ±ÎèÑÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏÉÅÎåÄÎ∞© Î™ÖÏ§ëÎ•† 3x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Í∞êÏÜå\n(Î†ôÏ∞® Ìå®ÎÑêÌã∞ÏôÄ Ìï©Ìï¥ÏÑú 50%Î•º ÎÑòÏùÑ Ïàò ÏóÜÏùå)\n",
	"[Ìò∏Ïó∞ÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nPVP Î∞∞ÌãÄ ÏÉÅÍ∏à X(Ïª¨Î†âÏÖò Î†àÎ≤®+1) Î∞∞\n",
	"[Ïã†Ïò§ÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Î∞©Ïñ¥Î†• 30x(Ïª¨Î†âÏÖò Î†àÎ≤®) Ï¶ùÍ∞Ä\n",
	"[ÌïòÎÇòÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏÉÅÎåÄÏùò Ìö®Í≥ºÍ∞Ä ÍµâÏû•Ìïú Í≥µÍ≤©Ïùò Îç∞ÎØ∏ÏßÄ 5x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Í∞êÏÜå\n",
	"[ÏπºÎ°úÏä§ÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÏ†úÎπÑÎΩëÍ∏∞ Ï¢ãÏùÄ Î≥¥ÏÉÅ ÌöçÎìù ÌôïÎ•† (Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n",
	"[ÏïåÎ°úÎùºÏßÄÎ∞©]",
	"---50% Îã¨ÏÑ±---\nÎ∞∞ÌãÄ Ï§ë ÏïÑÍµ∞Ïùò Îç∞ÎØ∏ÏßÄ 2x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÎ∞∞ÌãÄÏóêÏÑú ÏïÑÍµ∞Ïù¥ Ïì∞Îü¨Ïßà Í≥µÍ≤©ÏùÑ Î∞õÏùÑ Ïãú 4x(Ïª¨Î†âÏÖò Î†àÎ≤®)% ÌôïÎ•†Î°ú Ï≤¥Î†• 1ÏùÑ ÎÇ®Í∏∞Í≥† ÏÉùÏ°¥\n",
	"[Ï†ÑÏÑ§/ÌôòÏÉÅ]",
	"---50% Îã¨ÏÑ±---\nÏ†úÎπÑÎΩëÍ∏∞ 1ÌöåÎãπ ÌöüÏàò Ï†úÌïú (Ïª¨Î†âÏÖò Î†àÎ≤®)Ìöå Ï∂îÍ∞Ä\n---100% Îã¨ÏÑ±---\nÌÉêÌóò Ï§ë Îèà Î∞úÍ≤¨ Ïãú ÌöçÎìùÎüâ X(Ïª¨Î†âÏÖò Î†àÎ≤®+1) Î∞∞\n",
	"[Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏]",
	"---50% Îã¨ÏÑ±---\nÏ∂îÍ∞Ä Ìè¨ÌöçÎ•† (Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÌè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ ÎπÑÏö© 5x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Í∞êÏÜå\n",
	"[???]",
	"---50% Îã¨ÏÑ±---\nÎ™®Îì† Îèà ÌöçÎìùÎüâ +10x(Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n---100% Îã¨ÏÑ±---\nÏö∏Ìä∏ÎùºÎπÑÏä§Ìä∏ Ï∂úÌòÑÏú® (Ïª¨Î†âÏÖò Î†àÎ≤®)% Ï¶ùÍ∞Ä\n",
	];
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Ïª¨Î†âÏÖò Ìö®Í≥º Î™©Î°ù"+"\u200b".repeat(500)+"\n‚ÄªÏª¨Î†âÏÖò Î†àÎ≤®ÏùÄ 100%ÏàòÏßëÏùÑ Îã¨ÏÑ±Ìïú ÏßÄÏó≠ 1Í∞úÎãπ 1Ïî© Ïò§Î¶ÖÎãàÎã§.\n\n"+res.join("\n"));
}

if(msg==cmds.collectioninfo)//Ïª¨Î†âÏÖò Î™©Î°ù
{
	var res="";
	for(var ii of collectionnames){
		if(ii!="???")
			res=res+"["+ii+"]\n"+collectioncontents[collectionnames.indexOf(ii)].join(",")+"\n\n";
		else
			res=res+"[???]\n???, ???, ???, ???, ???, ???\n\n";
	}
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Ïª¨Î†âÏÖò Î™©Î°ù"+"\u200b".repeat(500)+"\nÏª¨Î†âÏÖò Ìö®Í≥º Î≥¥Í∏∞: "+cmds.collectioneffects+"\n\n"+res);
}

if(msg==cmds.rank)//Î∞∞ÌãÄ Îû≠ÌÇπ
{
	let pokRank=JSON.parse(FileStream.read(pathRank));
    if(pokRank==null){
        let data=[];
        FileStream.write(pathRank, JSON.stringify(data));
        pokRank=JSON.parse(FileStream.read(pathRank));
    }
    let rarr=[];
    var result="";
	if(pokRank.length==0||pokRank==undefined) result='‚Äª Îû≠ÌÇπÏóê Îì±Î°ùÎêú Ïú†Ï†ÄÍ∞Ä ÏóÜÏñ¥Ïöî.';
    else if(pokRank.length==1)
        result="[1ÏúÑ]\n<"+pokRank[0].rank+"> "+pokRank[0].name+"\nÏ¥ù Î∞∞ÌãÄ ÌöüÏàò: "+pokRank[0].battle.total+"\nÏäπÎ¶¨ ÌöüÏàò: "+pokRank[0].battle.win;
	else{
		pokRank.sort((a,b)=>b.battle.win-a.battle.win);
		var n;
		if(pokRank.length<setting.ranknum) n=pokRank.length;
		else n=setting.ranknum;
		for(var i=0; i<n; i++) rarr.push(pokRank[i]);
		for(var i=0;i<rarr.length;i++)
			result=result+"["+(i+1)+"ÏúÑ]\n<"+rarr[i].rank+"> "+rarr[i].name+"\nÏ¥ù Î∞∞ÌãÄ ÌöüÏàò: "+rarr[i].battle.total+"\nÏäπÎ¶¨ ÌöüÏàò: "+rarr[i].battle.win+"\n\n\n";
    }
	replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Îû≠ÌÇπ\n"+"\u200b".repeat(500)+"\n"+result);
}

if(msg==cmds.leaguechar)//Î¶¨Í∑∏Ï∫ê
{
	var pname=setting.leaguecharacter;
	img=pokimglink(pname,0);
	poklink="ko/wiki/"+encodeURIComponent(pname+"_(Ìè¨ÏºìÎ™¨)");
	try{
	Kakao.sendLink(room, {
			"link_ver":"4.0",
			"template_id":(58796),
			"template_args":{
			//Ïù¥Í≥≥Ïóê ÌÖúÌîåÎ¶ø Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.
			'POKIMG':img,
			'LINK':poklink,
			'POKNAME':"Lv."+(setting.championlev-10)+" "+pname+"  "+typetexts[read("Ìè¨ÏºìÎ™¨/"+pname,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+pname,"type2")],
			'DESC':"ÏµúÎåÄ HP: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"hp")*Math.ceil((setting.championlev-10)/50))+" Í≥µÍ≤©Î†•: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"atk")*Math.ceil((setting.championlev-10)/50))+" Î∞©Ïñ¥Î†•: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"def")*Math.ceil((setting.championlev-10)/50))+" Ïä§ÌîºÎìú: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"spd")*Math.ceil((setting.championlev-10)/50))
			}
			}, "custom")
	}catch(e){
		replier.reply("Ïπ¥Ïπ¥Ïò§ÎßÅÌÅ¨ Ïò§Î•ò. Î¶¨ÏÖã ÌïúÎ≤à Ìï¥Ï£ºÏÑ∏Ïöî.\n\nLv."+setting.maxlevel+" "+pname+"  "+typetexts[read("Ìè¨ÏºìÎ™¨/"+pname,"type1")]+" "+typetexts[read("Ìè¨ÏºìÎ™¨/"+pname,"type2")]+"\n\nÏµúÎåÄ HP: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"hp")*Math.ceil(setting.maxlevel/50))+" Í≥µÍ≤©Î†•: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"atk")*Math.ceil(setting.maxlevel/50))+" Î∞©Ïñ¥Î†•: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"def")*Math.ceil(setting.maxlevel/50))+" Ïä§ÌîºÎìú: "+(read("Ìè¨ÏºìÎ™¨/"+pname,"spd")*Math.ceil(setting.maxlevel/50)));
	}
	replier.reply("Î¶¨Í∑∏ Ï∫êÎ¶≠ÌÑ∞ ÌöçÎìù Î∞©Î≤ï\n-Ï±îÌîºÏñ∏Î¶¨Í∑∏ Ïö∞Ïäπ\n-Î¶¨Î≥∏ ["+setting.ribbon.name[9]+"] Îã®Í≥Ñ ÏóÖÍ∑∏Î†àÏù¥Îìú Î≥¥ÏÉÅ");
}

if(msg==cmds.uphelp)//Î™ÖÎ†πÏñ¥
{
	replier.reply(["Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Î™ÖÎ†πÏñ¥ Î™©Î°ù",
	"\u200b".repeat(500),
	"\n",
	cmds.help+": Í≤åÏûÑ ÏÜåÍ∞ú",
	cmds.uphelp+": ÎèÑÏõÄÎßê(Î™ÖÎ†πÏñ¥ Î™©Î°ù)",
	cmds.join+": ÌöåÏõêÍ∞ÄÏûÖ",
	cmds.leave+": ÌÉàÌá¥",
	cmds.play.join("/")+": ÌÉêÌóòÏãúÏûë",
	cmds.ballthrow.join("/")+": Î≥º ÎçòÏßÄÍ∏∞",
	cmds.esc.join("/")+": ÎèÑÎßùÍ∞ÄÍ∏∞",
	cmds.box+": Ìè¨ÏºìÎ™¨ Î≥¥Í¥ÄÌï®",
	cmds.mycollection+": Ïª¨Î†âÏÖò ÏàòÏßë ÌòÑÌô©",
	cmds.collectioninfo+": Ïª¨Î†âÏÖò Ìè¨ÏºìÎ™¨ Î™©Î°ù",
	cmds.collectioninfo+": Ïª¨Î†âÏÖò Ìö®Í≥º Ï¢ÖÎ•ò",
	cmds.info+": ÎÇ¥ Ìä∏Î†àÏù¥ÎÑà Ï†ïÎ≥¥ (ÎãâÎÑ§ÏûÑ Í∞ôÏù¥ ÏûÖÎ†• Ïãú Ìï¥Îãπ Ïú†Ï†Ä Ï†ïÎ≥¥)",
	cmds.ball+" (Ïà´Ïûê): Î≥º Íµ¨Îß§",
	cmds.rest+": Ìú¥Ïãù(Îã§Ïãú ÏÇ¨Ïö©Ïãú Ìú¥Ïãù Ï¢ÖÎ£å)",
	cmds.sell+": ÎÜìÏïÑÏ£ºÍ∏∞(Îèà ÌöçÎìù)\n(Î∞ïÏä§ Ï†ÑÏ≤¥ Ìè¨ÏºìÎ™¨Ïóê Ï†ÅÏö©, Îç±Ïóê Ïû•Ï∞© ÌòπÏùÄ Ïû†Í∏à ÏÉÅÌÉúÏùò Ìè¨ÏºìÎ™¨ÏùÄ Ï†úÏô∏)",
	cmds.skillchange+" (Îç± Î≤àÌò∏): Ïä§ÌÇ¨ ÎûúÎç§ ÎΩëÍ∏∞(Îèà ÏÜåÎ™®)",
	cmds.skilllock+"/"+cmds.skillunlock+" (Îç± Î≤àÌò∏) (Ïä§ÌÇ¨ Î≤àÌò∏): Ïä§ÌÇ¨ ÎΩëÍ∏∞ Ïãú Ïû†Í∏à Î∞è Ìï¥Ï†úÌï† Í∏∞Ïà† ÏÑ†ÌÉù",
	"(Ïû†Í∏à ÏÉÅÌÉúÏùò Í∏∞Ïà†ÏùÄ ÎΩëÍ∏∞ ÏãúÏóêÎèÑ Í≥†Ï†ï, Îã® Ïû†Í∏à Í∞ØÏàòÏóê Îî∞Îùº ÎΩëÍ∏∞ ÎπÑÏö© ÏÉÅÏäπ)",
	cmds.levelup+" (Îç± Î≤àÌò∏): Ìè¨ÏºìÎ™¨ Î†àÎ≤®ÏóÖ(Îèà ÏÜåÎ™®)",
	cmds.mega+" (Îç± Î≤àÌò∏): Ìè¨ÏºìÎ™¨ Î©îÍ∞ÄÏßÑÌôî(Í≥†Ï†ï ÎπÑÏö© 20Ïñµ ÏÜåÎ™®, 200Î†ô Ïù¥ÏÉÅÎßå Í∞ÄÎä•)",
	cmds.formchange+" (Îç± Î≤àÌò∏): Ìè¨ÏºìÎ™¨ ÌèºÏ≤¥Ïù∏ÏßÄ(Îèà ÏÜåÎ™®)",
	cmds.ballup+": Î≥º ÏóÖÍ∑∏Î†àÏù¥Îìú(Îèà ÏÜåÎ™®)",
	cmds.ballinfo+": Î≥º ÏóÖÍ∑∏Î†àÏù¥Îìú Î™©Î°ù",
	cmds.gatcha+": Ï†úÎπÑÎΩëÍ∏∞(ÎèÑÎ∞ïÏª®ÌÖêÏ∏†, Í≥†Ï†ï ÎπÑÏö© 1000Îßå Ïõê ÏÜåÎ™®)",
	cmds.battlejoin+": Î∞∞ÌãÄ(PVP), Îëê Î™ÖÏù¥ Ï∞∏Í∞Ä Ïãú Îß§Ïπ≠ÎêòÏñ¥ Î∞∞ÌãÄ ÏßÑÌñâ",
	cmds.eventinfo+": ÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ïù¥Î≤§Ìä∏ Î≥¥Í∏∞",
	cmds.title+": Ìä∏Î†àÏù¥ÎÑà Îì±Í∏â Î™©Î°ù",
	cmds.ribbon+": Î¶¨Î≥∏ Î™©Î°ù",
	cmds.leaguechar+": ÌòÑÏû¨ Î¶¨Í∑∏ Î≥¥ÏÉÅ Ìè¨ÏºìÎ™¨ Î≥¥Í∏∞",
	cmds.rank+": Ìä∏Î†àÏù¥ÎÑà Î∞∞ÌãÄ Îû≠ÌÇπ",
	cmds.giveup+": Î∞∞ÌãÄ Í∏∞Í∂å",
	cmds.battletower+": Î∞∞ÌãÄÌÉÄÏõå(ÏùºÏùº Ïª®ÌÖêÏ∏†)",
	cmds.gym+": Ï≤¥Ïú°Í¥Ä ÎèÑÏ†Ñ",
	cmds.champ+": Ï±îÌîºÏñ∏Î¶¨Í∑∏ ÎèÑÏ†Ñ(Î™®Îì† Ï≤¥Ïú°Í¥Ä ÌÅ¥Î¶¨Ïñ¥Ìï¥Ïïº ÎèÑÏ†Ñ Í∞ÄÎä•)",
	cmds.champinfo+": Ï±îÌîºÏñ∏Î¶¨Í∑∏ Ï†ïÎ≥¥",
	cmds.seasoninfo+": ÌòÑÏû¨ Í≥ÑÏ†à Î≥¥Í∏∞(Í≥ÑÏ†àÏùÄ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑ Ïãú 2%ÌôïÎ•†Î°ú ÏàúÌôò)"
	].join("\n"));
}

if(msg==cmds.help)//ÏÜåÍ∞ú
{
	replier.reply(["Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ V2.0",
	"Made By ÎîîÎ≤®Î°úÏù¥Îìú",
	"\u200b".repeat(500),
	"\n",
	"Ïπ¥Ïπ¥Ïò§ÌÜ°ÏóêÏÑú Ìè¨ÏºìÎ™¨ Í≤åÏûÑÏùÑ Ï¶êÍ≤® Î≥¥ÏÑ∏Ïöî!",
	"",
	cmds.play.join("/")+" Î™ÖÎ†πÏñ¥Î•º ÌÜµÌï¥ ÌÉêÌóòÏùÑ ÏãúÎèÑÌï† Ïàò ÏûàÏúºÎ©∞,",
	"ÌÉêÌóò ÏÑ±Í≥µ Ïãú ÏùºÏ†ïÎüâÏùò Îèà ÎòêÎäî Ìè¨ÏºìÎ™¨ÏùÑ Î∞úÍ≤¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
	"ÌïúÎ≤à ÌÉêÌóòÏùÑ ÏãúÎèÑÌïòÎ©¥ Ìè¨ÏºìÎ™¨ÏùÑ Î∞úÍ≤¨Ìï† ÎïåÍπåÏßÄ ÏûêÎèôÏúºÎ°ú Ïû¨ÏãúÎèÑÎêòÎØÄÎ°ú Í∏∞Îã§Î¶¨ÏãúÎ©¥ ÎêòÎ©∞,",
	"Ìè¨ÏºìÎ™¨ ÎØ∏Î∞úÍ≤¨ ÏãúÏóêÎäî Ïö¥Ïù¥ Ï¢ãÎã§Î©¥ ÌäπÎ≥ÑÌïú Î≥¥ÏÉÅÏùÑ ÌöçÎìùÌï† ÏàòÎèÑ ÏûàÏäµÎãàÎã§.",
	"",
	"Î∞úÍ≤¨Ìïú Ìè¨ÏºìÎ™¨ÏóêÍ≤ê "+cmds.ballthrow.join("/")+" Î•º ÌÜµÌï¥ Î≥ºÏùÑ ÎçòÏ†∏ÏÑú Ïû°ÏùÑ Ïàò ÏûàÍ≥†,",
	"Ïû°ÏùÄ Ìè¨ÏºìÎ™¨ÏùÑ Í∞ïÌôî Î∞è Ïä§ÌÇ¨ ÏÑ∏ÌåÖÏùÑ ÎßûÏ∂∞ Îç±ÏùÑ ÎßûÏ∂îÍ±∞ÎÇò, Î∞©ÏÉùÏãúÏºú ÎèàÏùÑ ÏñªÏùÑ ÏàòÎèÑ ÏûàÏäµÎãàÎã§.",
	"ÏùºÎ∂Ä Ìè¨ÏºìÎ™¨ÏùÄ ÏöîÍµ¨ÌïòÎäî Î†àÎ≤®ÏóÖ ÏàòÏπò ÎßåÏ°± Ïãú ÏßÑÌôîÌïòÏó¨ Îçî Í∞ïÌïú Ìè¨ÏºìÎ™¨ÏúºÎ°ú Î≥ÄÌïòÍ∏∞ÎèÑ Ìï©ÎãàÎã§.",
	"",
	"ÏùºÏ†ï ÏàòÏπòÏùò Ìè¨ÏºìÎ™¨ Ìè¨Ìöç ÏàòÎ•º Îã¨ÏÑ±Ìï† ÎïåÎßàÎã§ Ìä∏Î†àÏù¥ÎÑà Îì±Í∏âÏù¥ ÏÉÅÏäπÌïòÏó¨ Ïó¨Îü¨ ÌòúÌÉùÏù¥ Ï£ºÏñ¥ÏßÄÎ©∞,",
	"Ìè¨ÏºìÎ™¨ Ìè¨Ìöç Ïàò Ï∂©Ï°± Ïãú ÏùºÏ†ï Í∏àÏï°ÏùÑ Ìà¨ÏûêÌïòÏó¨ Î≥º Ï¢ÖÎ•òÎ•º ÏóÖÍ∑∏Î†àÏù¥ÎìúÌïòÏó¨ Îçî Ï¢ãÏùÄ Ìè¨ÏºìÎ™¨Ïùò Ï∂úÌòÑÎ•† Î∞è Ìè¨ÌöçÎ•†ÏùÑ Ïò¨Î¶¥ ÏàòÎèÑ ÏûàÏäµÎãàÎã§.",
	"‚ÄªÏ†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ÏùÄ Î≥º ÏóÖÍ∑∏Î†àÏù¥Îìú ["+ballArr[3]+"] Î∂ÄÌÑ∞ Îì±Ïû•Ìï©ÎãàÎã§.",
	"",
	"Ìè¨ÌöçÌïú Ìè¨ÏºìÎ™¨ÏúºÎ°ú Îç±ÏùÑ Íæ∏ÎØº ÌõÑÏóêÎäî Îã§Î•∏ Ïú†Ï†ÄÏôÄÏùò Î∞∞ÌãÄ(PVP) Î•º ÌÜµÌï¥ Í≤®Î£∞ Ïàò ÏûàÏúºÎ©∞,",
	"Ï≤¥Ïú°Í¥ÄÏóê ÎèÑÏ†ÑÌïòÏó¨ Î∞∞ÏßÄÏôÄ ÏÉÅÍ∏à Î≥¥ÏÉÅÏùÑ ÌöçÎìùÌï† Ïàò ÏûàÍ≥† Î™®Îì† Î∞∞ÏßÄÎ•º ÌöçÎìù Ïãú Ï±îÌîºÏñ∏Î¶¨Í∑∏ ÎèÑÏ†ÑÍ∂åÏù¥ Ï£ºÏñ¥ÏßëÎãàÎã§.",
	"",
	"Ï†ÑÏ≤¥ Î™ÖÎ†πÏñ¥ Î≥¥Í∏∞: "+cmds.uphelp
	].join("\n"));
}

if(msg==cmds.eventinfo)//Ïù¥Î≤§Ìä∏ Î≥¥Í∏∞
{
	var res="";
	if(setting.eventp.unknown!=0)
		res=res+"ÌûàÎì† Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä: +"+setting.eventp.unknown+"%\n";
	if(setting.eventp.g4!=0)
		res=res+"Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä: +"+setting.eventp.g4+"%\n";
	if(setting.eventp.g3!=0)
		res=res+"Î†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä: +"+setting.eventp.g3+"%\n";
	if(setting.eventp.g4catch!=0)
		res=res+"Ï†ÑÏÑ§Ïùò Ìè¨ÏºìÎ™¨ Ï∂îÍ∞Ä Ìè¨ÌöçÎ•†: +"+setting.eventp.g4catch+"%\n";
	if(setting.eventp.g3catch!=0)
		res=res+"Î†àÏñ¥ Ìè¨ÏºìÎ™¨ Ï∂îÍ∞Ä Ìè¨ÌöçÎ•†: +"+setting.eventp.g3catch+"%\n";
	if(setting.eventp.goldX!=1)
		res=res+"Î™®Îì† Îèà ÌöçÎìùÎüâ: X"+setting.eventp.goldX+"Î∞∞\n";
	if(res=="")
		replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Ïù¥Î≤§Ìä∏ Î™©Î°ù\n\nÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ïù¥Î≤§Ìä∏Í∞Ä ÏóÜÏäµÎãàÎã§.");
	else
		replier.reply("Ìè¨ÏºìÎ™¨Ïä§ÌÑ∞ Í≤åÏûÑ Ïù¥Î≤§Ìä∏ Î™©Î°ù\n\n"+res);
}

if(msg.split(" ")[0]=="@Ìå®ÏπòÏóÖÎéÉ")//ÌôïÎ•†ÏàòÏ†ï Ïù¥ÌõÑ ÏóÖÎéÉÏö©
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender].rank=='Í∞úÎ∞úÏûê'){
		var username=msg.substr("@Ìå®ÏπòÏóÖÎéÉ ".length);
		pokUser[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'.json'));
		if(pokUser[username]==null){
			replier.reply('@'+username+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
			return;
		}
		pokInv[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json'));
		
		var b=0;
		b=ballArr.indexOf(pokUser[username].Ball);
		var nowr=0;
		nowr=setting.rank.name.indexOf(pokUser[username].rank);
		while(pokUser[username].count.succ<=setting.rank.upif[nowr]){
				nowr--;
		}
		if(b>1){
			while(setting.ballupsucc[b-1]>pokUser[username].count.total)
			{
				b=b-1;
				pokUser[username].Ball=ballArr[b];
			}
		}
		pokUser[username].maxHp=setting.rank.maxHp[nowr];
		pokUser[username].rest=setting.rank.rest[nowr];
		pokUser[username].castT=setting.rank.castT[nowr];
		pokUser[username].success=setting.success+setting.rank.success[nowr];
		pokUser[username].rank=setting.rank.name[nowr];
		pokUser[username].Ball=ballArr[b];
		pokUser[username].successcatch.g5=setting.catchsuccess[0]+(setting.ballcatch[0]*b)+setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g4=setting.catchsuccess[1]+(setting.ballcatch[1]*b)+setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g3=setting.catchsuccess[2]+(setting.ballcatch[2]*b)+setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g2=setting.catchsuccess[3]+(setting.ballcatch[3]*b)+setting.rank.successcatch[nowr];
		pokUser[username].successcatch.g1=setting.catchsuccess[4]+(setting.ballcatch[4]*b)+setting.rank.successcatch[nowr];
		if(b>0){
			pokUser[username].stat.g5=setting.p.g5+setting.ballg5[b];
			pokUser[username].stat.g4=setting.p.g4+setting.ballg4[b];
			pokUser[username].stat.g3=setting.p.g3+setting.ballg3[b];
		}
		if(pokUser[username].ribbon==undefined) pokUser[username].ribbon=setting.ribbon.username[0];
		if(pokUser[username].balldc==undefined) pokUser[username].balldc=setting.ribbon.balldc[0];
		if(pokUser[username].upgradedc==undefined) pokUser[username].upgradedc=setting.ribbon.upgradedc[0];
		pokUser[username].successcatch.g5=pokUser[username].successcatch.g5+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].successcatch.g4=pokUser[username].successcatch.g4+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].successcatch.g3=pokUser[username].successcatch.g3+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].successcatch.g2=pokUser[username].successcatch.g2+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].successcatch.g1=pokUser[username].successcatch.g1+setting.ribbon.successcatch[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].stat.g4=pokUser[username].stat.g4+setting.ribbon.g4[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		pokUser[username].stat.g3=pokUser[username].stat.g3+setting.ribbon.g3[setting.ribbon.name.indexOf(pokUser[username].ribbon)];
		if(pokUser[username].badge>(-1))
		{
			
		}
		else{
			pokUser[username].badge=null;
			pokUser[username].badge=0;
		}
		if(pokUser[username].activecollection==undefined||pokUser[username].activecollection==null)
		{
			pokUser[username].activecollection=null;
			pokUser[username].activecollection=[];
		}
		if(pokUser[username].collectionlev==undefined||pokUser[username].collectionlev==null)
		{
			pokUser[username].collectionlev=null;
			pokUser[username].collectionlev=0;
		}
		pokCol[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json'));
		if(pokCol[username]==null){
			let dogam={'Í¥ÄÎèôÏßÄÎ∞©':[],'ÏÑ±ÎèÑÏßÄÎ∞©':[],'Ìò∏Ïó∞ÏßÄÎ∞©':[],'Ïã†Ïò§ÏßÄÎ∞©':[],'ÌïòÎÇòÏßÄÎ∞©':[],'ÏπºÎ°úÏä§ÏßÄÎ∞©':[],'ÏïåÎ°úÎùºÏßÄÎ∞©':[],'Ï†ÑÏÑ§/ÌôòÏÉÅ':[],'Ïö∏Ìä∏ÎùºÎπÑÏä§Ìä∏':[],'???':[]}
			FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json', JSON.stringify(dogam));
			pokCol[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json'));
		}
		
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_collection.json', JSON.stringify(pokCol[username]));
		replier.reply("@"+username+"\nÏÉàÎ°úÏö¥ Ìå®Ïπò Îç∞Ïù¥ÌÑ∞ Î∞òÏòÅ ÏôÑÎ£å.");
	}
	else{
		replier.reply("@"+username+"\nÍ∞úÎ∞úÏûêÎßå Í∞ÄÎä•Ìïú Í∏∞Îä•Ïù¥ÏóêÏöî.");
	}
}

if(msg==cmds.champinfo) //Î¶¨Í∑∏Ï†ïÎ≥¥
{
	let chamRank=JSON.parse(FileStream.read(pathchampRank));
	if(chamRank==null){
		let cdata={"Champnum":1,"Champlogs":[]};
			FileStream.write(pathchampRank, JSON.stringify(cdata));
			chamRank=JSON.parse(FileStream.read(pathchampRank));
	}
	var champrint="";
	if(chamRank["Champlogs"].length>1){
		for(var i=1;i<chamRank["Champlogs"].length;i++)
		{
			champrint=champrint+i+"ÎåÄ Ï±îÌîºÏñ∏: "+chamRank["Champlogs"][i]+"\n";
		}
	}
	else{
		champrint="ÏïÑÏßÅ Ï±îÌîºÏñ∏ Î¶¨Í∑∏ ÏäπÎ¶¨ÏûêÍ∞Ä ÎÇòÌÉÄÎÇòÏßÄ ÏïäÏïòÏäµÎãàÎã§.\n"+cmds.champ+" ÏùÑ ÌÜµÌï¥ Ï±îÌîºÏñ∏Î¶¨Í∑∏Ïóê ÎèÑÏ†ÑÌï¥ Î≥¥ÏÑ∏Ïöî!";
	}
	replier.reply("ÌòÑÏû¨ Ìè¨ÏºìÎ™¨ Ï±îÌîºÏñ∏Î¶¨Í∑∏ Ï†ïÎ≥¥\n(Î¶¨Í∑∏ ÎèÑÏ†Ñ: "+cmds.champ+")\n\n„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°\n‚öúÏãúÏ¶å 1 Ï±îÌîºÏñ∏‚öú\n\n[Ï±îÌîºÏñ∏] Korrie\n„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°„Ö°\nÏó≠ÎåÄ Ï±îÌîºÏñ∏ Í∏∞Î°ù\n\n"+champrint);
}

if(msg==cmds.seasoninfo) //Í≥ÑÏ†à
{
	let pokseason=JSON.parse(FileStream.read(pathseason));
	if(pokseason==null){
		let data={"month":1};
		FileStream.write(pathseason, JSON.stringify(data));
		pokseason=JSON.parse(FileStream.read(pathseason));
	}
	month=pokseason["month"];
	var seasontext=["","Î¥Ñ","Ïó¨Î¶Ñ","Í∞ÄÏùÑ","Í≤®Ïö∏"];
	var res="";
	if(month==1) res=res+"Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä Ìè¨ÏºìÎ™¨: "+seasons.spring.join(", ")+"\n\nÎ∞∞ÌãÄ Ïãú 1/3 ÌôïÎ•†Î°ú ÎÇ†Ïî®Í∞Ä "+weathertexts[month]+" ÏÉÅÌÉúÎ°ú Î≥ÄÌï®\n";
	else if(month==2) res=res+"Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä Ìè¨ÏºìÎ™¨: "+seasons.summer.join(", ")+"\n\nÎ∞∞ÌãÄ Ïãú 1/3 ÌôïÎ•†Î°ú ÎÇ†Ïî®Í∞Ä "+weathertexts[month]+" ÏÉÅÌÉúÎ°ú Î≥ÄÌï®\n";
	else if(month==3) res=res+"Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä Ìè¨ÏºìÎ™¨: "+seasons.autumn.join(", ")+"\n\nÎ∞∞ÌãÄ Ïãú 1/3 ÌôïÎ•†Î°ú ÎÇ†Ïî®Í∞Ä "+weathertexts[month]+" ÏÉÅÌÉúÎ°ú Î≥ÄÌï®\n";
	else if(month==4) res=res+"Ï∂úÌòÑÎ•† Ï¶ùÍ∞Ä Ìè¨ÏºìÎ™¨: "+seasons.winter.join(", ")+"\n\nÎ∞∞ÌãÄ Ïãú 1/3 ÌôïÎ•†Î°ú ÎÇ†Ïî®Í∞Ä "+weathertexts[month]+" ÏÉÅÌÉúÎ°ú Î≥ÄÌï®\n";
	replier.reply("ÌòÑÏû¨ Í≥ÑÏ†à: "+seasontext[month]+"\n\n"+res);
}

if(msg.split(" ")[0]=="@Ìè¨ÏºìÎ™¨Î≥µÍµ¨") //Ìè¨ÏºìÎ™¨ Î≥µÍµ¨Ïö©
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender].rank=='Í∞úÎ∞úÏûê'){
		var username=msg.split(" ")[1];
		pokUser[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'.json'));
		if(pokUser[username]==null){
			replier.reply('@'+username+'\nÍ∞ÄÏûÖ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.\n"'+cmds.join+'"ÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖÎ∂ÄÌÑ∞ ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.');
			return;
		}
		pokInv[username]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json'));
		var pokname=msg.split(" ")[2];
		let pokinfo={
			'name':pokname,
			'level':1
		};
		ispokfind.push(username);
		battlepokinfo.push(pokinfo);
		isballwaiting=[];
		advOn[username]=2;
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'.json', JSON.stringify(pokUser[username]));
		FileStream.write("sdcard/Devel/Pokemon/Data/player_"+username+'_inv.json', JSON.stringify(pokInv[username]));
		replier.reply('@'+username+'\nÍ∞úÎ∞úÏûêÏóê ÏùòÌï¥ '+pokname+" Ïùò Î∞úÍ≤¨ Ï†ïÎ≥¥Í∞Ä Î≥µÍµ¨ÎêòÏóàÏäµÎãàÎã§. Î≥ºÏùÑ ÎçòÏßà Ïàò ÏûàÏäµÎãàÎã§.");
		}
		else
			replier.reply("Í∞úÎ∞úÏûêÎßå Í∞ÄÎä•Ìï©ÎãàÎã§.");
}

if(msg=="@Ìè¨ÏºìÎ™¨Î¶¨ÏÖã") //Í∞ïÏ†úÎ¶¨ÏÖã
{
	pokUser[sender]=JSON.parse(FS.read("sdcard/Devel/Pokemon/Data/player_"+sender+'.json'));
	if(pokUser[sender].rank=='Í∞úÎ∞úÏûê'){
	replier.reply("Í∞ïÏ†ú Î¶¨Î°úÎìú. ÎπÑÏÉÅÏãúÏóêÎßå ÏÇ¨Ïö©Ìï¥ Ï£ºÏÑ∏Ïöî.");
	Api.reload("pok");
	}
	else
		replier.reply("Í∞úÎ∞úÏûêÎßå Í∞ÄÎä•Ìï©ÎãàÎã§.");
}
}

function onStartCompile() {
	var seasontext=["","Î¥Ñ","Ïó¨Î¶Ñ","Í∞ÄÏùÑ","Í≤®Ïö∏"];
	let pokseason=JSON.parse(FileStream.read(pathseason));
	if(pokseason==null){
		let data={"month":1};
		FileStream.write(pathseason, JSON.stringify(data));
		pokseason=JSON.parse(FileStream.read(pathseason));
	}
	month=pokseason["month"];
	gatchaplayers={};
	champplayers={};
    Api.replyRoom("ÎÇöÏãúÌÑ∞","Ìè¨ÏºìÎ™¨ Í≤åÏûÑ Î¶¨Î°úÎìú.\nÌòÑÏû¨ Í≥ÑÏ†à: "+seasontext[month]);
}